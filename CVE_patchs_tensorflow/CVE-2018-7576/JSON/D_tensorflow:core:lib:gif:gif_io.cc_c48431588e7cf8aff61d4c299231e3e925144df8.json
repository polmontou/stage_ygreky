"diff --git a/tensorflow/core/lib/gif/gif_io.cc b/tensorflow/core/lib/gif/gif_io.cc\nindex 0f6999c88fc..e5deb2b873e 100644\n--- a/tensorflow/core/lib/gif/gif_io.cc\n+++ b/tensorflow/core/lib/gif/gif_io.cc\n@@ -44,6 +44,14 @@ int input_callback(GifFileType* gif_file, GifByteType* buf, int size) {\n   return 0;\n }\n \n+static const char* GifErrorStringNonNull(int error_code) {\n+  const char* error_string = GifErrorString(error_code);\n+  if (error_string == nullptr) {\n+    return \"Unknown error\";\n+  }\n+  return error_string;\n+}\n+\n uint8* Decode(const void* srcdata, int datasize,\n               const std::function<uint8*(int, int, int, int)>& allocate_output,\n               string* error_string) {\n@@ -55,17 +63,17 @@ uint8* Decode(const void* srcdata, int datasize,\n     int error_code = D_GIF_SUCCEEDED;\n     if (gif_file && DGifCloseFile(gif_file, &error_code) != GIF_OK) {\n       LOG(WARNING) << \"Fail to close gif file, reason: \"\n-                   << GifErrorString(error_code);\n+                   << GifErrorStringNonNull(error_code);\n     }\n   });\n   if (error_code != D_GIF_SUCCEEDED) {\n     *error_string = strings::StrCat(\"failed to open gif file: \",\n-                                    GifErrorString(error_code));\n+                                    GifErrorStringNonNull(error_code));\n     return nullptr;\n   }\n   if (DGifSlurp(gif_file) != GIF_OK) {\n     *error_string = strings::StrCat(\"failed to slurp gif file: \",\n-                                    GifErrorString(gif_file->Error));\n+                                    GifErrorStringNonNull(gif_file->Error));\n     return nullptr;\n   }\n   if (gif_file->ImageCount <= 0) {"