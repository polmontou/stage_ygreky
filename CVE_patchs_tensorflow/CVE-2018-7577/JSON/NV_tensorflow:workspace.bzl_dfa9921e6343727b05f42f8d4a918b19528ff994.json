"# TensorFlow external dependencies that can be loaded in WORKSPACE files.\n\nload(\"//third_party/gpus:cuda_configure.bzl\", \"cuda_configure\")\nload(\"//third_party/tensorrt:tensorrt_configure.bzl\", \"tensorrt_configure\")\nload(\"//third_party/mkl:build_defs.bzl\", \"mkl_repository\")\nload(\"//third_party/git:git_configure.bzl\", \"git_configure\")\nload(\"//third_party/py:python_configure.bzl\", \"python_configure\")\n\nload(\"//third_party/sycl:sycl_configure.bzl\", \"sycl_configure\")\nload(\"//third_party/toolchains/clang6:repo.bzl\", \"clang6_configure\")\nload(\"//third_party/toolchains/cpus/arm:arm_compiler_configure.bzl\", \"arm_compiler_configure\")\nload(\"//third_party:repo.bzl\", \"tf_http_archive\")\nload(\"//third_party/clang_toolchain:cc_configure_clang.bzl\", \"cc_download_clang_toolchain\")\nload(\"@io_bazel_rules_closure//closure/private:java_import_external.bzl\", \"java_import_external\")\nload(\"@io_bazel_rules_closure//closure:defs.bzl\", \"filegroup_external\")\nload(\"//tensorflow/tools/def_file_filter:def_file_filter_configure.bzl\",\n     \"def_file_filter_configure\")\n\n\n# Sanitize a dependency so that it works correctly from code that includes\n# TensorFlow as a submodule.\ndef clean_dep(dep):\n  return str(Label(dep))\n\n# If TensorFlow is linked as a submodule.\n# path_prefix is no longer used.\n# tf_repo_name is thought to be under consideration.\ndef tf_workspace(path_prefix=\"\", tf_repo_name=\"\"):\n  # Note that we check the minimum bazel version in WORKSPACE.\n  clang6_configure(name=\"local_config_clang6\")\n  cc_download_clang_toolchain(name=\"local_config_download_clang\")\n  cuda_configure(name=\"local_config_cuda\")\n  tensorrt_configure(name=\"local_config_tensorrt\")\n  git_configure(name=\"local_config_git\")\n  sycl_configure(name=\"local_config_sycl\")\n  python_configure(name=\"local_config_python\")\n\n  # For windows bazel build\n  # TODO: Remove def file filter when TensorFlow can export symbols properly on Windows.\n  def_file_filter_configure(name = \"local_config_def_file_filter\")\n\n  # Point //external/local_config_arm_compiler to //external/arm_compiler\n  arm_compiler_configure(\n      name=\"local_config_arm_compiler\",\n      remote_config_repo=\"../arm_compiler\",\n      build_file = clean_dep(\"//third_party/toolchains/cpus/arm:BUILD\"))\n\n  mkl_repository(\n      name = \"mkl_linux\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/intel/mkl-dnn/releases/download/v0.12/mklml_lnx_2018.0.1.20171227.tgz\",\n          \"https://github.com/intel/mkl-dnn/releases/download/v0.12/mklml_lnx_2018.0.1.20171227.tgz\",\n      ],\n      sha256 = \"feacc3d82565c1231470359b42c696236fae873704e0b013436afba5fd4fd30f\",\n      strip_prefix = \"mklml_lnx_2018.0.1.20171227\",\n      build_file = clean_dep(\"//third_party/mkl:mkl.BUILD\")\n  )\n  mkl_repository(\n      name = \"mkl_windows\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/intel/mkl-dnn/releases/download/v0.12/mklml_win_2018.0.1.20171227.zip\",\n          \"https://github.com/intel/mkl-dnn/releases/download/v0.12/mklml_win_2018.0.1.20171227.zip\"\n      ],\n      sha256 = \"24bae8d7b22b431a654acadea43f2243c46ae6b1e5a73a4a936825f31d284ee4\",\n      strip_prefix = \"mklml_win_2018.0.1.20171227\",\n      build_file = clean_dep(\"//third_party/mkl:mkl.BUILD\")\n  )\n  mkl_repository(\n      name = \"mkl_darwin\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/intel/mkl-dnn/releases/download/v0.12/mklml_mac_2018.0.1.20171227.tgz\",\n          \"https://github.com/intel/mkl-dnn/releases/download/v0.12/mklml_mac_2018.0.1.20171227.tgz\"\n      ],\n      sha256 = \"0e954ec6fd3dc5e37f64c4043f6b5613dd687558da3df1028b3b7c29ff5cf77f\",\n      strip_prefix = \"mklml_mac_2018.0.1.20171227\",\n      build_file = clean_dep(\"//third_party/mkl:mkl.BUILD\")\n  )\n\n  if path_prefix:\n    print(\"path_prefix was specified to tf_workspace but is no longer used \" +\n          \"and will be removed in the future.\")\n\n  tf_http_archive(\n      name = \"mkl_dnn\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/intel/mkl-dnn/archive/v0.12.tar.gz\",\n          \"https://github.com/intel/mkl-dnn/archive/v0.12.tar.gz\",\n      ],\n      sha256 = \"86fa2a8c12a56e3b725945acedeaa82492746be02545aba6d710f097e013e19e\",\n      strip_prefix = \"mkl-dnn-0.12\",\n      build_file = clean_dep(\"//third_party/mkl_dnn:mkldnn.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"com_google_absl\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/abseil/abseil-cpp/archive/720c017e30339fd1786ce4aac68bc8559736e53f.tar.gz\",\n          \"https://github.com/abseil/abseil-cpp/archive/720c017e30339fd1786ce4aac68bc8559736e53f.tar.gz\",\n      ],\n     sha256 = \"5996380e3e8b981f55d1c8d58e709c00dbb4806ba367be75d0925a68cc2f6478\",\n     strip_prefix = \"abseil-cpp-720c017e30339fd1786ce4aac68bc8559736e53f\",\n     build_file = clean_dep(\"//third_party:com_google_absl.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"eigen_archive\",\n      urls = [\n          \"https://mirror.bazel.build/bitbucket.org/eigen/eigen/get/6913f0cf7d06.tar.gz\",\n          \"https://bitbucket.org/eigen/eigen/get/6913f0cf7d06.tar.gz\",\n      ],\n      sha256 = \"791b836cacd03e20bae5bdd25f1c4a5505a0a9975ba94a61eb4e2631fbd1d53a\",\n      strip_prefix = \"eigen-eigen-6913f0cf7d06\",\n      build_file = clean_dep(\"//third_party:eigen.BUILD\"),\n      patch_file = clean_dep(\"//third_party:eigen_fix_cuda_compilation.patch\")\n  )\n\n  tf_http_archive(\n      name = \"arm_compiler\",\n      sha256 = \"970285762565c7890c6c087d262b0a18286e7d0384f13a37786d8521773bc969\",\n      strip_prefix = \"tools-0e906ebc527eab1cdbf7adabff5b474da9562e9f/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/raspberrypi/tools/archive/0e906ebc527eab1cdbf7adabff5b474da9562e9f.tar.gz\",\n          # Please uncomment me, when the next upgrade happens. Then\n          # remove the whitelist entry in third_party/repo.bzl.\n          # \"https://github.com/raspberrypi/tools/archive/0e906ebc527eab1cdbf7adabff5b474da9562e9f.tar.gz\",\n      ],\n      build_file = clean_dep(\"//:arm_compiler.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"libxsmm_archive\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/hfp/libxsmm/archive/1.8.1.tar.gz\",\n          \"https://github.com/hfp/libxsmm/archive/1.8.1.tar.gz\",\n      ],\n      sha256 = \"2ade869c3f42f23b5263c7d594aa3c7e5e61ac6a3afcaf5d6e42899d2a7986ce\",\n      strip_prefix = \"libxsmm-1.8.1\",\n      build_file = clean_dep(\"//third_party:libxsmm.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"ortools_archive\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/google/or-tools/archive/253f7955c6a1fd805408fba2e42ac6d45b312d15.tar.gz\",\n          # Please uncomment me, when the next upgrade happens. Then\n          # remove the whitelist entry in third_party/repo.bzl.\n          # \"https://github.com/google/or-tools/archive/253f7955c6a1fd805408fba2e42ac6d45b312d15.tar.gz\",\n      ],\n      sha256 = \"932075525642b04ac6f1b50589f1df5cd72ec2f448b721fd32234cf183f0e755\",\n      strip_prefix = \"or-tools-253f7955c6a1fd805408fba2e42ac6d45b312d15/src\",\n      build_file = clean_dep(\"//third_party:ortools.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"com_googlesource_code_re2\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/google/re2/archive/26cd968b735e227361c9703683266f01e5df7857.tar.gz\",\n          \"https://github.com/google/re2/archive/26cd968b735e227361c9703683266f01e5df7857.tar.gz\",\n\n      ],\n      sha256 = \"e57eeb837ac40b5be37b2c6197438766e73343ffb32368efea793dfd8b28653b\",\n      strip_prefix = \"re2-26cd968b735e227361c9703683266f01e5df7857\",\n  )\n\n  tf_http_archive(\n      name = \"gemmlowp\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/google/gemmlowp/archive/7c7c744640ddc3d0af18fb245b4d23228813a71b.zip\",\n          \"https://github.com/google/gemmlowp/archive/7c7c744640ddc3d0af18fb245b4d23228813a71b.zip\",\n      ],\n      sha256 = \"b852cc90259a7357c8a323f108f2cec6e85979fc3b18b5590b99e0130044b2cf\",\n      strip_prefix = \"gemmlowp-7c7c744640ddc3d0af18fb245b4d23228813a71b\",\n  )\n\n  tf_http_archive(\n      name = \"farmhash_archive\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/google/farmhash/archive/816a4ae622e964763ca0862d9dbd19324a1eaf45.tar.gz\",\n          \"https://github.com/google/farmhash/archive/816a4ae622e964763ca0862d9dbd19324a1eaf45.tar.gz\",\n      ],\n      sha256 = \"6560547c63e4af82b0f202cb710ceabb3f21347a4b996db565a411da5b17aba0\",\n      strip_prefix = \"farmhash-816a4ae622e964763ca0862d9dbd19324a1eaf45\",\n      build_file = clean_dep(\"//third_party:farmhash.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"highwayhash\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/google/highwayhash/archive/dfcb97ca4fe9277bf9dc1802dd979b071896453b.tar.gz\",\n          \"https://github.com/google/highwayhash/archive/dfcb97ca4fe9277bf9dc1802dd979b071896453b.tar.gz\",\n      ],\n      sha256 = \"0f30a15b1566d93f146c8d149878a06e91d9bb7ec2cfd76906df62a82be4aac9\",\n      strip_prefix = \"highwayhash-dfcb97ca4fe9277bf9dc1802dd979b071896453b\",\n      build_file = clean_dep(\"//third_party:highwayhash.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"nasm\",\n      urls = [\n          \"https://mirror.bazel.build/www.nasm.us/pub/nasm/releasebuilds/2.12.02/nasm-2.12.02.tar.bz2\",\n          \"http://pkgs.fedoraproject.org/repo/pkgs/nasm/nasm-2.12.02.tar.bz2/d15843c3fb7db39af80571ee27ec6fad/nasm-2.12.02.tar.bz2\",\n      ],\n      sha256 = \"00b0891c678c065446ca59bcee64719d0096d54d6886e6e472aeee2e170ae324\",\n      strip_prefix = \"nasm-2.12.02\",\n      build_file = clean_dep(\"//third_party:nasm.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"jpeg\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/libjpeg-turbo/libjpeg-turbo/archive/1.5.1.tar.gz\",\n          \"https://github.com/libjpeg-turbo/libjpeg-turbo/archive/1.5.1.tar.gz\",\n      ],\n      sha256 = \"c15a9607892113946379ccea3ca8b85018301b200754f209453ab21674268e77\",\n      strip_prefix = \"libjpeg-turbo-1.5.1\",\n      build_file = clean_dep(\"//third_party/jpeg:jpeg.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"png_archive\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/glennrp/libpng/archive/v1.2.53.tar.gz\",\n          \"https://github.com/glennrp/libpng/archive/v1.2.53.tar.gz\",\n      ],\n      sha256 = \"716c59c7dfc808a4c368f8ada526932be72b2fcea11dd85dc9d88b1df1dfe9c2\",\n      strip_prefix = \"libpng-1.2.53\",\n      build_file = clean_dep(\"//third_party:png.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"org_sqlite\",\n      urls = [\n          \"https://mirror.bazel.build/www.sqlite.org/2017/sqlite-amalgamation-3200000.zip\",\n          \"http://www.sqlite.org/2017/sqlite-amalgamation-3200000.zip\",\n      ],\n      sha256 = \"208780b3616f9de0aeb50822b7a8f5482f6515193859e91ed61637be6ad74fd4\",\n      strip_prefix = \"sqlite-amalgamation-3200000\",\n      build_file = clean_dep(\"//third_party:sqlite.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"gif_archive\",\n      urls = [\n          \"https://mirror.bazel.build/ufpr.dl.sourceforge.net/project/giflib/giflib-5.1.4.tar.gz\",\n          \"http://pilotfiber.dl.sourceforge.net/project/giflib/giflib-5.1.4.tar.gz\",\n      ],\n      sha256 = \"34a7377ba834397db019e8eb122e551a49c98f49df75ec3fcc92b9a794a4f6d1\",\n      strip_prefix = \"giflib-5.1.4\",\n      build_file = clean_dep(\"//third_party:gif.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"six_archive\",\n      urls = [\n          \"https://mirror.bazel.build/pypi.python.org/packages/source/s/six/six-1.10.0.tar.gz\",\n          \"https://pypi.python.org/packages/source/s/six/six-1.10.0.tar.gz\",\n      ],\n      sha256 = \"105f8d68616f8248e24bf0e9372ef04d3cc10104f1980f54d57b2ce73a5ad56a\",\n      strip_prefix = \"six-1.10.0\",\n      build_file = clean_dep(\"//third_party:six.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"astor_archive\",\n      urls = [\n          \"https://mirror.bazel.build/pypi.python.org/packages/d8/be/c4276b3199ec3feee2a88bc64810fbea8f26d961e0a4cd9c68387a9f35de/astor-0.6.2.tar.gz\",\n          \"https://pypi.python.org/packages/d8/be/c4276b3199ec3feee2a88bc64810fbea8f26d961e0a4cd9c68387a9f35de/astor-0.6.2.tar.gz\",\n      ],\n      sha256 = \"ff6d2e2962d834acb125cc4dcc80c54a8c17c253f4cc9d9c43b5102a560bb75d\",\n      strip_prefix = \"astor-0.6.2\",\n      build_file = clean_dep(\"//third_party:astor.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"gast_archive\",\n      urls = [\n          \"https://mirror.bazel.build/pypi.python.org/packages/5c/78/ff794fcae2ce8aa6323e789d1f8b3b7765f601e7702726f430e814822b96/gast-0.2.0.tar.gz\",\n          \"https://pypi.python.org/packages/5c/78/ff794fcae2ce8aa6323e789d1f8b3b7765f601e7702726f430e814822b96/gast-0.2.0.tar.gz\",\n      ],\n      sha256 = \"7068908321ecd2774f145193c4b34a11305bd104b4551b09273dfd1d6a374930\",\n      strip_prefix = \"gast-0.2.0\",\n      build_file = clean_dep(\"//third_party:gast.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"termcolor_archive\",\n      urls = [\n          \"https://mirror.bazel.build/pypi.python.org/packages/8a/48/a76be51647d0eb9f10e2a4511bf3ffb8cc1e6b14e9e4fab46173aa79f981/termcolor-1.1.0.tar.gz\",\n          \"https://pypi.python.org/packages/8a/48/a76be51647d0eb9f10e2a4511bf3ffb8cc1e6b14e9e4fab46173aa79f981/termcolor-1.1.0.tar.gz\",\n      ],\n      sha256 = \"1d6d69ce66211143803fbc56652b41d73b4a400a2891d7bf7a1cdf4c02de613b\",\n      strip_prefix = \"termcolor-1.1.0\",\n      build_file = clean_dep(\"//third_party:termcolor.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"absl_py\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/abseil/abseil-py/archive/acec853355ef987eae48a8d87a79351c15dff593.tar.gz\",\n          \"https://github.com/abseil/abseil-py/archive/acec853355ef987eae48a8d87a79351c15dff593.tar.gz\",\n      ],\n      sha256 = \"29e4584e778bee13aa4093824133d131d927cc160561892880118d9ff7b95a6a\",\n      strip_prefix = \"abseil-py-acec853355ef987eae48a8d87a79351c15dff593\",\n  )\n\n  tf_http_archive(\n      name = \"org_python_pypi_backports_weakref\",\n      urls = [\n          \"https://mirror.bazel.build/pypi.python.org/packages/bc/cc/3cdb0a02e7e96f6c70bd971bc8a90b8463fda83e264fa9c5c1c98ceabd81/backports.weakref-1.0rc1.tar.gz\",\n          \"https://pypi.python.org/packages/bc/cc/3cdb0a02e7e96f6c70bd971bc8a90b8463fda83e264fa9c5c1c98ceabd81/backports.weakref-1.0rc1.tar.gz\",\n      ],\n      sha256 = \"8813bf712a66b3d8b85dc289e1104ed220f1878cf981e2fe756dfaabe9a82892\",\n      strip_prefix = \"backports.weakref-1.0rc1/src\",\n      build_file = clean_dep(\"//third_party:backports_weakref.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"com_github_andreif_codegen\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/andreif/codegen/archive/1.0.tar.gz\",\n          \"https://github.com/andreif/codegen/archive/1.0.tar.gz\",\n      ],\n      sha256 = \"2dadd04a2802de27e0fe5a19b76538f6da9d39ff244036afa00c1bba754de5ee\",\n      strip_prefix = \"codegen-1.0\",\n      build_file = clean_dep(\"//third_party:codegen.BUILD\"),\n  )\n\n  filegroup_external(\n      name = \"org_python_license\",\n      licenses = [\"notice\"],  # Python 2.0\n      sha256_urls = {\n          \"b5556e921715ddb9242c076cae3963f483aa47266c5e37ea4c187f77cc79501c\": [\n              \"https://mirror.bazel.build/docs.python.org/2.7/_sources/license.txt\",\n              \"https://docs.python.org/2.7/_sources/license.txt\",\n          ],\n      },\n  )\n\n  tf_http_archive(\n      name = \"protobuf_archive\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/google/protobuf/archive/396336eb961b75f03b25824fe86cf6490fb75e3a.tar.gz\",\n          \"https://github.com/google/protobuf/archive/396336eb961b75f03b25824fe86cf6490fb75e3a.tar.gz\",\n      ],\n      sha256 = \"846d907acf472ae233ec0882ef3a2d24edbbe834b80c305e867ac65a1f2c59e3\",\n      strip_prefix = \"protobuf-396336eb961b75f03b25824fe86cf6490fb75e3a\",\n  )\n\n  # We need to import the protobuf library under the names com_google_protobuf\n  # and com_google_protobuf_cc to enable proto_library support in bazel.\n  # Unfortunately there is no way to alias http_archives at the moment.\n  tf_http_archive(\n      name = \"com_google_protobuf\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/google/protobuf/archive/396336eb961b75f03b25824fe86cf6490fb75e3a.tar.gz\",\n          \"https://github.com/google/protobuf/archive/396336eb961b75f03b25824fe86cf6490fb75e3a.tar.gz\",\n      ],\n      sha256 = \"846d907acf472ae233ec0882ef3a2d24edbbe834b80c305e867ac65a1f2c59e3\",\n      strip_prefix = \"protobuf-396336eb961b75f03b25824fe86cf6490fb75e3a\",\n  )\n\n  tf_http_archive(\n      name = \"com_google_protobuf_cc\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/google/protobuf/archive/396336eb961b75f03b25824fe86cf6490fb75e3a.tar.gz\",\n          \"https://github.com/google/protobuf/archive/396336eb961b75f03b25824fe86cf6490fb75e3a.tar.gz\",\n      ],\n      sha256 = \"846d907acf472ae233ec0882ef3a2d24edbbe834b80c305e867ac65a1f2c59e3\",\n      strip_prefix = \"protobuf-396336eb961b75f03b25824fe86cf6490fb75e3a\",\n  )\n\n  tf_http_archive(\n      name = \"nsync\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/google/nsync/archive/0559ce013feac8db639ee1bf776aca0325d28777.tar.gz\",\n          \"https://github.com/google/nsync/archive/0559ce013feac8db639ee1bf776aca0325d28777.tar.gz\",\n      ],\n      sha256 = \"6284454c5cd8b1dae2eeb8cf5eb63004de930b5427ed5f6b1aa793513df6b361\",\n      strip_prefix = \"nsync-0559ce013feac8db639ee1bf776aca0325d28777\",\n  )\n\n  tf_http_archive(\n      name = \"com_google_googletest\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/google/googletest/archive/9816b96a6ddc0430671693df90192bbee57108b6.zip\",\n          \"https://github.com/google/googletest/archive/9816b96a6ddc0430671693df90192bbee57108b6.zip\",\n      ],\n      sha256 = \"9cbca84c4256bed17df2c8f4d00c912c19d247c11c9ba6647cd6dd5b5c996b8d\",\n      strip_prefix = \"googletest-9816b96a6ddc0430671693df90192bbee57108b6\",\n  )\n\n  tf_http_archive(\n      name = \"com_github_gflags_gflags\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/gflags/gflags/archive/f8a0efe03aa69b3336d8e228b37d4ccb17324b88.tar.gz\",\n          \"https://github.com/gflags/gflags/archive/f8a0efe03aa69b3336d8e228b37d4ccb17324b88.tar.gz\",\n      ],\n      sha256 = \"4d222fab8f1ede4709cdff417d15a1336f862d7334a81abf76d09c15ecf9acd1\",\n      strip_prefix = \"gflags-f8a0efe03aa69b3336d8e228b37d4ccb17324b88\",\n  )\n\n  tf_http_archive(\n      name = \"pcre\",\n      sha256 = \"ccdf7e788769838f8285b3ee672ed573358202305ee361cfec7a4a4fb005bbc7\",\n      urls = [\n          \"https://mirror.bazel.build/ftp.exim.org/pub/pcre/pcre-8.39.tar.gz\",\n          \"http://ftp.exim.org/pub/pcre/pcre-8.39.tar.gz\",\n      ],\n      strip_prefix = \"pcre-8.39\",\n      build_file = clean_dep(\"//third_party:pcre.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"swig\",\n      sha256 = \"58a475dbbd4a4d7075e5fe86d4e54c9edde39847cdb96a3053d87cb64a23a453\",\n      urls = [\n          \"https://mirror.bazel.build/ufpr.dl.sourceforge.net/project/swig/swig/swig-3.0.8/swig-3.0.8.tar.gz\",\n          \"http://ufpr.dl.sourceforge.net/project/swig/swig/swig-3.0.8/swig-3.0.8.tar.gz\",\n          \"http://pilotfiber.dl.sourceforge.net/project/swig/swig/swig-3.0.8/swig-3.0.8.tar.gz\",\n      ],\n      strip_prefix = \"swig-3.0.8\",\n      build_file = clean_dep(\"//third_party:swig.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"curl\",\n      sha256 = \"ff3e80c1ca6a068428726cd7dd19037a47cc538ce58ef61c59587191039b2ca6\",\n      urls = [\n          \"https://mirror.bazel.build/curl.haxx.se/download/curl-7.49.1.tar.gz\",\n          \"https://curl.haxx.se/download/curl-7.49.1.tar.gz\",\n      ],\n      strip_prefix = \"curl-7.49.1\",\n      build_file = clean_dep(\"//third_party:curl.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"grpc\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/grpc/grpc/archive/bd6bdf93279a39a8cd92978fd7c9d14eccd98fc2.tar.gz\",\n          \"https://github.com/grpc/grpc/archive/bd6bdf93279a39a8cd92978fd7c9d14eccd98fc2.tar.gz\",\n      ],\n      sha256 = \"0a05bd355e4571b01d813dddffa38e57e689ac41b264dc9b1bd6ec66463ef5d6\",\n      strip_prefix = \"grpc-bd6bdf93279a39a8cd92978fd7c9d14eccd98fc2\",\n  )\n\n\n  tf_http_archive(\n      name = \"linenoise\",\n      sha256 = \"7f51f45887a3d31b4ce4fa5965210a5e64637ceac12720cfce7954d6a2e812f7\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/antirez/linenoise/archive/c894b9e59f02203dbe4e2be657572cf88c4230c3.tar.gz\",\n          \"https://github.com/antirez/linenoise/archive/c894b9e59f02203dbe4e2be657572cf88c4230c3.tar.gz\",\n      ],\n      strip_prefix = \"linenoise-c894b9e59f02203dbe4e2be657572cf88c4230c3\",\n      build_file = clean_dep(\"//third_party:linenoise.BUILD\"),\n  )\n\n  # TODO(phawkins): currently, this rule uses an unofficial LLVM mirror.\n  # Switch to an official source of snapshots if/when possible.\n  tf_http_archive(\n      name = \"llvm\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/llvm-mirror/llvm/archive/7e78daafdd22f3f17720a103d29d89590534004e.tar.gz\",\n          \"https://github.com/llvm-mirror/llvm/archive/7e78daafdd22f3f17720a103d29d89590534004e.tar.gz\",\n      ],\n      sha256 = \"a6d94bd9de23515a1e3792a830421e3885977ea43d03427cdbe68f98cb7e0045\",\n      strip_prefix = \"llvm-7e78daafdd22f3f17720a103d29d89590534004e\",\n      build_file = clean_dep(\"//third_party/llvm:llvm.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"lmdb\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/LMDB/lmdb/archive/LMDB_0.9.19.tar.gz\",\n          \"https://github.com/LMDB/lmdb/archive/LMDB_0.9.19.tar.gz\",\n      ],\n      sha256 = \"108532fb94c6f227558d45be3f3347b52539f0f58290a7bb31ec06c462d05326\",\n      strip_prefix = \"lmdb-LMDB_0.9.19/libraries/liblmdb\",\n      build_file = clean_dep(\"//third_party:lmdb.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"jsoncpp_git\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/open-source-parsers/jsoncpp/archive/11086dd6a7eba04289944367ca82cea71299ed70.tar.gz\",\n          \"https://github.com/open-source-parsers/jsoncpp/archive/11086dd6a7eba04289944367ca82cea71299ed70.tar.gz\",\n      ],\n      sha256 = \"07d34db40593d257324ec5fb9debc4dc33f29f8fb44e33a2eeb35503e61d0fe2\",\n      strip_prefix = \"jsoncpp-11086dd6a7eba04289944367ca82cea71299ed70\",\n      build_file = clean_dep(\"//third_party:jsoncpp.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"boringssl\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/google/boringssl/archive/a0fb951d2a26a8ee746b52f3ba81ab011a0af778.tar.gz\",\n          \"https://github.com/google/boringssl/archive/a0fb951d2a26a8ee746b52f3ba81ab011a0af778.tar.gz\",\n      ],\n      sha256 = \"524ba98a56300149696481b4cb9ddebd0c7b7ac9b9f6edee81da2d2d7e5d2bb3\",\n      strip_prefix = \"boringssl-a0fb951d2a26a8ee746b52f3ba81ab011a0af778\",\n  )\n\n  tf_http_archive(\n      name = \"zlib_archive\",\n      urls = [\n          \"https://mirror.bazel.build/zlib.net/zlib-1.2.11.tar.gz\",\n          \"https://zlib.net/zlib-1.2.11.tar.gz\",\n      ],\n      sha256 = \"c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1\",\n      strip_prefix = \"zlib-1.2.11\",\n      build_file = clean_dep(\"//third_party:zlib.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"fft2d\",\n      urls = [\n          \"https://mirror.bazel.build/www.kurims.kyoto-u.ac.jp/~ooura/fft.tgz\",\n          \"http://www.kurims.kyoto-u.ac.jp/~ooura/fft.tgz\",\n      ],\n      sha256 = \"52bb637c70b971958ec79c9c8752b1df5ff0218a4db4510e60826e0cb79b5296\",\n      build_file = clean_dep(\"//third_party/fft2d:fft2d.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"snappy\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/google/snappy/archive/1.1.7.tar.gz\",\n          \"https://github.com/google/snappy/archive/1.1.7.tar.gz\",\n      ],\n      sha256 = \"3dfa02e873ff51a11ee02b9ca391807f0c8ea0529a4924afa645fbf97163f9d4\",\n      strip_prefix = \"snappy-1.1.7\",\n      build_file = clean_dep(\"//third_party:snappy.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"nccl_archive\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/nvidia/nccl/archive/03d856977ecbaac87e598c0c4bafca96761b9ac7.tar.gz\",\n          \"https://github.com/nvidia/nccl/archive/03d856977ecbaac87e598c0c4bafca96761b9ac7.tar.gz\",\n      ],\n      sha256 = \"2ca86fb6179ecbff789cc67c836139c1bbc0324ed8c04643405a30bf26325176\",\n      strip_prefix = \"nccl-03d856977ecbaac87e598c0c4bafca96761b9ac7\",\n      build_file = clean_dep(\"//third_party:nccl.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"kafka\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/edenhill/librdkafka/archive/v0.11.1.tar.gz\",\n          \"https://github.com/edenhill/librdkafka/archive/v0.11.1.tar.gz\",\n      ],\n      sha256 = \"dd035d57c8f19b0b612dd6eefe6e5eebad76f506e302cccb7c2066f25a83585e\",\n      strip_prefix = \"librdkafka-0.11.1\",\n      build_file = clean_dep(\"//third_party:kafka/BUILD\"),\n      patch_file = clean_dep(\"//third_party/kafka:config.patch\"),\n  )\n\n  tf_http_archive(\n      name = \"aws\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/aws/aws-sdk-cpp/archive/1.3.15.tar.gz\",\n          \"https://github.com/aws/aws-sdk-cpp/archive/1.3.15.tar.gz\",\n      ],\n      sha256 = \"b888d8ce5fc10254c3dd6c9020c7764dd53cf39cf011249d0b4deda895de1b7c\",\n      strip_prefix = \"aws-sdk-cpp-1.3.15\",\n      build_file = clean_dep(\"//third_party:aws.BUILD\"),\n  )\n\n  java_import_external(\n      name = \"junit\",\n      jar_sha256 = \"59721f0805e223d84b90677887d9ff567dc534d7c502ca903c0c2b17f05c116a\",\n      jar_urls = [\n          \"https://mirror.bazel.build/repo1.maven.org/maven2/junit/junit/4.12/junit-4.12.jar\",\n          \"http://repo1.maven.org/maven2/junit/junit/4.12/junit-4.12.jar\",\n          \"http://maven.ibiblio.org/maven2/junit/junit/4.12/junit-4.12.jar\",\n      ],\n      licenses = [\"reciprocal\"],  # Common Public License Version 1.0\n      testonly_ = True,\n      deps = [\"@org_hamcrest_core\"],\n  )\n\n  java_import_external(\n      name = \"org_hamcrest_core\",\n      jar_sha256 = \"66fdef91e9739348df7a096aa384a5685f4e875584cce89386a7a47251c4d8e9\",\n      jar_urls = [\n          \"https://mirror.bazel.build/repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\",\n          \"http://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\",\n          \"http://maven.ibiblio.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\",\n      ],\n      licenses = [\"notice\"],  # New BSD License\n      testonly_ = True,\n  )\n\n  tf_http_archive(\n      name = \"jemalloc\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/jemalloc/jemalloc/archive/4.4.0.tar.gz\",\n          \"https://github.com/jemalloc/jemalloc/archive/4.4.0.tar.gz\",\n      ],\n      sha256 = \"3c8f25c02e806c3ce0ab5fb7da1817f89fc9732709024e2a81b6b82f7cc792a8\",\n      strip_prefix = \"jemalloc-4.4.0\",\n      build_file = clean_dep(\"//third_party:jemalloc.BUILD\"),\n  )\n\n  java_import_external(\n      name = \"com_google_testing_compile\",\n      jar_sha256 = \"edc180fdcd9f740240da1a7a45673f46f59c5578d8cd3fbc912161f74b5aebb8\",\n      jar_urls = [\n          \"http://mirror.bazel.build/repo1.maven.org/maven2/com/google/testing/compile/compile-testing/0.11/compile-testing-0.11.jar\",\n          \"http://repo1.maven.org/maven2/com/google/testing/compile/compile-testing/0.11/compile-testing-0.11.jar\",\n      ],\n      licenses = [\"notice\"],  # New BSD License\n      testonly_ = True,\n      deps = [\"@com_google_guava\", \"@com_google_truth\"],\n  )\n\n  java_import_external(\n      name = \"com_google_truth\",\n      jar_sha256 = \"032eddc69652b0a1f8d458f999b4a9534965c646b8b5de0eba48ee69407051df\",\n      jar_urls = [\n          \"http://mirror.bazel.build/repo1.maven.org/maven2/com/google/truth/truth/0.32/truth-0.32.jar\",\n          \"http://repo1.maven.org/maven2/com/google/truth/truth/0.32/truth-0.32.jar\",\n      ],\n      licenses = [\"notice\"],  # Apache 2.0\n      testonly_ = True,\n      deps = [\"@com_google_guava\"],\n  )\n\n  java_import_external(\n      name = \"org_checkerframework_qual\",\n      jar_sha256 = \"a17501717ef7c8dda4dba73ded50c0d7cde440fd721acfeacbf19786ceac1ed6\",\n      jar_urls = [\n          \"http://mirror.bazel.build/repo1.maven.org/maven2/org/checkerframework/checker-qual/2.4.0/checker-qual-2.4.0.jar\",\n          \"http://repo1.maven.org/maven2/org/checkerframework/checker-qual/2.4.0/checker-qual-2.4.0.jar\",\n      ],\n      licenses = [\"notice\"],  # Apache 2.0\n  )\n\n  tf_http_archive(\n      name = \"com_google_pprof\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/google/pprof/archive/c0fb62ec88c411cc91194465e54db2632845b650.tar.gz\",\n          \"https://github.com/google/pprof/archive/c0fb62ec88c411cc91194465e54db2632845b650.tar.gz\",\n      ],\n      sha256 = \"e0928ca4aa10ea1e0551e2d7ce4d1d7ea2d84b2abbdef082b0da84268791d0c4\",\n      strip_prefix = \"pprof-c0fb62ec88c411cc91194465e54db2632845b650\",\n      build_file = clean_dep(\"//third_party:pprof.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"cub_archive\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/NVlabs/cub/archive/1.8.0.zip\",\n          \"https://github.com/NVlabs/cub/archive/1.8.0.zip\",\n      ],\n      sha256 = \"6bfa06ab52a650ae7ee6963143a0bbc667d6504822cbd9670369b598f18c58c3\",\n      strip_prefix = \"cub-1.8.0\",\n      build_file = clean_dep(\"//third_party:cub.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"cython\",\n      sha256 = \"6dcd30b5ceb887b2b965ee7ceb82ea3acb5f0642fe2206c7636b45acea4798e5\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/cython/cython/archive/3732784c45cfb040a5b0936951d196f83a12ea17.tar.gz\",\n          \"https://github.com/cython/cython/archive/3732784c45cfb040a5b0936951d196f83a12ea17.tar.gz\",\n      ],\n      strip_prefix = \"cython-3732784c45cfb040a5b0936951d196f83a12ea17\",\n      build_file = clean_dep(\"//third_party:cython.BUILD\"),\n      delete = [\"BUILD.bazel\"],\n  )\n\n  tf_http_archive(\n      name = \"bazel_toolchains\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/bazelbuild/bazel-toolchains/archive/44200e0c026d86c53470d107b3697a3e46469c43.tar.gz\",\n          \"https://github.com/bazelbuild/bazel-toolchains/archive/44200e0c026d86c53470d107b3697a3e46469c43.tar.gz\",\n      ],\n      strip_prefix = \"bazel-toolchains-44200e0c026d86c53470d107b3697a3e46469c43\",\n      sha256 = \"699b55a6916c687f4b7dc092dbbf5f64672cde0dc965f79717735ec4e5416556\",\n  )\n\n  tf_http_archive(\n      name = \"arm_neon_2_x86_sse\",\n      sha256 = \"c8d90aa4357f8079d427e87a6f4c493da1fa4140aee926c05902d7ec1533d9a5\",\n      strip_prefix = \"ARM_NEON_2_x86_SSE-0f77d9d182265259b135dad949230ecbf1a2633d\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/intel/ARM_NEON_2_x86_SSE/archive/0f77d9d182265259b135dad949230ecbf1a2633d.tar.gz\",\n          \"https://github.com/intel/ARM_NEON_2_x86_SSE/archive/0f77d9d182265259b135dad949230ecbf1a2633d.tar.gz\",\n      ],\n      build_file = clean_dep(\"//third_party:arm_neon_2_x86_sse.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"flatbuffers\",\n      strip_prefix = \"flatbuffers-971a68110e4fc1bace10fcb6deeb189e7e1a34ce\",\n      sha256 = \"874088d2ee0d9f8524191f77209556415f03dd44e156276edf19e5b90ceb5f55\",\n      urls = [\n          \"https://mirror.bazel.build/github.com/google/flatbuffers/archive/971a68110e4fc1bace10fcb6deeb189e7e1a34ce.tar.gz\",\n          \"https://github.com/google/flatbuffers/archive/971a68110e4fc1bace10fcb6deeb189e7e1a34ce.tar.gz\",\n      ],\n      build_file = clean_dep(\"//third_party/flatbuffers:flatbuffers.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"tflite_mobilenet\",\n      sha256 = \"23f814d1c076bdf03715dfb6cab3713aa4fbdf040fd5448c43196bd2e97a4c1b\",\n      urls = [\n          \"https://mirror.bazel.build/storage.googleapis.com/download.tensorflow.org/models/tflite/mobilenet_v1_224_android_quant_2017_11_08.zip\",\n          \"https://storage.googleapis.com/download.tensorflow.org/models/tflite/mobilenet_v1_224_android_quant_2017_11_08.zip\",\n      ],\n      build_file = clean_dep(\"//third_party:tflite_mobilenet.BUILD\"),\n  )\n\n  tf_http_archive(\n      name = \"tflite_mobilenet_ssd\",\n      sha256 = \"767057f2837a46d97882734b03428e8dd640b93236052b312b2f0e45613c1cf0\",\n      urls = [\n          \"https://mirror.bazel.build/storage.googleapis.com/download.tensorflow.org/models/tflite/mobilenet_ssd_tflite_v1.zip\",\n          \"https://storage.googleapis.com/download.tensorflow.org/models/tflite/mobilenet_ssd_tflite_v1.zip\",\n      ],\n      build_file = str(Label(\"//third_party:tflite_mobilenet.BUILD\")),\n  )\n\n  tf_http_archive(\n      name = \"tflite_conv_actions_frozen\",\n      sha256 = \"d947b38cba389b5e2d0bfc3ea6cc49c784e187b41a071387b3742d1acac7691e\",\n      urls = [\n          \"https://mirror.bazel.build/storage.googleapis.com/download.tensorflow.org/models/tflite/conv_actions_tflite.zip\",\n          \"https://storage.googleapis.com/download.tensorflow.org/models/tflite/conv_actions_tflite.zip\",\n      ],\n      build_file = str(Label(\"//third_party:tflite_mobilenet.BUILD\")),\n  )\n\n  tf_http_archive(\n      name = \"tflite_smartreply\",\n      sha256 = \"8980151b85a87a9c1a3bb1ed4748119e4a85abd3cb5744d83da4d4bd0fbeef7c\",\n      urls = [\n          \"https://mirror.bazel.build/storage.googleapis.com/download.tensorflow.org/models/tflite/smartreply_1.0_2017_11_01.zip\",\n          \"https://storage.googleapis.com/download.tensorflow.org/models/tflite/smartreply_1.0_2017_11_01.zip\"\n      ],\n      build_file = clean_dep(\"//third_party:tflite_smartreply.BUILD\"),\n  )\n\n  ##############################################################################\n  # BIND DEFINITIONS\n  #\n  # Please do not add bind() definitions unless we have no other choice.\n  # If that ends up being the case, please leave a comment explaining\n  # why we can't depend on the canonical build target.\n\n  # gRPC wants a cares dependency but its contents is not actually\n  # important since we have set GRPC_ARES=0 in tools/bazel.rc\n  native.bind(\n      name = \"cares\",\n      actual = \"@grpc//third_party/nanopb:nanopb\",\n  )\n\n  # Needed by Protobuf\n  native.bind(\n      name = \"grpc_cpp_plugin\",\n      actual = \"@grpc//:grpc_cpp_plugin\",\n  )\n\n  # gRPC has three empty C++ functions which it wants the user to define\n  # at build time. https://github.com/grpc/grpc/issues/13590\n  native.bind(\n      name = \"grpc_lib\",\n      actual = \"@grpc//:grpc++_unsecure\",\n  )\n\n  # Needed by gRPC\n  native.bind(\n      name = \"libssl\",\n      actual = \"@boringssl//:ssl\",\n  )\n\n  # Needed by gRPC\n  native.bind(\n      name = \"nanopb\",\n      actual = \"@grpc//third_party/nanopb:nanopb\",\n  )\n\n  # Needed by gRPC\n  native.bind(\n      name = \"protobuf\",\n      actual = \"@protobuf_archive//:protobuf\",\n  )\n\n  # gRPC expects //external:protobuf_clib and //external:protobuf_compiler\n  # to point to Protobuf's compiler library.\n  native.bind(\n      name = \"protobuf_clib\",\n      actual = \"@protobuf_archive//:protoc_lib\",\n  )\n\n  # Needed by gRPC\n  native.bind(\n      name = \"protobuf_headers\",\n      actual = \"@protobuf_archive//:protobuf_headers\",\n  )\n\n  # Needed by Protobuf\n  native.bind(\n      name = \"python_headers\",\n      actual = clean_dep(\"//util/python:python_headers\"),\n  )\n\n  # Needed by Protobuf\n  native.bind(\n      name = \"six\",\n      actual = \"@six_archive//:six\",\n  )\n\n  # Needed by gRPC\n  native.bind(\n      name = \"zlib\",\n      actual = \"@zlib_archive//:zlib\",\n  )"