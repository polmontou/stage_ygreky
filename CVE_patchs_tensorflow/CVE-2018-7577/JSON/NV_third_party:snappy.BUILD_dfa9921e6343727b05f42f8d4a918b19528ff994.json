"package(default_visibility = [\"//visibility:public\"])\n\nlicenses([\"notice\"])  # BSD 3-Clause\n\nexports_files([\"COPYING\"])\n\ncc_library(\n    name = \"snappy\",\n    srcs = [\n        \"config.h\",\n        \"snappy.cc\",\n        \"snappy.h\",\n        \"snappy-internal.h\",\n        \"snappy-sinksource.cc\",\n        \"snappy-sinksource.h\",\n        \"snappy-stubs-internal.cc\",\n        \"snappy-stubs-internal.h\",\n        \"snappy-stubs-public.h\",\n    ],\n    hdrs = [\"snappy.h\"],\n    copts = select({\n        \"@org_tensorflow//tensorflow:windows\": [\n            \"/DHAVE_CONFIG_H\",\n            \"/EHsc\",\n        ],\n        \"@org_tensorflow//tensorflow:windows_msvc\": [\n            \"/DHAVE_CONFIG_H\",\n            \"/EHsc\",\n        ],\n        \"//conditions:default\": [\n            \"-DHAVE_CONFIG_H\",\n            \"-fno-exceptions\",\n            \"-Wno-sign-compare\",\n            \"-Wno-shift-negative-value\",\n            \"-Wno-implicit-function-declaration\",\n        ],\n    }),\n)\n\ngenrule(\n    name = \"config_h\",\n    outs = [\"config.h\"],\n    cmd = \"\\n\".join([\n        \"cat <<'EOF' >$@\",\n        \"#define HAVE_STDDEF_H 1\",\n        \"#define HAVE_STDINT_H 1\",\n        \"\",\n        \"#ifdef __has_builtin\",\n        \"#  if !defined(HAVE_BUILTIN_EXPECT) && __has_builtin(__builtin_expect)\",\n        \"#    define HAVE_BUILTIN_EXPECT 1\",\n        \"#  endif\",\n        \"#  if !defined(HAVE_BUILTIN_CTZ) && __has_builtin(__builtin_ctzll)\",\n        \"#    define HAVE_BUILTIN_CTZ 1\",\n        \"#  endif\",\n        \"#elif defined(__GNUC__) && (__GNUC__ > 3 || __GNUC__ == 3 && __GNUC_MINOR__ >= 4)\",\n        \"#  ifndef HAVE_BUILTIN_EXPECT\",\n        \"#    define HAVE_BUILTIN_EXPECT 1\",\n        \"#  endif\",\n        \"#  ifndef HAVE_BUILTIN_CTZ\",\n        \"#    define HAVE_BUILTIN_CTZ 1\",\n        \"#  endif\",\n        \"#endif\",\n        \"\",\n        \"#ifdef __has_include\",\n        \"#  if !defined(HAVE_BYTESWAP_H) && __has_include(<byteswap.h>)\",\n        \"#    define HAVE_BYTESWAP_H 1\",\n        \"#  endif\",\n        \"#  if !defined(HAVE_UNISTD_H) && __has_include(<unistd.h>)\",\n        \"#    define HAVE_UNISTD_H 1\",\n        \"#  endif\",\n        \"#  if !defined(HAVE_SYS_ENDIAN_H) && __has_include(<sys/endian.h>)\",\n        \"#    define HAVE_SYS_ENDIAN_H 1\",\n        \"#  endif\",\n        \"#  if !defined(HAVE_SYS_MMAN_H) && __has_include(<sys/mman.h>)\",\n        \"#    define HAVE_SYS_MMAN_H 1\",\n        \"#  endif\",\n        \"#  if !defined(HAVE_SYS_UIO_H) && __has_include(<sys/uio.h>)\",\n        \"#    define HAVE_SYS_UIO_H 1\",\n        \"#  endif\",\n        \"#endif\",\n        \"\",\n        \"#ifndef SNAPPY_IS_BIG_ENDIAN\",\n        \"#  ifdef __s390x__\",\n        \"#    define SNAPPY_IS_BIG_ENDIAN 1\",\n        \"#  elif defined(__BYTE_ORDER__) && defined(__ORDER_BIG_ENDIAN__) && __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__\",\n        \"#    define SNAPPY_IS_BIG_ENDIAN 1\",\n        \"#  endif\",\n        \"#endif\",\n        \"EOF\",\n    ]),\n)\n\ngenrule(\n    name = \"snappy_stubs_public_h\",\n    srcs = [\"snappy-stubs-public.h.in\"],\n    outs = [\"snappy-stubs-public.h\"],\n    cmd = (\"sed \" +\n           \"-e 's/$${\\\\(.*\\\\)_01}/\\\\1/g' \" +\n           \"-e 's/$${SNAPPY_MAJOR}/1/g' \" +\n           \"-e 's/$${SNAPPY_MINOR}/1/g' \" +\n           \"-e 's/$${SNAPPY_PATCHLEVEL}/4/g' \" +\n           \"$< >$@\"),\n)"