"diff --git a/tensorflow/contrib/lite/toco/tflite/import.cc b/tensorflow/contrib/lite/toco/tflite/import.cc\nindex 867395e8814..c0e7ab2ef57 100644\n--- a/tensorflow/contrib/lite/toco/tflite/import.cc\n+++ b/tensorflow/contrib/lite/toco/tflite/import.cc\n@@ -15,10 +15,12 @@ limitations under the License.\n #include \"tensorflow/contrib/lite/toco/tflite/import.h\"\n \n #include \"flatbuffers/flexbuffers.h\"\n+#include \"tensorflow/contrib/lite/model.h\"\n #include \"tensorflow/contrib/lite/schema/schema_generated.h\"\n #include \"tensorflow/contrib/lite/toco/tflite/operator.h\"\n #include \"tensorflow/contrib/lite/toco/tflite/types.h\"\n #include \"tensorflow/contrib/lite/toco/tooling_util.h\"\n+#include \"tensorflow/contrib/lite/tools/verifier.h\"\n \n namespace toco {\n \n@@ -171,10 +173,11 @@ bool Verify(const void* buf, size_t len) {\n \n std::unique_ptr<Model> Import(const ModelFlags& model_flags,\n                               const string& input_file_contents) {\n-  if (!Verify(input_file_contents.data(), input_file_contents.size())) {\n+  ::tflite::AlwaysTrueResolver r;\n+  if (!::tflite::Verify(input_file_contents.data(), input_file_contents.size(),\n+                        r, ::tflite::DefaultErrorReporter())) {\n     LOG(FATAL) << \"Invalid flatbuffer.\";\n   }\n-\n   const ::tflite::Model* input_model =\n       ::tflite::GetModel(input_file_contents.data());\n "