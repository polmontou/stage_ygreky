"diff --git a/tensorflow/core/kernels/sparse_fill_empty_rows_op.cc b/tensorflow/core/kernels/sparse_fill_empty_rows_op.cc\nindex e71257037f1..6d9201d9f87 100644\n--- a/tensorflow/core/kernels/sparse_fill_empty_rows_op.cc\n+++ b/tensorflow/core/kernels/sparse_fill_empty_rows_op.cc\n@@ -236,6 +236,9 @@ class SparseFillEmptyRowsGradOp : public OpKernel {\n         context, TensorShapeUtils::IsVector(reverse_index_map_t->shape()),\n         errors::InvalidArgument(\"reverse_index_map must be a vector, saw: \",\n                                 reverse_index_map_t->shape().DebugString()));\n+    OP_REQUIRES(context, TensorShapeUtils::IsVector(grad_values_t->shape()),\n+                errors::InvalidArgument(\"grad_values must be a vector, saw: \",\n+                                        grad_values_t->shape().DebugString()));\n \n     const auto reverse_index_map = reverse_index_map_t->vec<int64>();\n     const auto grad_values = grad_values_t->vec<T>();\n@@ -264,8 +267,13 @@ class SparseFillEmptyRowsGradOp : public OpKernel {\n       // Locate the index of the output of the forward prop associated\n       // with this location in the input of the forward prop.  Copy\n       // the gradient into it.  Mark it as visited.\n-      d_values(i) = grad_values(reverse_index_map(i));\n-      visited(reverse_index_map(i)) = true;\n+      int64 reverse_index = reverse_index_map(i);\n+      OP_REQUIRES(\n+          context, 0 <= reverse_index && reverse_index < N_full,\n+          errors::InvalidArgument(\"Elements in reverse index must be in [0, \",\n+                                  N_full, \") but got \", reverse_index));\n+      d_values(i) = grad_values(reverse_index);\n+      visited(reverse_index) = true;\n     }\n     for (int j = 0; j < N_full; ++j) {\n       // The default value gradient gets the accumulated remainder of"