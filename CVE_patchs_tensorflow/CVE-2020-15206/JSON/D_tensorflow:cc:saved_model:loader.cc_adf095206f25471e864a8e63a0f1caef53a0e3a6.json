"diff --git a/tensorflow/cc/saved_model/loader.cc b/tensorflow/cc/saved_model/loader.cc\nindex ecefe7d0406..70d080a682f 100644\n--- a/tensorflow/cc/saved_model/loader.cc\n+++ b/tensorflow/cc/saved_model/loader.cc\n@@ -21,6 +21,7 @@ limitations under the License.\n #include \"tensorflow/cc/saved_model/loader_util.h\"\n #include \"tensorflow/cc/saved_model/reader.h\"\n #include \"tensorflow/core/framework/attr_value.pb.h\"\n+#include \"tensorflow/core/framework/function.pb.h\"\n #include \"tensorflow/core/framework/node_def.pb.h\"\n #include \"tensorflow/core/framework/tensor.pb.h\"\n #include \"tensorflow/core/lib/io/path.h\"\n@@ -73,26 +74,41 @@ uint64 GetLatencyMicroseconds(const uint64 start_microseconds) {\n // Ensure that constant tensors loaded from the saved model have valid shape.\n // Also ensure that constant nodes have a value assigned to them.\n // TODO(b/154763635): this is temporary and will be replaced with a better audit\n+static Status ValidateNode(const NodeDef& node) {\n+  const auto node_iterator = node.attr().find(\"value\");\n+  if (node_iterator != node.attr().end()) {\n+    AttrValue node_value = node_iterator->second;\n+    if (node_value.has_tensor()) {\n+      const PartialTensorShape node_shape(node_value.tensor().tensor_shape());\n+      if (node_shape.num_elements() < 0) {\n+        return errors::FailedPrecondition(\n+            \"Saved model contains node \\\"\", node.name(), \"\\\" (op \\\"\", node.op(),\n+            \"\\\") which initializes from a tensor with \",\n+            node_shape.num_elements(), \" elements\");\n+      }\n+    }\n+  } else if (node.op() == \"Const\") {\n+    return errors::FailedPrecondition(\n+        \"Saved model contains node \\\"\", node.name(),\n+        \"\\\" which is a constant tensor but no value has been provided\");\n+  }\n+  return Status::OK();\n+}\n+\n static Status ValidateSavedTensors(const GraphDef& graph_def) {\n   for (const auto& node : graph_def.node()) {\n-    const auto node_iterator = node.attr().find(\"value\");\n-    if (node_iterator != node.attr().end()) {\n-      AttrValue node_value = node_iterator->second;\n-      if (node_value.has_tensor()) {\n-        const PartialTensorShape node_shape(node_value.tensor().tensor_shape());\n-        if (node_shape.num_elements() < 0) {\n-          return errors::FailedPrecondition(\n-              \"Saved model contains node \\\"\", node.name(), \"\\\" (op \\\"\",\n-              node.op(), \"\\\") which initializes from a tensor with \",\n-              node_shape.num_elements(), \" elements\");\n-        }\n+    TF_RETURN_IF_ERROR(ValidateNode(node));\n+  }\n+\n+  if (graph_def.has_library()) {\n+    const FunctionDefLibrary& library = graph_def.library();\n+    for (const auto& function : library.function()) {\n+      for (const auto& node : function.node_def()) {\n+        TF_RETURN_IF_ERROR(ValidateNode(node));\n       }\n-    } else if (node.op() == \"Const\") {\n-      return errors::FailedPrecondition(\n-          \"Saved model contains node \\\"\", node.name(),\n-          \"\\\" which is a constant tensor but no value has been provided\");\n     }\n   }\n+\n   return Status::OK();\n }\n "