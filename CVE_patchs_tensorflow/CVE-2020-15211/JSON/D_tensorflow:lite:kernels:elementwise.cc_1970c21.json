"diff --git a/tensorflow/lite/kernels/elementwise.cc b/tensorflow/lite/kernels/elementwise.cc\nindex d23cdedc6c8..40f13002b8e 100644\n--- a/tensorflow/lite/kernels/elementwise.cc\n+++ b/tensorflow/lite/kernels/elementwise.cc\n@@ -66,8 +66,10 @@ template <IsSupportedType is_supported_type, const char* op_name>\n TfLiteStatus GenericPrepare(TfLiteContext* context, TfLiteNode* node) {\n   TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);\n   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);\n-  const TfLiteTensor* input = GetInput(context, node, 0);\n-  TfLiteTensor* output = GetOutput(context, node, 0);\n+  const TfLiteTensor* input;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));\n   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);\n   if (!is_supported_type(input->type)) {\n     TF_LITE_UNSUPPORTED_TYPE(context, input->type, op_name);\n@@ -114,8 +116,10 @@ template <typename T>\n inline TfLiteStatus EvalImpl(TfLiteContext* context, TfLiteNode* node,\n                              std::function<T(T)> func,\n                              TfLiteType expected_type) {\n-  const TfLiteTensor* input = GetInput(context, node, 0);\n-  TfLiteTensor* output = GetOutput(context, node, 0);\n+  const TfLiteTensor* input;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));\n   TF_LITE_ENSURE_TYPES_EQ(context, input->type, expected_type);\n   const int64_t num_elements = NumElements(input);\n   const T* in_data = GetTensorData<T>(input);"