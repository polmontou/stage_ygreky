"diff --git a/tensorflow/lite/kernels/embedding_lookup.cc b/tensorflow/lite/kernels/embedding_lookup.cc\nindex 36e0737c7e2..d865f69eb9b 100644\n--- a/tensorflow/lite/kernels/embedding_lookup.cc\n+++ b/tensorflow/lite/kernels/embedding_lookup.cc\n@@ -46,14 +46,17 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n   TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);\n   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);\n \n-  const TfLiteTensor* lookup = GetInput(context, node, 0);\n+  const TfLiteTensor* lookup;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));\n   TF_LITE_ENSURE_EQ(context, NumDimensions(lookup), 1);\n   TF_LITE_ENSURE_EQ(context, lookup->type, kTfLiteInt32);\n \n-  const TfLiteTensor* value = GetInput(context, node, 1);\n+  const TfLiteTensor* value;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &value));\n   TF_LITE_ENSURE(context, NumDimensions(value) >= 2);\n \n-  TfLiteTensor* output = GetOutput(context, node, 0);\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));\n   TfLiteIntArray* outputSize = TfLiteIntArrayCreate(NumDimensions(value));\n \n   outputSize->data[0] = SizeOfDimension(lookup, 0);\n@@ -129,9 +132,12 @@ TfLiteStatus EvalHybrid(TfLiteContext* context, TfLiteNode* node,\n }\n \n TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\n-  const TfLiteTensor* lookup = GetInput(context, node, 0);\n-  const TfLiteTensor* value = GetInput(context, node, 1);\n-  TfLiteTensor* output = GetOutput(context, node, 0);\n+  const TfLiteTensor* lookup;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &lookup));\n+  const TfLiteTensor* value;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &value));\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));\n   switch (value->type) {\n     case kTfLiteFloat32:\n       return EvalSimple(context, node, lookup, value, output);"