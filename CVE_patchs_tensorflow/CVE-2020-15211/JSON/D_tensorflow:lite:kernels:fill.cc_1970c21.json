"diff --git a/tensorflow/lite/kernels/fill.cc b/tensorflow/lite/kernels/fill.cc\nindex 68ec3e9eca3..5bf2bc6489c 100644\n--- a/tensorflow/lite/kernels/fill.cc\n+++ b/tensorflow/lite/kernels/fill.cc\n@@ -72,8 +72,10 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n   TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);\n   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);\n \n-  const TfLiteTensor* dims = GetInput(context, node, kDimsTensor);\n-  const TfLiteTensor* value = GetInput(context, node, kValueTensor);\n+  const TfLiteTensor* dims;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kDimsTensor, &dims));\n+  const TfLiteTensor* value;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kValueTensor, &value));\n \n   // Make sure the 1st input tensor is 1-D.\n   TF_LITE_ENSURE_EQ(context, NumDimensions(dims), 1);\n@@ -85,7 +87,9 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n   // Make sure the 2nd input tensor is a scalar.\n   TF_LITE_ENSURE_EQ(context, NumDimensions(value), 0);\n \n-  TfLiteTensor* output = GetOutput(context, node, kOutputTensor);\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetOutputSafe(context, node, kOutputTensor, &output));\n   output->type = value->type;\n \n   if (IsConstantTensor(dims)) {\n@@ -111,12 +115,16 @@ TfLiteStatus FillString(const TfLiteTensor* value, TfLiteTensor* output) {\n }\n \n TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\n-  const TfLiteTensor* value = GetInput(context, node, kValueTensor);\n+  const TfLiteTensor* value;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kValueTensor, &value));\n \n-  TfLiteTensor* output = GetOutput(context, node, kOutputTensor);\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetOutputSafe(context, node, kOutputTensor, &output));\n \n   if (IsDynamicTensor(output)) {\n-    const TfLiteTensor* dims = GetInput(context, node, kDimsTensor);\n+    const TfLiteTensor* dims;\n+    TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kDimsTensor, &dims));\n     TF_LITE_ENSURE_OK(context, ResizeOutput(context, dims, output));\n   }\n #define TF_LITE_FILL(data_type)                                               \\"