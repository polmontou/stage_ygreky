"diff --git a/tensorflow/lite/kernels/pooling.cc b/tensorflow/lite/kernels/pooling.cc\nindex a1380080a1e..1ae3d207b13 100644\n--- a/tensorflow/lite/kernels/pooling.cc\n+++ b/tensorflow/lite/kernels/pooling.cc\n@@ -71,8 +71,10 @@ TfLiteStatus GenericPrepare(TfLiteContext* context, TfLiteNode* node) {\n \n   TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);\n   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);\n-  TfLiteTensor* output = GetOutput(context, node, 0);\n-  const TfLiteTensor* input = GetInput(context, node, 0);\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));\n+  const TfLiteTensor* input;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));\n   TF_LITE_ENSURE_EQ(context, NumDimensions(input), 4);\n   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);\n \n@@ -368,8 +370,10 @@ TfLiteStatus AverageEval(TfLiteContext* context, TfLiteNode* node) {\n   auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);\n   OpData* data = reinterpret_cast<OpData*>(node->user_data);\n \n-  TfLiteTensor* output = GetOutput(context, node, 0);\n-  const TfLiteTensor* input = GetInput(context, node, 0);\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));\n+  const TfLiteTensor* input;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));\n   switch (input->type) {  // Already know in/out types are same.\n     case kTfLiteFloat32:\n       AverageEvalFloat<kernel_type>(context, node, params, data, input, output);\n@@ -399,8 +403,10 @@ TfLiteStatus MaxEval(TfLiteContext* context, TfLiteNode* node) {\n   auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);\n   OpData* data = reinterpret_cast<OpData*>(node->user_data);\n \n-  TfLiteTensor* output = GetOutput(context, node, 0);\n-  const TfLiteTensor* input = GetInput(context, node, 0);\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));\n+  const TfLiteTensor* input;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));\n   switch (input->type) {  // Already know in/out types are same.\n     case kTfLiteFloat32:\n       MaxEvalFloat<kernel_type>(context, node, params, data, input, output);\n@@ -430,8 +436,10 @@ TfLiteStatus L2Eval(TfLiteContext* context, TfLiteNode* node) {\n   auto* params = reinterpret_cast<TfLitePoolParams*>(node->builtin_data);\n   OpData* data = reinterpret_cast<OpData*>(node->user_data);\n \n-  TfLiteTensor* output = GetOutput(context, node, 0);\n-  const TfLiteTensor* input = GetInput(context, node, 0);\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));\n+  const TfLiteTensor* input;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));\n   switch (input->type) {  // Already know in/out types are same.\n     case kTfLiteFloat32:\n       L2EvalFloat<kernel_type>(context, node, params, data, input, output);"