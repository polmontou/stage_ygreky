"diff --git a/tensorflow/lite/kernels/resize_nearest_neighbor.cc b/tensorflow/lite/kernels/resize_nearest_neighbor.cc\nindex b8d0b2bc793..bef39559507 100644\n--- a/tensorflow/lite/kernels/resize_nearest_neighbor.cc\n+++ b/tensorflow/lite/kernels/resize_nearest_neighbor.cc\n@@ -60,9 +60,13 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n   TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);\n   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);\n \n-  const TfLiteTensor* input = GetInput(context, node, kInputTensor);\n-  const TfLiteTensor* size = GetInput(context, node, kSizeTensor);\n-  TfLiteTensor* output = GetOutput(context, node, kOutputTensor);\n+  const TfLiteTensor* input;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));\n+  const TfLiteTensor* size;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kSizeTensor, &size));\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetOutputSafe(context, node, kOutputTensor, &output));\n \n   // TODO(ahentz): Our current implementations rely on the input being 4D,\n   // and the size being 1D tensor with exactly 2 elements.\n@@ -85,9 +89,13 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\n   auto* params =\n       reinterpret_cast<TfLiteResizeNearestNeighborParams*>(node->builtin_data);\n \n-  const TfLiteTensor* input = GetInput(context, node, kInputTensor);\n-  TfLiteTensor* output = GetOutput(context, node, kOutputTensor);\n-  const TfLiteTensor* size = GetInput(context, node, kSizeTensor);\n+  const TfLiteTensor* input;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetOutputSafe(context, node, kOutputTensor, &output));\n+  const TfLiteTensor* size;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kSizeTensor, &size));\n \n   if (IsDynamicTensor(output)) {\n     TF_LITE_ENSURE_OK(context,"