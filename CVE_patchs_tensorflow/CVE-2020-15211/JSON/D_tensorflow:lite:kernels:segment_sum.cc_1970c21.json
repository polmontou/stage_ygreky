"diff --git a/tensorflow/lite/kernels/segment_sum.cc b/tensorflow/lite/kernels/segment_sum.cc\nindex 4b762184a50..42f83c3ad11 100644\n--- a/tensorflow/lite/kernels/segment_sum.cc\n+++ b/tensorflow/lite/kernels/segment_sum.cc\n@@ -64,11 +64,15 @@ TfLiteStatus ResizeOutputTensor(TfLiteContext* context,\n TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n   TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);\n   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);\n-  const TfLiteTensor* data = GetInput(context, node, kInputDataTensor);\n-  const TfLiteTensor* segment_ids =\n-      GetInput(context, node, kInputSegmentIdsTensor);\n-  TfLiteTensor* output = GetOutput(context, node, kOutputTensor);\n-\n+  const TfLiteTensor* data;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetInputSafe(context, node, kInputDataTensor, &data));\n+  const TfLiteTensor* segment_ids;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputSegmentIdsTensor,\n+                                          &segment_ids));\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetOutputSafe(context, node, kOutputTensor, &output));\n   TF_LITE_ENSURE(context,\n                  data->type == kTfLiteInt32 || data->type == kTfLiteFloat32);\n   TF_LITE_ENSURE_EQ(context, segment_ids->type, kTfLiteInt32);\n@@ -82,10 +86,15 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n }\n \n TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\n-  const TfLiteTensor* data = GetInput(context, node, kInputDataTensor);\n-  const TfLiteTensor* segment_ids =\n-      GetInput(context, node, kInputSegmentIdsTensor);\n-  TfLiteTensor* output = GetOutput(context, node, kOutputTensor);\n+  const TfLiteTensor* data;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetInputSafe(context, node, kInputDataTensor, &data));\n+  const TfLiteTensor* segment_ids;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputSegmentIdsTensor,\n+                                          &segment_ids));\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetOutputSafe(context, node, kOutputTensor, &output));\n \n   if (IsDynamicTensor(output)) {\n     TF_LITE_ENSURE_OK(context,"