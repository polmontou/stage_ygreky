"diff --git a/tensorflow/lite/kernels/select.cc b/tensorflow/lite/kernels/select.cc\nindex 08b510f77ad..4ecb7fefd22 100644\n--- a/tensorflow/lite/kernels/select.cc\n+++ b/tensorflow/lite/kernels/select.cc\n@@ -61,11 +61,18 @@ TfLiteStatus SelectPrepare(TfLiteContext* context, TfLiteNode* node) {\n   TF_LITE_ENSURE_EQ(context, NumInputs(node), 3);\n   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);\n \n-  const TfLiteTensor* input_condition =\n-      GetInput(context, node, kInputTensorCondition);\n-  const TfLiteTensor* input_x = GetInput(context, node, kInputTensorX);\n-  const TfLiteTensor* input_y = GetInput(context, node, kInputTensorY);\n-  TfLiteTensor* output = GetOutput(context, node, kOutputTensor);\n+  const TfLiteTensor* input_condition;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensorCondition,\n+                                          &input_condition));\n+  const TfLiteTensor* input_x;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetInputSafe(context, node, kInputTensorX, &input_x));\n+  const TfLiteTensor* input_y;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetInputSafe(context, node, kInputTensorY, &input_y));\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetOutputSafe(context, node, kOutputTensor, &output));\n \n   // Input must be bool.\n   TF_LITE_ENSURE_TYPES_EQ(context, input_condition->type, kTfLiteBool);\n@@ -111,11 +118,18 @@ TfLiteStatus SelectPrepare(TfLiteContext* context, TfLiteNode* node) {\n \n TfLiteStatus SelectEval(TfLiteContext* context, TfLiteNode* node) {\n   OpData* data = reinterpret_cast<OpData*>(node->user_data);\n-  const TfLiteTensor* input_condition =\n-      GetInput(context, node, kInputTensorCondition);\n-  const TfLiteTensor* input_x = GetInput(context, node, kInputTensorX);\n-  const TfLiteTensor* input_y = GetInput(context, node, kInputTensorY);\n-  TfLiteTensor* output = GetOutput(context, node, kOutputTensor);\n+  const TfLiteTensor* input_condition;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensorCondition,\n+                                          &input_condition));\n+  const TfLiteTensor* input_x;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetInputSafe(context, node, kInputTensorX, &input_x));\n+  const TfLiteTensor* input_y;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetInputSafe(context, node, kInputTensorY, &input_y));\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetOutputSafe(context, node, kOutputTensor, &output));\n \n #define TF_LITE_SELECT(type, op)                                           \\\n   reference_ops::op(GetTensorShape(input_condition),                       \\"