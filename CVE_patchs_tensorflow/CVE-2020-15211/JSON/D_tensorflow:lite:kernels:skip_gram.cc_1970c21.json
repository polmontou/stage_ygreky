"diff --git a/tensorflow/lite/kernels/skip_gram.cc b/tensorflow/lite/kernels/skip_gram.cc\nindex f81d152bb70..6505988f4d2 100644\n--- a/tensorflow/lite/kernels/skip_gram.cc\n+++ b/tensorflow/lite/kernels/skip_gram.cc\n@@ -35,6 +35,7 @@ limitations under the License.\n \n #include \"tensorflow/lite/c/builtin_op_data.h\"\n #include \"tensorflow/lite/c/common.h\"\n+#include \"tensorflow/lite/kernels/internal/compatibility.h\"\n #include \"tensorflow/lite/kernels/kernel_util.h\"\n #include \"tensorflow/lite/string_util.h\"\n \n@@ -48,10 +49,12 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n   TF_LITE_ENSURE_EQ(context, NumInputs(node), 1);\n   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);\n \n-  TF_LITE_ENSURE_TYPES_EQ(context, GetInput(context, node, 0)->type,\n-                          kTfLiteString);\n-  TF_LITE_ENSURE_TYPES_EQ(context, GetOutput(context, node, 0)->type,\n-                          kTfLiteString);\n+  const TfLiteTensor* input_tensor;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input_tensor));\n+  TF_LITE_ENSURE_TYPES_EQ(context, input_tensor->type, kTfLiteString);\n+  TfLiteTensor* output_tensor;\n+  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output_tensor));\n+  TF_LITE_ENSURE_TYPES_EQ(context, output_tensor->type, kTfLiteString);\n   return kTfLiteOk;\n }\n \n@@ -91,7 +94,9 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\n \n   // Split sentence to words.\n   std::vector<StringRef> words;\n-  tflite::StringRef strref = tflite::GetString(GetInput(context, node, 0), 0);\n+  const TfLiteTensor* input;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));\n+  tflite::StringRef strref = tflite::GetString(input, 0);\n   int prev_idx = 0;\n   for (int i = 1; i < strref.len; i++) {\n     if (isspace(*(strref.str + i))) {"