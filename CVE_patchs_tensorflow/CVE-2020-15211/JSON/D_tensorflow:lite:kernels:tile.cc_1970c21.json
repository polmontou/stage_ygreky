"diff --git a/tensorflow/lite/kernels/tile.cc b/tensorflow/lite/kernels/tile.cc\nindex 08d246203ae..b2df35e739c 100644\n--- a/tensorflow/lite/kernels/tile.cc\n+++ b/tensorflow/lite/kernels/tile.cc\n@@ -49,9 +49,14 @@ TfLiteIntArray* MultiplyShapeDims(const TfLiteIntArray& shape,\n }\n \n TfLiteStatus ResizeOutput(TfLiteContext* context, TfLiteNode* node) {\n-  const TfLiteTensor* input = GetInput(context, node, kInputTensor);\n-  TfLiteTensor* output = GetOutput(context, node, kOutputTensor);\n-  const TfLiteTensor* multipliers = GetInput(context, node, kInputMultipliers);\n+  const TfLiteTensor* input;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetOutputSafe(context, node, kOutputTensor, &output));\n+  const TfLiteTensor* multipliers;\n+  TF_LITE_ENSURE_OK(\n+      context, GetInputSafe(context, node, kInputMultipliers, &multipliers));\n \n   const int num_dimensions = NumDimensions(input);\n   const int num_multipliers = NumElements(multipliers);\n@@ -208,12 +213,17 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n   TF_LITE_ENSURE_EQ(context, NumInputs(node), 2);\n   TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);\n \n-  const TfLiteTensor* input = GetInput(context, node, kInputTensor);\n+  const TfLiteTensor* input;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));\n \n-  TfLiteTensor* output = GetOutput(context, node, kOutputTensor);\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetOutputSafe(context, node, kOutputTensor, &output));\n   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);\n \n-  const TfLiteTensor* multipliers = GetInput(context, node, kInputMultipliers);\n+  const TfLiteTensor* multipliers;\n+  TF_LITE_ENSURE_OK(\n+      context, GetInputSafe(context, node, kInputMultipliers, &multipliers));\n   // Only int32 and int64 multipliers type is supported.\n   if (multipliers->type != kTfLiteInt32 && multipliers->type != kTfLiteInt64) {\n     context->ReportError(context,\n@@ -231,9 +241,14 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n }\n \n TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\n-  const TfLiteTensor* input = GetInput(context, node, kInputTensor);\n-  TfLiteTensor* output = GetOutput(context, node, kOutputTensor);\n-  const TfLiteTensor* multipliers = GetInput(context, node, kInputMultipliers);\n+  const TfLiteTensor* input;\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));\n+  TfLiteTensor* output;\n+  TF_LITE_ENSURE_OK(context,\n+                    GetOutputSafe(context, node, kOutputTensor, &output));\n+  const TfLiteTensor* multipliers;\n+  TF_LITE_ENSURE_OK(\n+      context, GetInputSafe(context, node, kInputMultipliers, &multipliers));\n \n   if (IsDynamicTensor(output)) {\n     TF_LITE_ENSURE_OK(context, ResizeOutput(context, node));"