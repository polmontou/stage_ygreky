"diff --git a/tensorflow/lite/kernels/segment_sum.cc b/tensorflow/lite/kernels/segment_sum.cc\nindex 8185359321e..4b762184a50 100644\n--- a/tensorflow/lite/kernels/segment_sum.cc\n+++ b/tensorflow/lite/kernels/segment_sum.cc\n@@ -34,11 +34,24 @@ TfLiteStatus ResizeOutputTensor(TfLiteContext* context,\n                                 const TfLiteTensor* data,\n                                 const TfLiteTensor* segment_ids,\n                                 TfLiteTensor* output) {\n-  int max_index = -1;\n+  // Segment ids should be of same cardinality as first input dimension and they\n+  // should be increasing by at most 1, from 0 (e.g., [0, 0, 1, 2, 3] is valid)\n   const int segment_id_size = segment_ids->dims->data[0];\n-  if (segment_id_size > 0) {\n-    max_index = segment_ids->data.i32[segment_id_size - 1];\n+  TF_LITE_ENSURE_EQ(context, segment_id_size, data->dims->data[0]);\n+  int previous_segment_id = -1;\n+  for (int i = 0; i < segment_id_size; i++) {\n+    const int current_segment_id = GetTensorData<int32_t>(segment_ids)[i];\n+    if (i == 0) {\n+      TF_LITE_ENSURE_EQ(context, current_segment_id, 0);\n+    } else {\n+      int delta = current_segment_id - previous_segment_id;\n+      TF_LITE_ENSURE(context, delta == 0 || delta == 1);\n+    }\n+    previous_segment_id = current_segment_id;\n   }\n+\n+  const int max_index = previous_segment_id;\n+\n   const int data_rank = NumDimensions(data);\n   TfLiteIntArray* output_shape = TfLiteIntArrayCreate(NumDimensions(data));\n   output_shape->data[0] = max_index + 1;"