"diff --git a/third_party/eigen3/unsupported/Eigen/CXX11/src/FixedPoint/FixedPointTypes.h b/third_party/eigen3/unsupported/Eigen/CXX11/src/FixedPoint/FixedPointTypes.h\nindex ff359cedced..fd35360da28 100644\n--- a/third_party/eigen3/unsupported/Eigen/CXX11/src/FixedPoint/FixedPointTypes.h\n+++ b/third_party/eigen3/unsupported/Eigen/CXX11/src/FixedPoint/FixedPointTypes.h\n@@ -49,7 +49,7 @@ struct scalar_product_traits<QInt32, double> {\n // the compiler from silently type cast the mantissa into a bigger or a smaller\n // representation.\n struct QInt8 {\n-  QInt8() {}\n+  QInt8() : value(0) {}\n   QInt8(const int8_t v) : value(v) {}\n   QInt8(const QInt32 v);\n \n@@ -59,7 +59,7 @@ struct QInt8 {\n };\n \n struct QUInt8 {\n-  QUInt8() {}\n+  QUInt8() : value(0) {}\n   QUInt8(const uint8_t v) : value(v) {}\n   QUInt8(const QInt32 v);\n \n@@ -69,7 +69,7 @@ struct QUInt8 {\n };\n \n struct QInt16 {\n-  QInt16() {}\n+  QInt16() : value(0) {}\n   QInt16(const int16_t v) : value(v) {}\n   QInt16(const QInt32 v);\n   operator int() const { return static_cast<int>(value); }\n@@ -78,7 +78,7 @@ struct QInt16 {\n };\n \n struct QUInt16 {\n-  QUInt16() {}\n+  QUInt16() : value(0) {}\n   QUInt16(const uint16_t v) : value(v) {}\n   QUInt16(const QInt32 v);\n   operator int() const { return static_cast<int>(value); }\n@@ -87,7 +87,7 @@ struct QUInt16 {\n };\n \n struct QInt32 {\n-  QInt32() {}\n+  QInt32() : value(0) {}\n   QInt32(const int8_t v) : value(v) {}\n   QInt32(const int32_t v) : value(v) {}\n   QInt32(const uint32_t v) : value(static_cast<int32_t>(v)) {}"