"# Python support for TensorFlow.\n#\n# Public targets:\n#  \":platform\" - Low-level and platform-specific Python code.\n\nload(\"//tensorflow:tensorflow.bzl\", \"cc_header_only_library\", \"if_mlir\", \"if_not_windows\", \"py_test\", \"py_tests\", \"tf_cc_shared_object\", \"tf_cuda_library\", \"tf_gen_op_wrapper_py\", \"tf_py_build_info_genrule\", \"tf_py_test\")\nload(\"//tensorflow:tensorflow.bzl\", \"tf_python_pybind_extension\")\nload(\"//tensorflow:tensorflow.bzl\", \"pybind_extension\")\nload(\"//tensorflow:tensorflow.bzl\", \"tf_py_wrap_cc\")\nload(\"//tensorflow:tensorflow.bzl\", \"cuda_py_test\")\nload(\"//tensorflow:tensorflow.bzl\", \"cuda_py_tests\")\nload(\"//tensorflow:tensorflow.bzl\", \"tf_external_workspace_visible\")\nload(\"//tensorflow/core/platform:build_config.bzl\", \"pyx_library\", \"tf_additional_all_protos\", \"tf_additional_lib_deps\", \"tf_proto_library\", \"tf_proto_library_py\", \"tf_protos_grappler\")  # @unused\nload(\"//tensorflow/core/platform:build_config_root.bzl\", \"if_static\", \"tf_additional_plugin_deps\", \"tf_additional_xla_deps_py\")\nload(\"//tensorflow/python:build_defs.bzl\", \"tf_gen_op_wrapper_private_py\")\nload(\n    \"//third_party/ngraph:build_defs.bzl\",\n    \"if_ngraph\",\n)\n\nvisibility = [\n    \"//engedu/ml/tf_from_scratch:__pkg__\",\n    \"//third_party/cloud_tpu/convergence_tools:__subpackages__\",\n    \"//third_party/mlperf:__subpackages__\",\n    \"//tensorflow:internal\",\n    \"//tensorflow/lite/toco/python:__pkg__\",\n    \"//tensorflow_models:__subpackages__\",\n    \"//tensorflow_model_optimization:__subpackages__\",\n    \"//third_party/py/cleverhans:__subpackages__\",\n    \"//third_party/py/reverb:__subpackages__\",\n    \"//third_party/py/neural_structured_learning:__subpackages__\",\n    \"//third_party/py/tensorflow_examples:__subpackages__\",\n    \"//third_party/py/tf_slim:__subpackages__\",\n    # TODO(aselle): to pass open source test.\n    \"//bazel_pip/tensorflow/lite/toco/python:__pkg__\",\n]\n\npackage(\n    default_visibility = visibility,\n    licenses = [\"notice\"],  # Apache 2.0\n)\n\nexports_files([\"LICENSE\"])\n\nexports_files([\"platform/base.i\"])\n\nexports_files(\n    [\"lib/core/strings.i\"],\n    visibility = [\n        \"//bazel_pip/tensorflow/lite/toco/python:__pkg__\",\n        \"//engedu/ml/tf_from_scratch:__pkg__\",\n        \"//tensorflow:internal\",\n        \"//tensorflow/lite/toco/python:__pkg__\",\n        \"//tensorflow_model_optimization:__subpackages__\",\n        \"//tensorflow_models:__subpackages__\",\n        \"//third_party/cloud_tpu/convergence_tools:__subpackages__\",\n        \"//third_party/py/cleverhans:__subpackages__\",\n        \"//third_party/py/neural_structured_learning:__subpackages__\",\n        \"//third_party/py/reverb:__subpackages__\",\n        \"//third_party/py/tensorflow_examples:__subpackages__\",\n        \"//third_party/py/tf_slim:__subpackages__\",\n    ],\n)\n\n# Description:\n\npy_library(\n    name = \"python\",\n    srcs = [\"__init__.py\"],\n    srcs_version = \"PY2AND3\",\n    visibility = [\n        \"//tensorflow:__pkg__\",\n        \"//tensorflow/compiler/aot/tests:__pkg__\",  # TODO(b/34059704): remove when fixed\n        \"//tensorflow/lite/toco/python:__pkg__\",  # TODO(b/34059704): remove when fixed\n        \"//tensorflow/python/debug:__pkg__\",  # TODO(b/34059704): remove when fixed\n        \"//tensorflow/python/tools:__pkg__\",  # TODO(b/34059704): remove when fixed\n        \"//tensorflow/tools/quantization:__pkg__\",  # TODO(b/34059704): remove when fixed\n    ],\n    deps = [\n        \":no_contrib\",\n        \"//tensorflow/python/estimator:estimator_py\",\n        \"//tensorflow/python/tpu:tpu_estimator\",\n    ],\n)\n\npy_library(\n    name = \"keras_lib\",\n    srcs_version = \"PY2AND3\",\n    visibility = [\n        \"//tensorflow:__pkg__\",\n        \"//tensorflow:internal\",\n        \"//tensorflow/python/estimator:__subpackages__\",\n        \"//tensorflow/python/keras:__subpackages__\",\n        \"//tensorflow/python/tools:__pkg__\",\n        \"//tensorflow/python/tools/api/generator:__pkg__\",\n        \"//tensorflow/tools/api/tests:__pkg__\",\n        \"//tensorflow/tools/compatibility/update:__pkg__\",\n        \"//tensorflow_estimator:__subpackages__\",\n    ],\n    deps = [\n        \":layers\",\n        \":rnn\",\n        \"//tensorflow/python/feature_column:feature_column_py\",\n        \"//tensorflow/python/keras\",\n    ],\n)\n\npy_library(\n    name = \"no_contrib\",\n    srcs = [\"__init__.py\"],\n    srcs_version = \"PY2AND3\",\n    visibility = [\n        \"//tensorflow:__pkg__\",\n        \"//tensorflow/python/estimator:__subpackages__\",\n        \"//tensorflow/python/keras:__subpackages__\",\n        \"//tensorflow/python/tools:__pkg__\",\n        \"//tensorflow/python/tools/api/generator:__pkg__\",\n        \"//tensorflow/tools/api/tests:__pkg__\",\n        \"//tensorflow/tools/compatibility/update:__pkg__\",\n        \"//third_party/py/tensorflow_core:__subpackages__\",\n    ],\n    deps = [\n        \":_pywrap_checkpoint_reader\",\n        \":_pywrap_events_writer\",\n        \":_pywrap_kernel_registry\",\n        \":_pywrap_py_exception_registry\",\n        \":_pywrap_python_op_gen\",\n        \":_pywrap_quantize_training\",\n        \":_pywrap_stacktrace_handler\",\n        \":_pywrap_stat_summarizer\",\n        \":_pywrap_tfprof\",\n        \":_pywrap_transform_graph\",\n        \":_pywrap_util_port\",\n        \":_pywrap_utils\",\n        \":array_ops\",\n        \":audio_ops_gen\",\n        \":bitwise_ops\",\n        \":boosted_trees_ops\",\n        \":check_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":clustering_ops\",\n        \":collective_ops\",\n        \":cond_v2\",\n        \":config\",\n        \":confusion_matrix\",\n        \":control_flow_ops\",\n        \":cudnn_rnn_ops_gen\",\n        \":errors\",\n        \":framework\",\n        \":framework_combinations\",\n        \":framework_for_generated_wrappers\",\n        \":functional_ops\",\n        \":gradient_checker\",\n        \":gradient_checker_v2\",\n        \":graph_util\",\n        \":histogram_ops\",\n        \":image_ops\",\n        \":initializers_ns\",\n        \":io_ops\",\n        \":keras_lib\",\n        \":kernels\",\n        \":lib\",\n        \":list_ops\",\n        \":manip_ops\",\n        \":map_fn\",\n        \":math_ops\",\n        \":metrics\",\n        \":nccl_ops\",\n        \":nn\",\n        \":ops\",\n        \":platform\",\n        \":proto_ops\",\n        \":pywrap_tensorflow\",\n        \":pywrap_tfe\",\n        \":rnn_ops_gen\",\n        \":saver_test_utils\",\n        \":script_ops\",\n        \":sendrecv_ops_gen\",\n        \":session_ops\",\n        \":sets\",\n        \":sparse_ops\",\n        \":standard_ops\",\n        \":state_ops\",\n        \":string_ops\",\n        \":subscribe\",\n        \":summary\",\n        \":tensor_array_ops\",\n        \":tensor_forest_ops\",\n        \":test_ops\",  # TODO: Break testing code out into separate rule.\n        \":tf_cluster\",\n        \":tf_item\",\n        \":tf_optimizer\",\n        \":training\",\n        \":util\",\n        \":weights_broadcast_ops\",\n        \":while_v2\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/lite/python:lite\",\n        \"//tensorflow/python/compat\",\n        \"//tensorflow/python/compat:v2_compat\",\n        \"//tensorflow/python/compiler\",\n        \"//tensorflow/python/data\",\n        \"//tensorflow/python/debug:debug_py\",\n        \"//tensorflow/python/distribute\",\n        \"//tensorflow/python/distribute:combinations\",\n        \"//tensorflow/python/distribute:distribute_config\",\n        \"//tensorflow/python/distribute:estimator_training\",\n        \"//tensorflow/python/distribute:multi_worker_test_base\",\n        \"//tensorflow/python/distribute:strategy_combinations\",\n        \"//tensorflow/python/eager:def_function\",\n        \"//tensorflow/python/eager:monitoring\",\n        \"//tensorflow/python/eager:profiler\",\n        \"//tensorflow/python/eager:profiler_client\",\n        \"//tensorflow/python/eager:remote\",\n        \"//tensorflow/python/module\",\n        \"//tensorflow/python/ops/distributions\",\n        \"//tensorflow/python/ops/linalg\",\n        \"//tensorflow/python/ops/linalg/sparse\",\n        \"//tensorflow/python/ops/losses\",\n        \"//tensorflow/python/ops/parallel_for\",\n        \"//tensorflow/python/ops/ragged\",\n        \"//tensorflow/python/ops/signal\",\n        \"//tensorflow/python/profiler\",\n        \"//tensorflow/python/saved_model\",\n        \"//tensorflow/python/tools:module_util\",\n        \"//tensorflow/python/tools/api/generator:create_python_api\",\n        \"//tensorflow/python/tpu:tpu_noestimator\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_build_info_genrule(\n    name = \"py_build_info_gen\",\n    out = \"platform/build_info.py\",\n)\n\npy_library(\n    name = \"platform\",\n    srcs = glob(\n        [\n            \"platform/*.py\",\n        ],\n        exclude = [\n            \"**/*test.py\",\n            \"**/benchmark.py\",  # In platform_benchmark.\n            \"**/analytics.py\",  # In platform_analytics.\n            \"**/device_context.py\",  # In platform_device_context.\n        ],\n    ) + [\"platform/build_info.py\"],\n    srcs_version = \"PY2AND3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":_pywrap_util_port\",\n        \":lib\",\n        \":pywrap_tfe\",\n        \":util\",\n        \"//tensorflow/core:protos_all_py\",\n        \"@absl_py//absl:app\",\n        \"@absl_py//absl/flags\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"platform_benchmark\",\n    srcs = [\"platform/benchmark.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":client\",\n        \":platform\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"platform_analytics\",\n    srcs = [\"platform/analytics.py\"],\n    srcs_version = \"PY2AND3\",\n)\n\npy_library(\n    name = \"platform_device_context\",\n    srcs = [\"platform/device_context.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":control_flow_ops\",\n        \":framework\",\n    ],\n)\n\npy_library(\n    name = \"platform_test\",\n    srcs = [\"platform/googletest.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":platform_benchmark\",\n        \"@absl_py//absl/testing:absltest\",\n    ],\n)\n\ntf_py_test(\n    name = \"resource_loader_test\",\n    size = \"small\",\n    srcs = [\"platform/resource_loader_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":platform\",\n        \":platform_test\",\n    ],\n)\n\ntf_py_test(\n    name = \"flags_test\",\n    size = \"small\",\n    srcs = [\"platform/flags_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":platform\",\n    ],\n)\n\ntf_py_test(\n    name = \"stacktrace_handler_test\",\n    size = \"small\",\n    srcs = [\"platform/stacktrace_handler_test.py\"],\n    python_version = \"PY3\",\n    tags = [\n        \"no_windows\",\n        \"nomac\",\n        \"notap\",  # TODO(b/137133525): enable after this is fixed.\n    ],\n    deps = [\n        \":client_testlib\",\n        \":platform\",\n    ],\n)\n\ntf_py_test(\n    name = \"app_test\",\n    size = \"small\",\n    srcs = [\"platform/app_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"notap\"],\n    deps = [\":platform\"],\n)\n\ncc_library(\n    name = \"cost_analyzer_lib\",\n    srcs = [\"grappler/cost_analyzer.cc\"],\n    hdrs = [\"grappler/cost_analyzer.h\"],\n    deps = [\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/grappler:grappler_item\",\n        \"//tensorflow/core/grappler/clusters:cluster\",\n        \"//tensorflow/core/grappler/costs:analytical_cost_estimator\",\n        \"//tensorflow/core/grappler/costs:cost_estimator\",\n        \"//tensorflow/core/grappler/costs:measuring_cost_estimator\",\n        \"//tensorflow/core/grappler/costs:utils\",\n    ] + tf_protos_grappler(),\n)\n\ncc_library(\n    name = \"model_analyzer_lib\",\n    srcs = [\"grappler/model_analyzer.cc\"],\n    hdrs = [\"grappler/model_analyzer.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/grappler:grappler_item\",\n        \"//tensorflow/core/grappler/costs:graph_properties\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_model_analyzer\",\n    srcs = [\"grappler/model_analyzer_wrapper.cc\"],\n    hdrs = [\"grappler/model_analyzer.h\"],\n    module_name = \"_pywrap_model_analyzer\",\n    deps = [\n        \":model_analyzer_lib\",\n        \":pybind11_status\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/grappler:grappler_item_builder\",\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"numpy_lib\",\n    srcs = [\"lib/core/numpy.cc\"],\n    hdrs = [\"lib/core/numpy.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//third_party/py/numpy:headers\",\n        \"//third_party/python_runtime:headers\",\n    ],\n)\n\ncc_library(\n    name = \"bfloat16_lib\",\n    srcs = [\"lib/core/bfloat16.cc\"],\n    hdrs = [\"lib/core/bfloat16.h\"],\n    deps = [\n        \":numpy_lib\",\n        \":safe_ptr\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//third_party/python_runtime:headers\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_bfloat16\",\n    srcs = [\"lib/core/bfloat16_wrapper.cc\"],\n    hdrs = [\"lib/core/bfloat16.h\"],\n    module_name = \"_pywrap_bfloat16\",\n    deps = [\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"ndarray_tensor_bridge\",\n    srcs = [\"lib/core/ndarray_tensor_bridge.cc\"],\n    hdrs = [\"lib/core/ndarray_tensor_bridge.h\"],\n    visibility = tf_external_workspace_visible(\n        visibility + [\n            \"//learning/deepmind/courier:__subpackages__\",\n        ],\n    ),\n    deps = [\n        \":bfloat16_lib\",\n        \":numpy_lib\",\n        \"//tensorflow/c:c_api\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ncc_library(\n    name = \"py_exception_registry\",\n    srcs = [\"lib/core/py_exception_registry.cc\"],\n    hdrs = [\"lib/core/py_exception_registry.h\"],\n    deps = [\n        \"//tensorflow/c:tf_status_headers\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/python_runtime:headers\",\n    ],\n)\n\ncc_library(\n    name = \"pybind11_absl\",\n    hdrs = [\"lib/core/pybind11_absl.h\"],\n    features = [\"-parse_headers\"],\n    visibility = tf_external_workspace_visible(visibility),\n    deps = [\n        \"//tensorflow/core/platform:stringpiece\",\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"pybind11_lib\",\n    hdrs = [\"lib/core/pybind11_lib.h\"],\n    features = [\"-parse_headers\"],\n    visibility = tf_external_workspace_visible(visibility),\n    deps = [\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"pybind11_status\",\n    hdrs = [\n        \"lib/core/py_exception_registry.h\",\n        \"lib/core/pybind11_status.h\",\n        \"//tensorflow/c:headers\",\n    ],\n    features = [\"-parse_headers\"],\n    visibility = tf_external_workspace_visible(visibility),\n    deps = [\n        \"//tensorflow/c:tf_status_headers\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"pybind11_proto\",\n    hdrs = [\"lib/core/pybind11_proto.h\"],\n    features = [\"-parse_headers\"],\n    visibility = tf_external_workspace_visible(visibility),\n    deps = [\n        \"@com_google_absl//absl/strings\",\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"kernel_registry\",\n    srcs = [\"util/kernel_registry.cc\"],\n    hdrs = [\"util/kernel_registry.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n    alwayslink = 1,\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_tfprof\",\n    srcs = [\"util/tfprof_wrapper.cc\"],\n    module_name = \"_pywrap_tfprof\",\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/profiler/internal:print_model_analysis_hdr\",\n        \"//third_party/eigen3\",\n        \"//third_party/python_runtime:headers\",\n        \"@com_google_absl//absl/strings\",\n        \"@pybind11\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_utils\",\n    srcs = [\"util/util_wrapper.cc\"],\n    hdrs = [\"util/util.h\"],\n    module_name = \"_pywrap_utils\",\n    deps = [\n        \":pybind11_lib\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_kernel_registry\",\n    srcs = [\"util/kernel_registry_wrapper.cc\"],\n    hdrs = [\"util/kernel_registry.h\"],\n    module_name = \"_pywrap_kernel_registry\",\n    deps = [\n        \":pybind11_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_quantize_training\",\n    srcs = [\n        \"training/quantize_training_wrapper.cc\",\n    ],\n    hdrs = [\"//tensorflow/core:quantize_training_hdrs\"],\n    module_name = \"_pywrap_quantize_training\",\n    deps = [\n        \":pybind11_lib\",\n        \":pybind11_proto\",\n        \":pybind11_status\",\n        \"//tensorflow/core:core_cpu_headers_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/python_runtime:headers\",\n        \"@com_google_absl//absl/strings\",\n        \"@pybind11\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_stat_summarizer\",\n    srcs = [\"util/stat_summarizer_wrapper.cc\"],\n    module_name = \"_pywrap_stat_summarizer\",\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/python_runtime:headers\",\n        \"@com_google_absl//absl/memory\",\n        \"@pybind11\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_util_port\",\n    srcs = [\"util/port_wrapper.cc\"],\n    hdrs = [\"//tensorflow/core/util:port_hdrs\"],\n    module_name = \"_pywrap_util_port\",\n    deps = [\n        \"//tensorflow/core/util:port\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_debug_events_writer\",\n    srcs = [\"client/debug_events_writer_wrapper.cc\"],\n    module_name = \"_pywrap_debug_events_writer\",\n    deps = [\n        \":pybind11_absl\",\n        \":pybind11_proto\",\n        \":pybind11_status\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/python_runtime:headers\",\n        \"@com_google_absl//absl/strings\",\n        \"@pybind11\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_events_writer\",\n    srcs = [\"client/events_writer_wrapper.cc\"],\n    module_name = \"_pywrap_events_writer\",\n    deps = [\n        \":pybind11_absl\",\n        \":pybind11_proto\",\n        \":pybind11_status\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/python_runtime:headers\",\n        \"@com_google_absl//absl/strings\",\n        \"@pybind11\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_stacktrace_handler\",\n    srcs = [\"platform/stacktrace_handler_wrapper.cc\"],\n    hdrs = [\"//tensorflow/core/platform:stacktrace_handler_hdrs\"],\n    module_name = \"_pywrap_stacktrace_handler\",\n    deps = [\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_transform_graph\",\n    srcs = [\"util/transform_graph_wrapper.cc\"],\n    hdrs = [\"//tensorflow/tools/graph_transforms:transform_graph_hdrs\"],\n    module_name = \"_pywrap_transform_graph\",\n    deps = [\n        \":pybind11_status\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_checkpoint_reader\",\n    srcs = [\"util/py_checkpoint_reader_wrapper.cc\"],\n    hdrs = [\n        \"lib/core/ndarray_tensor.h\",\n        \"lib/core/safe_ptr.h\",\n        \":py_exception_registry_hdr\",\n        \"//tensorflow/c:checkpoint_reader_hdrs\",\n        \"//tensorflow/c:headers\",\n        \"//tensorflow/c/eager:headers\",\n    ],\n    module_name = \"_pywrap_checkpoint_reader\",\n    deps = [\n        \":pybind11_lib\",\n        \":pybind11_status\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:op_gen_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/util/tensor_bundle:tensor_bundle_headers_lib\",\n        \"//third_party/py/numpy:headers\",\n        \"//third_party/python_runtime:headers\",\n        \"@com_google_absl//absl/strings\",\n        \"@pybind11\",\n    ],\n)\n\nfilegroup(\n    name = \"py_exception_registry_hdr\",\n    srcs = [\n        \"lib/core/py_exception_registry.h\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_py_exception_registry\",\n    srcs = [\"lib/core/py_exception_registry_wrapper.cc\"],\n    hdrs = [\n        \":py_exception_registry_hdr\",\n        \"//tensorflow/c:headers\",\n        \"//tensorflow/c/eager:headers\",\n    ],\n    module_name = \"_pywrap_py_exception_registry\",\n    deps = [\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_toco_api\",\n    srcs = [\n        \"lite/toco_python_api_wrapper.cc\",\n    ],\n    hdrs = [\"//tensorflow/lite/toco/python:toco_python_api_hdrs\"],\n    module_name = \"_pywrap_toco_api\",\n    deps = [\n        \":pybind11_lib\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"cpp_python_util\",\n    srcs = [\"util/util.cc\"],\n    hdrs = [\"util/util.h\"],\n    deps = [\n        \":safe_ptr\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//third_party/python_runtime:headers\",\n        \"@com_google_absl//absl/memory\",\n    ],\n)\n\ncc_library(\n    name = \"py_func_lib\",\n    srcs = [\"lib/core/py_func.cc\"],\n    hdrs = [\"lib/core/py_func.h\"],\n    deps = [\n        \":ndarray_tensor\",\n        \":ndarray_tensor_bridge\",\n        \":numpy_lib\",\n        \":py_util\",\n        \":safe_ptr\",\n        \"//tensorflow/c:tf_status_helper\",\n        \"//tensorflow/c/eager:c_api\",\n        \"//tensorflow/c/eager:c_api_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:script_ops_op_lib\",\n        \"//tensorflow/python/eager:pywrap_tfe_lib\",\n        \"//third_party/py/numpy:headers\",\n        \"//third_party/python_runtime:headers\",\n    ],\n    alwayslink = 1,\n)\n\ncc_header_only_library(\n    name = \"py_func_headers_lib\",\n    deps = [\n        \":py_func_lib\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_py_func\",\n    srcs = [\"lib/core/py_func_wrapper.cc\"],\n    module_name = \"_pywrap_py_func\",\n    deps = [\n        \":py_func_headers_lib\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"safe_ptr\",\n    srcs = [\"lib/core/safe_ptr.cc\"],\n    hdrs = [\"lib/core/safe_ptr.h\"],\n    deps = [\n        \"//tensorflow/c:c_api\",\n        \"//tensorflow/c/eager:c_api\",\n        \"//third_party/python_runtime:headers\",\n    ],\n)\n\ncc_library(\n    name = \"ndarray_tensor\",\n    srcs = [\"lib/core/ndarray_tensor.cc\"],\n    hdrs = [\"lib/core/ndarray_tensor.h\"],\n    visibility = tf_external_workspace_visible(visibility + [\n        \"//learning/deepmind/courier:__subpackages__\",\n    ]),\n    deps = [\n        \":bfloat16_lib\",\n        \":ndarray_tensor_bridge\",\n        \":numpy_lib\",\n        \":safe_ptr\",\n        \"//tensorflow/c:c_api\",\n        \"//tensorflow/c:c_api_internal\",\n        \"//tensorflow/c:tf_status_helper\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ncc_library(\n    name = \"py_seq_tensor\",\n    srcs = [\"lib/core/py_seq_tensor.cc\"],\n    hdrs = [\"lib/core/py_seq_tensor.h\"],\n    deps = [\n        \":numpy_lib\",\n        \":py_util\",\n        \":safe_ptr\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//third_party/python_runtime:headers\",\n    ],\n)\n\ncc_library(\n    name = \"py_util\",\n    srcs = [\"lib/core/py_util.cc\"],\n    hdrs = [\"lib/core/py_util.h\"],\n    deps = [\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:script_ops_op_lib\",\n        \"//third_party/python_runtime:headers\",\n    ],\n)\n\ncc_library(\n    name = \"py_record_reader_lib\",\n    srcs = [\"lib/io/py_record_reader.cc\"],\n    hdrs = [\"lib/io/py_record_reader.h\"],\n    deps = [\n        \"//tensorflow/c:c_api\",\n        \"//tensorflow/c:tf_status_helper\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n    ],\n)\n\ntf_cc_shared_object(\n    name = \"framework/test_file_system.so\",\n    srcs = [\"framework/test_file_system.cc\"],\n    copts = if_not_windows([\"-Wno-sign-compare\"]),\n    linkopts = select({\n        \"//conditions:default\": [\n            \"-lm\",\n        ],\n        \"//tensorflow:macos\": [],\n        \"//tensorflow:windows\": [],\n    }),\n    deps = [\n        \"//tensorflow/core:framework_headers_lib\",\n        \"//third_party/eigen3\",\n        \"@com_google_protobuf//:protobuf_headers\",\n    ],\n)\n\ntf_py_test(\n    name = \"file_system_test\",\n    size = \"small\",\n    srcs = [\"framework/file_system_test.py\"],\n    data = [\":framework/test_file_system.so\"],\n    main = \"framework/file_system_test.py\",\n    python_version = \"PY3\",\n    tags = [\n        \"no_pip\",  # Path issues due to test environment\n        \"no_windows\",\n        \"notap\",\n    ],\n    deps = [\n        \":client_testlib\",\n        \":data_flow_ops\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":io_ops\",\n        \":platform\",\n        \":util\",\n    ],\n)\n\ntf_py_test(\n    name = \"decorator_utils_test\",\n    srcs = [\"util/decorator_utils_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":platform\",\n        \":util\",\n    ],\n)\n\ntf_py_test(\n    name = \"tf_export_test\",\n    srcs = [\"util/tf_export_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":platform\",\n        \":util\",\n    ],\n)\n\ntf_py_test(\n    name = \"deprecation_test\",\n    srcs = [\"util/deprecation_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":platform\",\n        \":util\",\n    ],\n)\n\ntf_py_test(\n    name = \"dispatch_test\",\n    srcs = [\"util/dispatch_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":platform\",\n        \":util\",\n    ],\n)\n\ntf_py_test(\n    name = \"keyword_args_test\",\n    srcs = [\"util/keyword_args_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":util\",\n    ],\n)\n\ncc_library(\n    name = \"python_op_gen\",\n    srcs = [\n        \"framework/python_op_gen.cc\",\n        \"framework/python_op_gen_internal.cc\",\n    ],\n    hdrs = [\n        \"framework/python_op_gen.h\",\n        \"framework/python_op_gen_internal.h\",\n    ],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:op_gen_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@com_google_absl//absl/strings\",\n    ],\n    alwayslink = 1,\n)\n\ncc_header_only_library(\n    name = \"python_op_gen_headers_lib\",\n    extra_deps = [\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n    deps = [\n        \":python_op_gen\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_python_op_gen\",\n    srcs = [\"framework/python_op_gen_wrapper.cc\"],\n    module_name = \"_pywrap_python_op_gen\",\n    deps = [\n        \":pybind11_absl\",\n        \":pybind11_lib\",\n        \":python_op_gen_headers_lib\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"python_op_gen_main\",\n    srcs = [\"framework/python_op_gen_main.cc\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":python_op_gen\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:op_gen_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n    alwayslink = 1,\n)\n\npy_library(\n    name = \"framework_for_generated_wrappers\",\n    srcs_version = \"PY2AND3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":constant_op\",\n        \":device\",\n        \":device_spec\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":function\",\n        \":op_def_library\",\n        \":op_def_registry\",\n        \":registry\",\n        \":tensor_shape\",\n        \":versions\",\n    ],\n)\n\n# What is needed for tf_gen_op_wrapper_py. This is the same as\n# \"framework_for_generated_wrappers\" minus the \"function\" dep. This is to avoid\n# circular dependencies, as \"function\" uses generated op wrappers.\npy_library(\n    name = \"framework_for_generated_wrappers_v2\",\n    srcs_version = \"PY2AND3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":constant_op\",\n        \":device\",\n        \":device_spec\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":op_def_library\",\n        \":op_def_registry\",\n        \":registry\",\n        \":tensor_shape\",\n        \":versions\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:core\",\n        \"//tensorflow/python/eager:execute\",\n        \"//tensorflow/tools/docs:doc_controls\",\n    ],\n)\n\npy_library(\n    name = \"subscribe\",\n    srcs = [\"framework/subscribe.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":framework_ops\",\n        \":platform\",\n        \":variables\",\n    ],\n)\n\npy_library(\n    name = \"framework\",\n    srcs = [\n        \"framework/framework_lib.py\",\n        \"framework/graph_io.py\",\n        \"framework/importer.py\",\n        \"framework/load_library.py\",\n        \"framework/meta_graph.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":_pywrap_checkpoint_reader\",\n        \":_pywrap_debug_events_writer\",\n        \":_pywrap_events_writer\",\n        \":_pywrap_kernel_registry\",\n        \":_pywrap_py_exception_registry\",\n        \":_pywrap_py_func\",  # TODO(b/142001480): remove once the bug is fixed.\n        \":_pywrap_python_op_gen\",\n        \":_pywrap_quantize_training\",\n        \":_pywrap_stacktrace_handler\",\n        \":_pywrap_stat_summarizer\",\n        \":_pywrap_tfprof\",\n        \":_pywrap_transform_graph\",\n        \":_pywrap_util_port\",\n        \":_pywrap_utils\",\n        \":composite_tensor\",\n        \":convert_to_constants\",\n        \":cpp_shape_inference_proto_py\",\n        \":errors\",\n        \":framework_fast_tensor_util\",\n        \":framework_for_generated_wrappers\",\n        \":function\",\n        \":graph_util\",\n        \":lib\",\n        \":platform\",\n        \":pywrap_tensorflow\",\n        \":pywrap_tfe\",\n        \":random_seed\",\n        \":sparse_tensor\",\n        \":tensor_spec\",\n        \":tensor_util\",\n        \":type_spec\",\n        \":util\",\n        \"//tensorflow/python/eager:context\",\n        \"//third_party/py/numpy\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"c_api_util\",\n    srcs = [\"framework/c_api_util.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":pywrap_tensorflow\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"common_shapes\",\n    srcs = [\"framework/common_shapes.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":tensor_shape\",\n    ],\n)\n\npy_library(\n    name = \"constant_op\",\n    srcs = [\"framework/constant_op.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":dtypes\",\n        \":framework_ops\",\n        \":tensor_shape\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:execute\",\n    ],\n)\n\npy_library(\n    name = \"device_spec\",\n    srcs = [\"framework/device_spec.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"device\",\n    srcs = [\"framework/device.py\"],\n    srcs_version = \"PY2AND3\",\n)\n\ntf_python_pybind_extension(\n    name = \"_dtypes\",\n    srcs = [\"framework/dtypes.cc\"],\n    module_name = \"_dtypes\",\n    deps = [\n        \"//tensorflow/core:framework_headers_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/eigen3\",\n        \"@pybind11\",\n    ],\n)\n\npy_library(\n    name = \"dtypes\",\n    srcs = [\"framework/dtypes.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":_dtypes\",\n        \":_pywrap_bfloat16\",\n        \":pywrap_tensorflow\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"errors\",\n    srcs = [\n        \"framework/errors.py\",\n        \"framework/errors_impl.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":_pywrap_py_exception_registry\",\n        \":c_api_util\",\n        \":error_interpolation\",\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"error_interpolation\",\n    srcs = [\n        \"framework/error_interpolation.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"function\",\n    srcs = [\"framework/function.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":graph_to_function_def\",\n        \":op_def_registry\",\n        \":util\",\n        \":variable_scope\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\npy_library(\n    name = \"graph_to_function_def\",\n    srcs = [\"framework/graph_to_function_def.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":op_def_registry\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"function_def_to_graph\",\n    srcs = [\"framework/function_def_to_graph.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework\",\n        \":framework_ops\",\n        \":function\",\n        \":tensor_shape\",\n        \":versions\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"function_def_to_graph_test\",\n    size = \"small\",\n    srcs = [\"framework/function_def_to_graph_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_pip\"],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":constant_op\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":function\",\n        \":function_def_to_graph\",\n        \":graph_to_function_def\",\n        \":math_ops\",\n        \":op_def_library\",\n        \":test_ops\",\n    ],\n)\n\npy_library(\n    name = \"graph_util\",\n    srcs = [\n        \"framework/graph_util.py\",\n        \"framework/graph_util_impl.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":dtypes\",\n        \":framework_ops\",\n        \":platform\",\n        \":tensor_util\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"convert_to_constants\",\n    srcs = [\n        \"framework/convert_to_constants.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":dtypes\",\n        \":framework_ops\",\n        \":platform\",\n        \":tensor_util\",\n        \":tf_optimizer\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"kernels\",\n    srcs = [\n        \"framework/kernels.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":pywrap_tensorflow\",\n        \":util\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"op_def_library\",\n    srcs = [\"framework/op_def_library.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":dtypes\",\n        \":framework_ops\",\n        \":op_callbacks\",\n        \":op_def_registry\",\n        \":platform\",\n        \":tensor_shape\",\n        \":util\",\n        \"//tensorflow/core:protos_all_py\",\n        \"@six_archive//:six\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_op_def_registry\",\n    srcs = [\"framework/op_def_registry.cc\"],\n    module_name = \"_op_def_registry\",\n    deps = [\n        \":pybind11_status\",\n        \"//tensorflow/core:framework_headers_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@pybind11\",\n    ],\n)\n\npy_library(\n    name = \"op_def_registry\",\n    srcs = [\"framework/op_def_registry.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":_op_def_registry\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"framework_ops\",  # \"ops\" is already the name of a deprecated target\n    srcs = [\"framework/ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":c_api_util\",\n        \":control_flow_util\",\n        \":device\",\n        \":dtypes\",\n        \":error_interpolation\",\n        \":indexed_slices\",\n        \":op_def_registry\",\n        \":platform\",\n        \":registry\",\n        \":tensor_conversion_registry\",\n        \":tensor_like\",\n        \":tensor_shape\",\n        \":tf2\",\n        \":traceable_stack\",\n        \":type_spec\",\n        \":util\",\n        \":versions\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:core\",\n        \"//tensorflow/python/eager:monitoring\",\n        \"//tensorflow/python/eager:tape\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"op_callbacks\",\n    srcs = [\"framework/op_callbacks.py\"],\n    srcs_version = \"PY2AND3\",\n)\n\ncuda_py_test(\n    name = \"op_callbacks_test\",\n    srcs = [\"framework/op_callbacks_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":framework_test_lib\",\n        \":script_ops\",\n        \":sparse_ops\",\n        \":sparse_tensor\",\n        \"//tensorflow/python/eager:execute\",\n        \"//tensorflow/python/eager:test\",\n        \"//tensorflow/python/keras\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"tensor_like\",\n    srcs = [\"framework/tensor_like.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [],\n)\n\npy_library(\n    name = \"indexed_slices\",\n    srcs = [\"framework/indexed_slices.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":composite_tensor\",\n        \":dtypes\",\n        \":tensor_conversion_registry\",\n        \":tensor_shape\",\n        \":type_spec\",\n        \":util\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\npy_library(\n    name = \"tensor_conversion_registry\",\n    srcs = [\"framework/tensor_conversion_registry.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\npy_library(\n    name = \"map_fn\",\n    srcs = [\"ops/map_fn.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":constant_op\",\n        \":control_flow_ops\",\n        \":framework_ops\",\n        \":sparse_tensor\",\n        \":tensor_array_ops\",\n        \":tensor_shape\",\n        \":util\",\n        \":variable_scope\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\npy_library(\n    name = \"func_graph\",\n    srcs = [\"framework/func_graph.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":auto_control_deps\",\n        \":framework_ops\",\n        \":sparse_tensor\",\n        \":tensor_array_ops\",\n        \"//tensorflow/python/autograph\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:graph_only_ops\",\n        \"//tensorflow/python/eager:tape\",\n    ],\n)\n\npy_library(\n    name = \"auto_control_deps\",\n    srcs = [\"framework/auto_control_deps.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":control_flow_ops\",\n        \":framework_ops\",\n        \":sparse_tensor\",\n        \":tensor_array_ops\",\n        \":util\",\n    ],\n)\n\ntf_py_test(\n    name = \"auto_control_deps_test\",\n    size = \"small\",\n    srcs = [\"framework/auto_control_deps_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":auto_control_deps\",\n        \":client_testlib\",\n        \"//tensorflow/python/keras\",\n    ],\n)\n\npy_library(\n    name = \"config\",\n    srcs = [\"framework/config.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework_ops\",\n        \":util\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\ncuda_py_test(\n    name = \"config_test\",\n    size = \"small\",\n    srcs = [\"framework/config_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_pip\"],  # test_ops are not available in pip.\n    deps = [\n        \":client_testlib\",\n        \":config\",\n        \":constant_op\",\n        \":platform\",\n        \":test_ops\",\n        \":util\",\n    ] + tf_additional_xla_deps_py(),\n)\n\npy_library(\n    name = \"random_seed\",\n    srcs = [\"framework/random_seed.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework_ops\",\n    ],\n)\n\npy_library(\n    name = \"registry\",\n    srcs = [\"framework/registry.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":platform\",\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"smart_cond\",\n    srcs = [\"framework/smart_cond.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":control_flow_ops\",\n        \":tensor_util\",\n    ],\n)\n\ntf_py_test(\n    name = \"smart_cond_test\",\n    size = \"small\",\n    srcs = [\"framework/smart_cond_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":constant_op\",\n        \":framework_ops\",\n        \":math_ops\",\n        \":session\",\n        \":smart_cond\",\n    ],\n)\n\npy_library(\n    name = \"sparse_tensor\",\n    srcs = [\"framework/sparse_tensor.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":composite_tensor\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":tensor_like\",\n        \":tensor_util\",\n        \":type_spec\",\n    ],\n)\n\npy_library(\n    name = \"composite_tensor\",\n    srcs = [\"framework/composite_tensor.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":dtypes\",\n        \":tensor_util\",\n    ],\n)\n\npy_library(\n    name = \"composite_tensor_utils\",\n    srcs = [\"framework/composite_tensor_utils.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":composite_tensor\",\n        \":sparse_ops\",\n        \":sparse_tensor\",\n        \"//tensorflow/python/ops/ragged:ragged_concat_ops\",\n        \"//tensorflow/python/ops/ragged:ragged_tensor\",\n        \"//tensorflow/python/ops/ragged:ragged_tensor_value\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_test(\n    name = \"framework_composite_tensor_test\",\n    srcs = [\"framework/composite_tensor_test.py\"],\n    main = \"framework/composite_tensor_test.py\",\n    python_version = \"PY3\",\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":composite_tensor\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":platform_test\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_composite_tensor_utils_test\",\n    srcs = [\"framework/composite_tensor_utils_test.py\"],\n    main = \"framework/composite_tensor_utils_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":composite_tensor\",\n        \":composite_tensor_utils\",\n        \":framework_test_lib\",\n        \":sparse_ops\",\n        \":sparse_tensor\",\n        \"//tensorflow/python/ops/ragged:ragged_tensor\",\n        \"//tensorflow/python/ops/ragged:ragged_tensor_value\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\n# This target is maintained separately from :util to provide separate visibility\n# for legacy users who were granted visibility when the functions were private\n# members of ops.Graph.\npy_library(\n    name = \"tf_stack\",\n    srcs = [\"util/tf_stack.py\"],\n    srcs_version = \"PY2AND3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":_tf_stack\",\n    ],\n)\n\npy_library(\n    name = \"tensor_shape\",\n    srcs = [\"framework/tensor_shape.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":dtypes\",\n        \":tf2\",\n        \":util\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:monitoring\",\n    ],\n)\n\npy_library(\n    name = \"type_spec\",\n    srcs = [\"framework/type_spec.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":dtypes\",\n        \":tensor_shape\",\n        \":util\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"tensor_spec\",\n    srcs = [\"framework/tensor_spec.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":common_shapes\",\n        \":dtypes\",\n        \":tensor_shape\",\n        \":type_spec\",\n        \":util\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"tensor_util\",\n    srcs = [\"framework/tensor_util.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":tensor_like\",\n        \":tensor_shape\",\n        \":util\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"traceable_stack\",\n    srcs = [\"framework/traceable_stack.py\"],\n    srcs_version = \"PY2AND3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"versions\",\n    srcs = [\"framework/versions.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":pywrap_tensorflow\",\n    ],\n)\n\npy_library(\n    name = \"extra_py_tests_deps\",\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":keras_lib\",\n        \"//third_party/py/numpy\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"framework_test_lib\",\n    srcs = [\"framework/test_util.py\"],\n    srcs_version = \"PY2AND3\",\n    visibility = visibility + [\n        \"//tensorflow_estimator/python/estimator:__subpackages__\",\n    ],\n    deps = [\n        \":_pywrap_stacktrace_handler\",\n        \":array_ops\",\n        \":client\",\n        \":errors\",\n        \":framework_for_generated_wrappers\",\n        \":platform\",\n        \":platform_test\",\n        \":pywrap_tensorflow\",\n        \":random_seed\",\n        \":resource_variable_ops\",\n        \":session\",\n        \":tensor_array_ops\",\n        \":training\",\n        \":util\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:backprop\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:tape\",\n        \"//tensorflow/python/ops/ragged:ragged_tensor\",\n        \"//tensorflow/python/ops/ragged:ragged_tensor_value\",\n        \"//third_party/py/numpy\",\n        \"@absl_py//absl/testing:parameterized\",\n        \"@six_archive//:six\",\n    ],\n)\n\n# Including this as a dependency will result in tests using\n# :framework_test_lib to use XLA.\npy_library(\n    name = \"is_xla_test_true\",\n    srcs = [\"framework/is_xla_test_true.py\"],\n    srcs_version = \"PY2AND3\",\n)\n\npy_library(\n    name = \"distributed_framework_test_lib\",\n    srcs_version = \"PY2AND3\",\n    deps = [\":framework_test_lib\"],\n)\n\npy_library(\n    name = \"framework_combinations\",\n    srcs = [\"framework/combinations.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework_ops\",\n        \":framework_test_combinations_lib\",\n        \":tf2\",\n        \":util\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\npy_library(\n    name = \"framework_test_combinations_lib\",\n    srcs = [\"framework/test_combinations.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":util\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\npy_test(\n    name = \"test_combinations_test\",\n    srcs = [\"framework/test_combinations_test.py\"],\n    python_version = \"PY3\",\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework_test_combinations_lib\",\n        \"//tensorflow/python/eager:test\",\n    ],\n)\n\npy_library(\n    name = \"client_testlib\",\n    srcs = [\"platform/test.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":client\",\n        \":cond_v2\",\n        \":framework_test_lib\",\n        \":gradient_checker\",\n        \":gradient_checker_v2\",\n        \":platform_test\",\n        \":util\",\n        \":while_v2\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_registry_test\",\n    size = \"small\",\n    srcs = [\"framework/registry_test.py\"],\n    main = \"framework/registry_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \"//tensorflow/python:client_testlib\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_errors_test\",\n    size = \"small\",\n    srcs = [\"framework/errors_test.py\"],\n    main = \"framework/errors_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":errors\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_error_interpolation_test\",\n    size = \"small\",\n    srcs = [\"framework/error_interpolation_test.py\"],\n    main = \"framework/error_interpolation_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":constant_op\",\n        \":error_interpolation\",\n        \":traceable_stack\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_subscribe_test\",\n    size = \"small\",\n    srcs = [\"framework/subscribe_test.py\"],\n    main = \"framework/subscribe_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":math_ops\",\n        \":platform_test\",\n        \":script_ops\",\n        \":subscribe\",\n    ],\n)\n\ntf_py_test(\n    name = \"build_info_test\",\n    size = \"small\",\n    srcs = [\n        \"platform/build_info.py\",\n        \"platform/build_info_test.py\",\n    ],\n    main = \"platform/build_info_test.py\",\n    python_version = \"PY3\",\n    tags = [\n        \"no_pip\",\n        \"notap\",\n    ],\n    deps = [\n        \":client_testlib\",\n        \":platform\",\n    ],\n)\n\ntf_py_test(\n    name = \"benchmark_test\",\n    size = \"small\",\n    srcs = [\n        \"platform/benchmark.py\",\n        \"platform/benchmark_test.py\",\n    ],\n    main = \"platform/benchmark_test.py\",\n    python_version = \"PY3\",\n    tags = [\n        \"no_pip\",\n    ],\n    deps = [\n        \":client_testlib\",\n        \":platform\",\n    ],\n)\n\ntf_py_test(\n    name = \"proto_test\",\n    size = \"small\",\n    srcs = [\"framework/proto_test.py\"],\n    main = \"framework/proto_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"functional_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n    ],\n)\n\npy_library(\n    name = \"functional_ops\",\n    srcs = [\"ops/functional_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":constant_op\",\n        \":control_flow_ops\",\n        \":framework_ops\",\n        \":functional_ops_gen\",\n        \":sparse_tensor\",\n        \":tensor_array_ops\",\n        \":tensor_shape\",\n        \":util\",\n        \":variable_scope\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\ncuda_py_test(\n    name = \"function_test\",\n    size = \"medium\",\n    srcs = [\"framework/function_test.py\"],\n    python_version = \"PY3\",\n    shard_count = 10,\n    tags = [\n        \"noasan\",\n        \"optonly\",\n    ],\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":clip_ops\",\n        \":control_flow_ops\",\n        \":errors\",\n        \":framework_for_generated_wrappers\",\n        \":functional_ops\",\n        \":gradients\",\n        \":init_ops\",\n        \":logging_ops\",\n        \":logging_ops_gen\",\n        \":math_ops\",\n        \":nn_ops\",\n        \":platform\",\n        \":random_ops\",\n        \":variable_scope\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_versions_test\",\n    size = \"small\",\n    srcs = [\"framework/versions_test.py\"],\n    main = \"framework/versions_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_importer_test\",\n    size = \"large\",\n    srcs = [\"framework/importer_test.py\"],\n    main = \"framework/importer_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":gradients\",\n        \":math_ops\",\n        \":nn_grad\",\n        \":nn_ops\",\n        \":random_ops\",\n        \":test_ops\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\nfilegroup(\n    name = \"meta_graph_testdata\",\n    srcs = [\n        \"framework/testdata/metrics_export_meta_graph.pb\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n\ntf_py_test(\n    name = \"framework_meta_graph_test\",\n    size = \"small\",\n    srcs = [\"framework/meta_graph_test.py\"],\n    data = [\":meta_graph_testdata\"],\n    main = \"framework/meta_graph_test.py\",\n    python_version = \"PY3\",\n    tags = [\n        \"no_pip\",\n        \"no_windows\",\n    ],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":data_flow_ops\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":metrics\",\n        \":nn_ops\",\n        \":platform\",\n        \":random_ops\",\n        \":training\",\n        \":variables\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_traceable_stack_test\",\n    size = \"small\",\n    srcs = [\"framework/traceable_stack_test.py\"],\n    main = \"framework/traceable_stack_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework_test_lib\",\n        \":platform_test\",\n        \":test_ops\",\n        \":traceable_stack\",\n        \":util\",\n    ],\n)\n\ntf_gen_op_wrapper_py(\n    name = \"test_ops\",\n    out = \"framework/test_ops.py\",\n    deps = [\":test_ops_kernels\"],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"debug_ops_gen\",\n    out = \"ops/gen_debug_ops.py\",\n    visibility = [\"//tensorflow/python/debug:__pkg__\"],\n    deps = [\"//tensorflow/core:debug_ops_op_lib\"],\n)\n\ncc_library(\n    name = \"test_ops_kernels\",\n    srcs = [\"framework/test_ops.cc\"],\n    linkstatic = 1,\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n    alwayslink = 1,\n)\n\ntf_gen_op_wrapper_py(\n    name = \"test_ops_2\",\n    out = \"framework/test_ops_2.py\",\n    deps = [\":test_ops_2_kernels\"],\n)\n\ncc_library(\n    name = \"test_ops_2_kernels\",\n    srcs = [\"framework/test_ops_2.cc\"],\n    linkstatic = 1,\n    deps = [\"//tensorflow/core:framework\"],\n    alwayslink = 1,\n)\n\ntf_py_test(\n    name = \"framework_common_shapes_test\",\n    size = \"small\",\n    srcs = [\"framework/common_shapes_test.py\"],\n    main = \"framework/common_shapes_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":platform_test\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_ops_test\",\n    size = \"small\",\n    srcs = [\"framework/ops_test.py\"],\n    main = \"framework/ops_test.py\",\n    python_version = \"PY3\",\n    tags = [\"no_pip\"],  # test_ops_2 is not available in pip.\n    deps = [\n        \":cond_v2\",\n        \":control_flow_ops\",\n        \":errors\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":gradients\",\n        \":math_ops\",\n        \":platform_test\",\n        \":resources\",\n        \":test_ops\",\n        \":test_ops_2\",\n        \":util\",\n        \":variable_scope\",\n        \":variables\",\n        \":while_v2\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:function\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_ops_enable_eager_test\",\n    size = \"small\",\n    srcs = [\"framework/ops_enable_eager_test.py\"],\n    main = \"framework/ops_enable_eager_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework\",\n        \":platform_test\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_tensor_shape_test\",\n    size = \"small\",\n    srcs = [\"framework/tensor_shape_test.py\"],\n    main = \"framework/tensor_shape_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":platform_test\",\n        \"//tensorflow/core:protos_all_py\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_type_spec_test\",\n    size = \"small\",\n    srcs = [\"framework/type_spec_test.py\"],\n    main = \"framework/type_spec_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":platform_test\",\n        \":type_spec\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_tensor_spec_test\",\n    size = \"small\",\n    srcs = [\"framework/tensor_spec_test.py\"],\n    main = \"framework/tensor_spec_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":platform_test\",\n        \":tensor_spec\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_sparse_tensor_test\",\n    size = \"small\",\n    srcs = [\"framework/sparse_tensor_test.py\"],\n    main = \"framework/sparse_tensor_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":platform_test\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_device_spec_test\",\n    size = \"small\",\n    srcs = [\"framework/device_spec_test.py\"],\n    main = \"framework/device_spec_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":platform_test\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_device_test\",\n    size = \"small\",\n    srcs = [\"framework/device_test.py\"],\n    main = \"framework/device_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":platform_test\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_random_seed_test\",\n    size = \"small\",\n    srcs = [\"framework/random_seed_test.py\"],\n    main = \"framework/random_seed_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":framework\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_tensor_shape_div_test\",\n    size = \"small\",\n    srcs = [\"framework/tensor_shape_div_test.py\"],\n    main = \"framework/tensor_shape_div_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":platform_test\",\n        \"//tensorflow/core:protos_all_py\",\n        \"@six_archive//:six\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_tensor_util_test\",\n    size = \"small\",\n    srcs = [\"framework/tensor_util_test.py\"],\n    main = \"framework/tensor_util_test.py\",\n    python_version = \"PY3\",\n    tags = [\"no_windows\"],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":math_ops\",\n        \":state_ops_gen\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_test_util_test\",\n    size = \"small\",\n    srcs = [\"framework/test_util_test.py\"],\n    main = \"framework/test_util_test.py\",\n    python_version = \"PY3\",\n    tags = [\"no_windows\"],\n    deps = [\n        \":control_flow_ops\",\n        \":errors\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":platform_test\",\n        \":random_ops\",\n        \":resource_variable_ops\",\n        \":session\",\n        \":test_ops\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:context\",\n        \"//third_party/py/numpy\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_dtypes_test\",\n    size = \"small\",\n    srcs = [\"framework/dtypes_test.py\"],\n    main = \"framework/dtypes_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":platform_test\",\n        \"//tensorflow:tensorflow_py\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"op_def_library_test\",\n    size = \"small\",\n    srcs = [\"framework/op_def_library_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":platform_test\",\n    ],\n)\n\ntf_py_test(\n    name = \"framework_kernels_test\",\n    size = \"small\",\n    srcs = [\"framework/kernels_test.py\"],\n    main = \"framework/kernels_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework_test_lib\",\n        \":kernels\",\n        \":platform_test\",\n        \":test_ops\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"array_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n        \"//tensorflow/compiler/tests:__pkg__\",\n        \"//tensorflow/contrib/quantization:__pkg__\",\n        \"//tensorflow/python/kernel_tests:__pkg__\",\n    ],\n    deps = [\n        \"//tensorflow/c/kernels:bitcast_op_lib\",\n        \"//tensorflow/core:array_ops_op_lib\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"bitwise_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n        \"//tensorflow/compiler/tests:__pkg__\",\n        \"//tensorflow/contrib/quantization:__pkg__\",\n        \"//tensorflow/python/kernel_tests:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"boosted_trees_ops_gen\",\n    visibility = [\"//tensorflow:internal\"],\n    deps = [\n        \"//tensorflow/core:boosted_trees_ops_op_lib\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"tensor_forest_ops_gen\",\n    visibility = [\"//tensorflow:internal\"],\n    deps = [\n        \"//tensorflow/core:tensor_forest_ops_op_lib\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"summary_ops_gen\",\n    visibility = [\"//tensorflow:__subpackages__\"],\n    deps = [\"//tensorflow/core:summary_ops_op_lib\"],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"audio_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n        \"//tensorflow/contrib/framework:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"cudnn_rnn_ops_gen\",\n    visibility = [\n        \"//tensorflow:__subpackages__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"candidate_sampling_ops_gen\",\n    visibility = [\"//learning/brain/python/ops:__pkg__\"],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"checkpoint_ops_gen\",\n    visibility = [\n        \"//tensorflow/contrib/framework:__pkg__\",\n        \"//tensorflow/python/kernel_tests:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"clustering_ops_gen\",\n    visibility = [\"//tensorflow:internal\"],\n    deps = [\n        \"//tensorflow/core:clustering_ops_op_lib\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"collective_ops_gen\",\n    visibility = [\"//tensorflow:internal\"],\n    deps = [\n        \"//tensorflow/core:collective_ops_op_lib\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"control_flow_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n        \"//tensorflow/python/kernel_tests:__pkg__\",\n    ],\n    deps = [\n        \"//tensorflow/core:control_flow_ops_op_lib\",\n        \"//tensorflow/core:no_op_op_lib\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"ctc_ops_gen\",\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"data_flow_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n        \"//tensorflow/python/kernel_tests:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"dataset_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n        \"//tensorflow:__subpackages__\",\n        \"//tensorflow/python/kernel_tests:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"experimental_dataset_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n        \"//tensorflow:__subpackages__\",\n        \"//tensorflow/python/kernel_tests:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"image_ops_gen\",\n    visibility = [\"//learning/brain/python/ops:__pkg__\"],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"io_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n        \"//tensorflow/python/kernel_tests:__pkg__\",\n        \"//tensorflow/python/training/tracking:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"linalg_ops_gen\",\n    visibility = [\"//learning/brain/python/ops:__pkg__\"],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"logging_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n        \"//tensorflow/python/kernel_tests:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"lookup_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n        \"//tensorflow/contrib/lookup:__pkg__\",\n        \"//tensorflow/python/kernel_tests:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"batch_ops_gen\",\n    visibility = [\n        \"//tensorflow:__subpackages__\",\n    ],\n)\n\npy_library(\n    name = \"batch_ops\",\n    srcs = [\n        \"ops/batch_ops.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":batch_ops_gen\",\n    ],\n)\n\npy_test(\n    name = \"batch_ops_test\",\n    size = \"small\",\n    srcs = [\"ops/batch_ops_test.py\"],\n    python_version = \"PY3\",\n    srcs_version = \"PY2AND3\",\n    tags = [\n        \"manual\",\n        \"no_pip\",\n        \"nomac\",\n    ],\n    deps = [\n        \":array_ops\",\n        \":batch_ops\",\n        \":client_testlib\",\n        \":dtypes\",\n        \":framework\",\n        \":gradients\",\n        \":script_ops\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"manip_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n        \"//tensorflow/python/kernel_tests:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"math_ops_gen\",\n    visibility = [\n        \"//learning/brain/google/python/ops:__pkg__\",\n        \"//learning/brain/python/ops:__pkg__\",\n        \"//tensorflow/compiler/tests:__pkg__\",\n        \"//tensorflow/contrib/quantization:__pkg__\",\n        \"//tensorflow/python/kernel_tests:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"nn_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n        \"//tensorflow/compiler/tests:__pkg__\",\n        \"//tensorflow/contrib/quantization:__pkg__\",\n        \"//tensorflow/python/kernel_tests:__pkg__\",\n        \"//tensorflow/python/tools:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"parsing_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"random_ops_gen\",\n    visibility = [\"//learning/brain/python/ops:__pkg__\"],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"stateful_random_ops_gen\",\n    visibility = [\"//learning/brain/python/ops:__pkg__\"],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"resource_variable_ops_gen\",\n    visibility = [\n        \"//tensorflow/compiler/tf2xla:internal\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"stateless_random_ops_gen\",\n    visibility = [\n        \"//tensorflow/python/data/experimental/ops:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"list_ops_gen\",\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"script_ops_gen\",\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"sdca_ops_gen\",\n    visibility = [\n        \"//tensorflow/contrib/linear_optimizer:__pkg__\",\n        \"//tensorflow_estimator/python/estimator/canned/linear_optimizer:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"set_ops_gen\",\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"state_ops_gen\",\n    visibility = [\n        \"//learning/brain/python/ops:__pkg__\",\n        \"//tensorflow/contrib/framework:__pkg__\",\n        \"//tensorflow/python/kernel_tests:__pkg__\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"sparse_ops_gen\",\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"spectral_ops_gen\",\n    visibility = [\"//tensorflow/python/ops/signal:__pkg__\"],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"string_ops_gen\",\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"user_ops_gen\",\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"training_ops_gen\",\n    out = \"training/gen_training_ops.py\",\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"ragged_array_ops_gen\",\n    visibility = [\"//tensorflow/python/ops/ragged:__pkg__\"],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"ragged_math_ops_gen\",\n    visibility = [\"//tensorflow/python/ops/ragged:__pkg__\"],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"ragged_conversion_ops_gen\",\n    visibility = [\"//tensorflow/python/ops/ragged:__pkg__\"],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"rnn_ops_gen\",\n    visibility = [\"//tensorflow/contrib/rnn:__pkg__\"],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"sendrecv_ops_gen\",\n    deps = [\n        \"//tensorflow/core:sendrecv_ops_op_lib\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"tpu_ops_gen\",\n    visibility = [\n        \"//smartass/brain/configure/python:__pkg__\",\n        \"//tensorflow/python/tpu:__pkg__\",\n    ],\n    deps = [\n        \"//tensorflow/core:tpu_configuration_ops_op_lib\",\n        \"//tensorflow/core:tpu_cross_replica_ops_op_lib\",\n        \"//tensorflow/core:tpu_embedding_ops_op_lib\",\n        \"//tensorflow/core:tpu_functional_ops_op_lib\",\n        \"//tensorflow/core:tpu_heartbeat_ops_op_lib\",\n        \"//tensorflow/core:tpu_host_compute_ops_op_lib\",\n        \"//tensorflow/core:tpu_infeed_ops_op_lib\",\n        \"//tensorflow/core:tpu_ordinal_selector_ops_op_lib\",\n        \"//tensorflow/core:tpu_outfeed_ops_op_lib\",\n        \"//tensorflow/core:tpu_replication_ops_op_lib\",\n    ],\n)\n\npy_library(\n    name = \"array_grad\",\n    srcs = [\"ops/array_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":array_ops_gen\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":sparse_ops\",\n    ],\n)\n\npy_library(\n    name = \"array_ops\",\n    srcs = [\n        \"ops/array_ops.py\",\n        \"ops/inplace_ops.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops_gen\",\n        \":common_shapes\",\n        \":constant_op\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":math_ops_gen\",\n        \":sparse_tensor\",\n        \":tensor_shape\",\n        \":tensor_util\",\n        \":util\",\n        \"//third_party/py/numpy\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"bitwise_ops\",\n    srcs = [\"ops/bitwise_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":bitwise_ops_gen\",\n        \":framework\",\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"boosted_trees_ops\",\n    srcs = [\"ops/boosted_trees_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":boosted_trees_ops_gen\",\n        \":framework\",\n        \":ops\",\n        \":training\",\n        \"//tensorflow/core/kernels/boosted_trees:boosted_trees_proto_py\",\n    ],\n)\n\npy_library(\n    name = \"tensor_forest_ops\",\n    srcs = [\"ops/tensor_forest_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework\",\n        \":ops\",\n        \":tensor_forest_ops_gen\",\n        \":training\",\n        \"//tensorflow/core/kernels/boosted_trees:boosted_trees_proto_py\",\n    ],\n)\n\npy_library(\n    name = \"optional_grad\",\n    srcs = [\"ops/optional_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework_ops\",\n    ],\n)\n\npy_library(\n    name = \"sets\",\n    srcs = [\n        \"ops/sets.py\",\n        \"ops/sets_impl.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":set_ops_gen\",\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"candidate_sampling_ops\",\n    srcs = [\"ops/candidate_sampling_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":candidate_sampling_ops_gen\",\n        \":framework\",\n        \":math_ops\",\n    ],\n)\n\npy_library(\n    name = \"check_ops\",\n    srcs = [\"ops/check_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":control_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":sparse_tensor\",\n        \":tensor_util\",\n        \":util\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"clip_ops\",\n    srcs = [\"ops/clip_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":nn_ops_gen\",\n        \":numerics\",\n        \"@six_archive//:six\",\n    ],\n)\n\ntf_py_test(\n    name = \"clip_ops_test\",\n    size = \"small\",\n    srcs = [\"ops/clip_ops_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":clip_ops\",\n        \":framework_for_generated_wrappers\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"clustering_ops\",\n    srcs = [\"ops/clustering_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":clustering_ops_gen\",\n        \":framework\",\n        \":ops\",\n        \":training\",\n    ],\n)\n\ntf_py_test(\n    name = \"clustering_ops_test\",\n    size = \"medium\",\n    srcs = [\"ops/clustering_ops_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":clustering_ops\",\n        \":framework_for_generated_wrappers\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"collective_ops\",\n    srcs = [\"ops/collective_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":collective_ops_gen\",\n        \":framework_for_generated_wrappers\",\n    ],\n)\n\ntf_py_test(\n    name = \"collective_ops_test\",\n    size = \"small\",\n    srcs = [\"ops/collective_ops_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":collective_ops\",\n        \":framework_for_generated_wrappers\",\n        \":kernels\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"collective_ops_gpu_test\",\n    size = \"small\",\n    srcs = [\"ops/collective_ops_gpu_test.py\"],\n    python_version = \"PY3\",\n    tags = [\n        \"no_cuda_on_cpu_tap\",\n        \"no_rocm\",\n        \"no_windows\",\n    ],\n    deps = [\n        \":client_testlib\",\n        \":collective_ops\",\n        \":framework_for_generated_wrappers\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"control_flow_grad\",\n    srcs =\n        [\"ops/control_flow_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":control_flow_ops\",\n        \":control_flow_ops_gen\",\n        \":control_flow_util\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n    ],\n)\n\n# Note: targets depending on this should also depend on \":cond_v2\" and \":while_v2\".\n# See b/118513001.\npy_library(\n    name = \"control_flow_ops\",\n    srcs = [\"ops/control_flow_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":array_ops_gen\",\n        \":constant_op\",\n        \":control_flow_ops_gen\",\n        \":control_flow_util\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":logging_ops_gen\",\n        \":math_ops\",\n        \":platform\",\n        \":sparse_tensor\",\n        \":tensor_array_ops\",\n        \":tensor_shape\",\n        \":tf2\",\n        \":tf_should_use\",\n        \":util\",\n        \"//tensorflow/core:protos_all_py\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"control_flow_util\",\n    srcs = [\"ops/control_flow_util.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":platform\",\n    ],\n)\n\npy_library(\n    name = \"control_flow_util_v2\",\n    srcs = [\"ops/control_flow_util_v2.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":control_flow_util\",\n        \":control_flow_v2_func_graphs\",\n        \":framework_ops\",\n        \":util\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/distribute:distribute_lib\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:function\",\n        \"//tensorflow/python/keras:base_layer_utils\",\n    ],\n)\n\npy_library(\n    name = \"control_flow_v2_func_graphs\",\n    srcs = [\"ops/control_flow_v2_func_graphs.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":func_graph\",\n    ],\n)\n\npy_library(\n    name = \"control_flow_v2_toggles\",\n    srcs = [\"ops/control_flow_v2_toggles.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":control_flow_util\",\n        \":control_flow_util_v2\",\n        \":framework_ops\",\n        \":util\",\n    ],\n)\n\ntf_py_test(\n    name = \"control_flow_v2_toggles_test\",\n    size = \"small\",\n    srcs = [\"ops/control_flow_v2_toggles_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":control_flow_util_v2\",\n        \":control_flow_v2_toggles\",\n        \":platform_test\",\n    ],\n)\n\ntf_py_test(\n    name = \"control_flow_v2_enable_test\",\n    size = \"small\",\n    srcs = [\"ops/control_flow_v2_enable_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":control_flow_util\",\n        \":platform_test\",\n        \":tf2\",\n    ],\n)\n\ntf_py_test(\n    name = \"control_flow_v2_disable_test\",\n    size = \"small\",\n    srcs = [\"ops/control_flow_v2_disable_test.py\"],\n    python_version = \"PY3\",\n    # This tests that it is possible to disable cfv2 using env vars.\n    # This does not apply to TF 2.0 nightly builds which enable\n    # v2 behavior using `tf.compat.v1.enable_v2_behavior()` in which case\n    # `tf.compat.v1.disable_control_flow_v2()` needs to be used.\n    tags = [\n        \"no_oss\",\n        \"no_pip\",\n    ],\n    deps = [\n        \":client_testlib\",\n        \":control_flow_util\",\n        \":platform_test\",\n        \":tf2\",\n    ],\n)\n\npy_library(\n    name = \"cond_v2\",\n    srcs = [\n        \"ops/cond_v2.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":c_api_util\",\n        \":control_flow_util_v2\",\n        \":framework_ops\",\n        \":function\",\n        \":function_def_to_graph\",\n        \":functional_ops_gen\",\n        \":gradients\",\n        \":gradients_util\",\n        \":graph_to_function_def\",\n        \":pywrap_tensorflow\",\n        \":util\",\n        \"//tensorflow/python/compat\",\n        \"//tensorflow/python/data/ops:dataset_ops\",\n        \"//tensorflow/python/eager:function\",\n    ],\n)\n\npy_library(\n    name = \"while_v2\",\n    srcs = [\n        \"ops/while_v2.py\",\n        \"ops/while_v2_indexed_slices_rewriter.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":constant_op\",\n        \":control_flow_ops\",\n        \":control_flow_util\",\n        \":control_flow_util_v2\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":function_def_to_graph\",\n        \":functional_ops_gen\",\n        \":gradients_util\",\n        \":list_ops\",\n        \":tensor_array_ops\",\n        \":tensor_shape\",\n        \":tensor_util\",\n        \":util\",\n        \"//tensorflow/python/eager:function\",\n    ],\n)\n\npy_library(\n    name = \"ctc_ops\",\n    srcs = [\"ops/ctc_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":ctc_ops_gen\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":nn_grad\",\n    ],\n)\n\npy_library(\n    name = \"cudnn_rnn_grad\",\n    srcs = [\"ops/cudnn_rnn_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":cudnn_rnn_ops_gen\",\n        \":framework_for_generated_wrappers\",\n    ],\n)\n\npy_library(\n    name = \"data_flow_grad\",\n    srcs = [\"ops/data_flow_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":data_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n    ],\n)\n\npy_library(\n    name = \"data_flow_ops\",\n    srcs = [\"ops/data_flow_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":control_flow_ops\",\n        \":data_flow_ops_gen\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":random_seed\",\n        \":tensor_util\",\n        \"//tensorflow/python/eager:context\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"embedding_ops\",\n    srcs = [\"ops/embedding_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":clip_ops\",\n        \":data_flow_grad\",\n        \":data_flow_ops\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":platform\",\n        \":resource_variable_ops\",\n        \":sparse_ops\",\n        \":tensor_shape\",\n        \":variables\",\n    ],\n)\n\npy_library(\n    name = \"gradients\",\n    srcs = [\n        \"ops/custom_gradient.py\",\n        \"ops/gradients.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":gradients_impl\",\n        \":gradients_util\",\n        \":unconnected_gradients\",\n        \"//tensorflow/python/eager:forwardprop\",\n        \"//tensorflow/python/eager:function\",\n        \"//tensorflow/python/eager:tape\",\n    ],\n)\n\npy_library(\n    name = \"gradients_impl\",\n    srcs = [\n        \"ops/gradients_impl.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_grad\",\n        \":array_ops\",\n        \":bitwise_ops\",\n        \":check_ops\",\n        \":control_flow_grad\",\n        \":control_flow_ops\",\n        \":control_flow_util\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_ops\",\n        \":image_grad\",\n        \":linalg_grad\",\n        \":linalg_ops\",\n        \":logging_ops\",\n        \":manip_grad\",\n        \":manip_ops\",\n        \":math_grad\",\n        \":math_ops\",\n        \":optional_grad\",\n        \":platform\",\n        \":random_grad\",\n        \":tensor_array_ops\",\n        \":unconnected_gradients\",\n        \":util\",\n        \"//tensorflow/python/ops/linalg/sparse\",\n    ],\n)\n\npy_library(\n    name = \"gradients_util\",\n    srcs = [\n        \"ops/gradients_util.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":control_flow_ops\",\n        \":control_flow_state\",\n        \":control_flow_util\",\n        \":default_gradient\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_ops\",\n        \":functional_ops\",\n        \":math_ops\",\n        \":platform\",\n        \":resource_variable_ops\",\n        \":tensor_util\",\n        \":unconnected_gradients\",\n        \":util\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:backprop\",\n        \"//tensorflow/python/eager:backprop_util\",\n        \"//tensorflow/python/eager:context\",\n        \"//third_party/py/numpy\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"default_gradient\",\n    srcs = [\n        \"ops/default_gradient.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":dtypes\",\n        \":resource_variable_ops\",\n    ],\n)\n\npy_library(\n    name = \"control_flow_state\",\n    srcs = [\n        \"ops/control_flow_state.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":constant_op\",\n        \":control_flow_ops\",\n        \":control_flow_util\",\n        \":data_flow_ops_gen\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":resource_variable_ops_gen\",\n        \":tensor_util\",\n    ],\n)\n\npy_library(\n    name = \"unconnected_gradients\",\n    srcs = [\"ops/unconnected_gradients.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"histogram_ops\",\n    srcs = [\"ops/histogram_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":clip_ops\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n    ],\n)\n\npy_library(\n    name = \"image_grad\",\n    srcs = [\"ops/image_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":framework_for_generated_wrappers\",\n        \":image_ops_gen\",\n    ],\n)\n\npy_library(\n    name = \"image_ops\",\n    srcs = [\n        \"ops/image_ops.py\",\n        \"ops/image_ops_impl.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":check_ops\",\n        \":clip_ops\",\n        \":control_flow_ops\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":gradients\",\n        \":image_ops_gen\",\n        \":math_ops\",\n        \":nn\",\n        \":nn_ops_gen\",\n        \":random_ops\",\n        \":string_ops\",\n        \":util\",\n        \":variables\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"init_ops\",\n    srcs = [\"ops/init_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":constant_op\",\n        \":dtypes\",\n        \":linalg_ops_gen\",\n        \":linalg_ops_impl\",\n        \":math_ops\",\n        \":random_ops\",\n        \":util\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"init_ops_v2\",\n    srcs = [\"ops/init_ops_v2.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":constant_op\",\n        \":dtypes\",\n        \":linalg_ops_gen\",\n        \":linalg_ops_impl\",\n        \":math_ops\",\n        \":random_ops\",\n        \":stateless_random_ops\",\n        \":util\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"initializers_ns\",\n    srcs = [\"ops/initializers_ns.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":init_ops\",\n        \":variables\",\n    ],\n)\n\npy_library(\n    name = \"io_ops\",\n    srcs = [\"ops/io_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":io_ops_gen\",\n        \":lib\",\n    ],\n)\n\npy_library(\n    name = \"linalg_grad\",\n    srcs = [\"ops/linalg_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":control_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":linalg_ops\",\n        \":math_ops\",\n        \"//tensorflow/python/ops/linalg:linalg_impl\",\n    ],\n)\n\npy_library(\n    name = \"linalg_ops\",\n    srcs = [\"ops/linalg_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":linalg_ops_gen\",\n        \":linalg_ops_impl\",\n        \":map_fn\",\n        \":math_ops\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"linalg_ops_impl\",\n    srcs = [\"ops/linalg_ops_impl.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":math_ops\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"manip_grad\",\n    srcs = [\"ops/manip_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":control_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":manip_ops\",\n    ],\n)\n\npy_library(\n    name = \"manip_ops\",\n    srcs = [\"ops/manip_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":dtypes\",\n        \":framework_ops\",\n        \":manip_ops_gen\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"logging_ops\",\n    srcs = [\"ops/logging_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":logging_ops_gen\",\n        \":platform\",\n        \":string_ops\",\n        \":util\",\n        \"//tensorflow/python/compat\",\n    ],\n)\n\npy_library(\n    name = \"lookup_ops\",\n    srcs = [\"ops/lookup_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":constant_op\",\n        \":control_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":lookup_ops_gen\",\n        \":math_ops\",\n        \":sparse_tensor\",\n        \":string_ops\",\n        \":util\",\n        \"//tensorflow/python/eager:context\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"loss_scale\",\n    srcs = [\"training/experimental/loss_scale.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\npy_library(\n    name = \"loss_scale_optimizer\",\n    srcs = [\"training/experimental/loss_scale_optimizer.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":loss_scale\",\n        \"//tensorflow/python/distribute:distribute_lib\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\npy_test(\n    name = \"loss_scale_optimizer_test\",\n    size = \"small\",\n    srcs = [\"training/experimental/loss_scale_optimizer_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":loss_scale_optimizer\",\n        \"//tensorflow/python/distribute:mirrored_strategy\",\n        \"//tensorflow/python/distribute:one_device_strategy\",\n        \"//tensorflow/python/keras/mixed_precision/experimental:test_util\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\npy_test(\n    name = \"loss_scale_test\",\n    size = \"medium\",\n    srcs = [\"training/experimental/loss_scale_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":loss_scale\",\n        \"//tensorflow/python/distribute:mirrored_strategy\",\n        \"//tensorflow/python/distribute:one_device_strategy\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\npy_library(\n    name = \"mixed_precision_global_state\",\n    srcs = [\"training/experimental/mixed_precision_global_state.py\"],\n    srcs_version = \"PY2AND3\",\n)\n\npy_library(\n    name = \"mixed_precision\",\n    srcs = [\"training/experimental/mixed_precision.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":config\",\n        \":loss_scale\",\n        \":loss_scale_optimizer\",\n        \":mixed_precision_global_state\",\n        \":util\",\n    ],\n)\n\ncuda_py_test(\n    name = \"mixed_precision_test\",\n    size = \"small\",\n    srcs = [\"training/experimental/mixed_precision_test.py\"],\n    python_version = \"PY3\",\n    tags = [\n        \"no_rocm\",\n    ],\n    deps = [\n        \":mixed_precision\",\n        \"//tensorflow/python:client_testlib\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\npy_library(\n    name = \"loss_scaling_gradient_tape\",\n    srcs = [\"training/experimental/loss_scaling_gradient_tape.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":loss_scale\",\n        \":unconnected_gradients\",\n        \":util\",\n        \"//tensorflow/python/distribute:distribute_lib\",\n        \"//tensorflow/python/eager:backprop\",\n    ],\n)\n\ncuda_py_test(\n    name = \"loss_scaling_gradient_tape_test\",\n    size = \"medium\",\n    srcs = [\"training/experimental/loss_scaling_gradient_tape_test.py\"],\n    deps = [\n        \":client_testlib\",\n        \":constant_op\",\n        \":framework_test_combinations_lib\",\n        \":loss_scale\",\n        \":loss_scaling_gradient_tape\",\n        \"//tensorflow/python/compat:v2_compat\",\n        \"//tensorflow/python/distribute:mirrored_strategy\",\n        \"//tensorflow/python/eager:def_function\",\n        \"//third_party/py/numpy\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\npy_library(\n    name = \"math_grad\",\n    srcs = [\"ops/math_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":array_ops_gen\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":math_ops_gen\",\n        \":tensor_util\",\n        \"//tensorflow/python/eager:context\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"op_selector\",\n    srcs = [\"ops/op_selector.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\":framework_ops\"],\n)\n\npy_library(\n    name = \"math_ops\",\n    srcs = [\"ops/math_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":common_shapes\",\n        \":constant_op\",\n        \":control_flow_ops_gen\",\n        \":data_flow_ops_gen\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":graph_util\",\n        \":math_ops_gen\",\n        \":nn_ops_gen\",\n        \":sparse_ops_gen\",\n        \":sparse_tensor\",\n        \":state_ops\",\n        \":state_ops_gen\",\n        \":tensor_shape\",\n        \":util\",\n        \"//tensorflow/python/compat\",\n        \"//tensorflow/python/eager:context\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"resources\",\n    srcs = [\"ops/resources.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":control_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":tf_should_use\",\n    ],\n)\n\npy_library(\n    name = \"resource_variable_ops\",\n    srcs = [\"ops/resource_variable_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":array_ops_gen\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":resource_variable_ops_gen\",\n        \":tensor_shape\",\n        \":util\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:tape\",\n    ],\n)\n\npy_library(\n    name = \"critical_section_ops\",\n    srcs = [\"ops/critical_section_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":control_flow_ops\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":resource_variable_ops_gen\",\n        \":tensor_array_ops\",\n        \":util\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\npy_library(\n    name = \"list_ops\",\n    srcs = [\"ops/list_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":list_ops_gen\",\n    ],\n)\n\npy_library(\n    name = \"nn\",\n    srcs = [\n        \"ops/nn.py\",\n        \"ops/nn_impl.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":candidate_sampling_ops\",\n        \":ctc_ops\",\n        \":embedding_ops\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":nn_grad\",\n        \":nn_ops\",\n        \":nn_ops_gen\",\n        \":platform_device_context\",\n        \":rnn\",\n        \":sparse_ops\",\n        \":util\",\n        \":variables\",\n    ],\n)\n\npy_library(\n    name = \"nn_grad\",\n    srcs = [\"ops/nn_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":framework_for_generated_wrappers\",\n        \":gradients\",\n        \":math_ops\",\n        \":nn_ops\",\n        \":nn_ops_gen\",\n        \":sparse_ops\",\n        \":tensor_util\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\npy_library(\n    name = \"nn_ops\",\n    srcs = [\"ops/nn_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":graph_util\",\n        \":math_ops\",\n        \":nn_ops_gen\",\n        \":platform\",\n        \":random_ops\",\n        \":tensor_shape\",\n        \":tensor_util\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"numerics\",\n    srcs = [\"ops/numerics.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":control_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\npy_library(\n    name = \"parsing_config\",\n    srcs = [\"ops/parsing_config.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework\",\n    ],\n)\n\npy_library(\n    name = \"parsing_ops\",\n    srcs = [\"ops/parsing_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":control_flow_ops\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":parsing_config\",\n        \":parsing_ops_gen\",\n        \":sparse_ops\",\n    ],\n)\n\npy_library(\n    name = \"partitioned_variables\",\n    srcs = [\"ops/partitioned_variables.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":platform\",\n        \":variable_scope\",\n    ],\n)\n\npy_library(\n    name = \"random_grad\",\n    srcs = [\"ops/random_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":math_ops\",\n        \":random_ops_gen\",\n    ],\n)\n\npy_library(\n    name = \"random_ops\",\n    srcs = [\"ops/random_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":control_flow_ops\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":math_ops\",\n        \":random_ops_gen\",\n        \":random_seed\",\n    ],\n)\n\npy_library(\n    name = \"stateful_random_ops\",\n    srcs = [\"ops/stateful_random_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":dtypes\",\n        \":framework_ops\",\n        \":math_ops\",\n        \":stateful_random_ops_gen\",\n        \":variables\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"stateful_random_ops_test\",\n    size = \"medium\",\n    srcs = [\"ops/stateful_random_ops_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_rocm\"],\n    xla_enable_strict_auto_jit = False,\n    deps = [\n        \":client_testlib\",\n        \":config\",\n        \":logging_ops\",\n        \":random_ops_gen\",\n        \":stateful_random_ops\",\n        \"//tensorflow/python/distribute:mirrored_strategy\",\n        \"//tensorflow/python/kernel_tests/random:util\",\n    ],\n)\n\npy_library(\n    name = \"stateless_random_ops\",\n    srcs = [\"ops/stateless_random_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":dtypes\",\n        \":framework_ops\",\n        \":math_ops\",\n        \":random_ops\",\n        \":stateless_random_ops_gen\",\n    ],\n)\n\npy_library(\n    name = \"rnn\",\n    srcs = [\"ops/rnn.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":control_flow_ops\",\n        \":control_flow_util\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":rnn_cell\",\n        \":tensor_array_ops\",\n        \":util\",\n        \":variable_scope\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\npy_library(\n    name = \"rnn_cell\",\n    srcs = [\n        \"ops/rnn_cell.py\",\n        \"ops/rnn_cell_impl.py\",\n        \"ops/rnn_cell_wrapper_impl.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":clip_ops\",\n        \":framework_for_generated_wrappers\",\n        \":init_ops\",\n        \":math_ops\",\n        \":nn_ops\",\n        \":partitioned_variables\",\n        \":random_ops\",\n        \":util\",\n        \":variable_scope\",\n        \":variables\",\n    ],\n)\n\npy_library(\n    name = \"script_ops\",\n    srcs = [\"ops/script_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":_pywrap_py_func\",\n        \":array_ops\",\n        \":framework_for_generated_wrappers\",\n        \":script_ops_gen\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"sdca_ops\",\n    srcs = [\"ops/sdca_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":sdca_ops_gen\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"session_ops\",\n    srcs = [\"ops/session_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":data_flow_ops_gen\",\n        \":framework_for_generated_wrappers\",\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"sparse_grad\",\n    srcs = [\"ops/sparse_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":sparse_ops\",\n        \":sparse_ops_gen\",\n    ],\n)\n\npy_library(\n    name = \"sparse_ops\",\n    srcs = [\"ops/sparse_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":check_ops\",\n        \":control_flow_ops\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":sparse_ops_gen\",\n        \":util\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"sparse_ops_test\",\n    srcs = [\"ops/sparse_ops_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":array_grad\",\n        \":constant_op\",\n        \":dtypes\",\n        \":framework_test_lib\",\n        \":gradient_checker_v2\",\n        \":sparse_grad\",\n        \":sparse_ops\",\n        \":sparse_tensor\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\npy_library(\n    name = \"sort_ops\",\n    srcs = [\"ops/sort_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":framework\",\n        \":math_ops\",\n        \":nn_ops\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"sort_ops_test\",\n    srcs = [\"ops/sort_ops_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework\",\n        \":random_ops\",\n        \":sort_ops\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"confusion_matrix\",\n    srcs = [\"ops/confusion_matrix.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":check_ops\",\n        \":control_flow_ops\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":sparse_ops\",\n    ],\n)\n\npy_library(\n    name = \"weights_broadcast_ops\",\n    srcs = [\n        \"ops/weights_broadcast_ops.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":control_flow_ops\",\n        \":framework\",\n        \":math_ops\",\n        \":sets\",\n    ],\n)\n\npy_library(\n    name = \"metrics\",\n    srcs = [\n        \"ops/metrics.py\",\n        \"ops/metrics_impl.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":check_ops\",\n        \":confusion_matrix\",\n        \":control_flow_ops\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":nn\",\n        \":sets\",\n        \":sparse_ops\",\n        \":state_ops\",\n        \":util\",\n        \":variable_scope\",\n        \":variables\",\n        \":weights_broadcast_ops\",\n        \"//tensorflow/python/distribute:distribute_lib\",\n    ],\n)\n\npy_library(\n    name = \"special_math_ops\",\n    srcs = [\"ops/special_math_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":check_ops\",\n        \":control_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":platform\",\n        \"//tensorflow/compiler/tf2xla/ops:gen_xla_ops\",\n        \"@functools32_archive//:functools32\",\n        \"@opt_einsum_archive//:opt_einsum\",\n    ],\n)\n\npy_library(\n    name = \"rnn_grad\",\n    srcs = [\"ops/rnn_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":rnn_ops_gen\",\n    ],\n)\n\npy_test(\n    name = \"rnn_grad_test\",\n    srcs = [\"ops/rnn_grad_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":framework_test_lib\",\n        \":gradients\",\n        \":math_ops\",\n        \":rnn_grad\",\n        \":rnn_ops_gen\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"standard_ops\",\n    srcs = [\"ops/standard_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_grad\",\n        \":array_ops\",\n        \":batch_ops\",\n        \":check_ops\",\n        \":clip_ops\",\n        \":confusion_matrix\",\n        \":control_flow_ops\",\n        \":critical_section_ops\",\n        \":cudnn_rnn_grad\",\n        \":data_flow_grad\",\n        \":data_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":functional_ops\",\n        \":gradients\",\n        \":histogram_ops\",\n        \":init_ops\",\n        \":io_ops\",\n        \":linalg_ops\",\n        \":logging_ops\",\n        \":lookup_ops\",\n        \":loss_scaling_gradient_tape\",\n        \":manip_grad\",\n        \":manip_ops\",\n        \":math_grad\",\n        \":math_ops\",\n        \":numerics\",\n        \":parsing_ops\",\n        \":partitioned_variables\",\n        \":proto_ops\",\n        \":random_ops\",\n        \":rnn_grad\",\n        \":script_ops\",\n        \":session_ops\",\n        \":sort_ops\",\n        \":sparse_grad\",\n        \":sparse_ops\",\n        \":special_math_ops\",\n        \":state_grad\",\n        \":state_ops\",\n        \":stateful_random_ops\",\n        \":stateless_random_ops\",\n        \":string_ops\",\n        \":template\",\n        \":tensor_array_grad\",\n        \":tensor_array_ops\",\n        \":util\",\n        \":variable_scope\",\n        \":variables\",\n        \"//tensorflow/python/compiler\",\n        \"//tensorflow/python/eager:wrap_function\",\n        \"//tensorflow/python/ops/distributions\",\n        \"//tensorflow/python/ops/linalg\",\n        \"//tensorflow/python/ops/linalg/sparse\",\n        \"//tensorflow/python/ops/ragged\",\n        \"//tensorflow/python/ops/structured\",\n    ],\n)\n\npy_library(\n    name = \"state_grad\",\n    srcs = [\"ops/state_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\":framework_for_generated_wrappers\"],\n)\n\npy_library(\n    name = \"state_ops\",\n    srcs = [\"ops/state_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":framework_ops\",\n        \":math_ops_gen\",\n        \":resource_variable_ops_gen\",\n        \":state_ops_gen\",\n        \":tensor_shape\",\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"string_ops\",\n    srcs = [\"ops/string_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":string_ops_gen\",\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"summary_ops_v2\",\n    srcs = [\"ops/summary_ops_v2.py\"],\n    srcs_version = \"PY2AND3\",\n    visibility = [\"//tensorflow:internal\"],\n    deps = [\n        \":array_ops\",\n        \":constant_op\",\n        \":control_flow_ops\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":math_ops\",\n        \":resource_variable_ops\",\n        \":smart_cond\",\n        \":summary_op_util\",\n        \":summary_ops_gen\",\n        \":tensor_util\",\n        \":training_util\",\n        \":util\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:profiler\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"template\",\n    srcs = [\"ops/template.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":platform\",\n        \":util\",\n        \":variable_scope\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:function\",\n    ],\n)\n\npy_library(\n    name = \"tensor_array_grad\",\n    srcs = [\"ops/tensor_array_grad.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":tensor_array_ops\",\n    ],\n)\n\npy_library(\n    name = \"tensor_array_ops\",\n    srcs = [\"ops/tensor_array_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":constant_op\",\n        \":control_flow_ops_gen\",\n        \":data_flow_ops_gen\",\n        \":dtypes\",\n        \":errors\",\n        \":framework_ops\",\n        \":list_ops\",\n        \":math_ops\",\n        \":tensor_shape\",\n        \":tensor_util\",\n        \":tf2\",\n        \":tf_should_use\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\npy_library(\n    name = \"variable_scope\",\n    srcs = [\"ops/variable_scope.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":init_ops\",\n        \":platform\",\n        \":resource_variable_ops\",\n        \":tensor_shape\",\n        \":tf2\",\n        \":util\",\n        \":variables\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:monitoring\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"variables\",\n    srcs = [\"ops/variables.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":control_flow_ops\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":math_ops\",\n        \":state_ops\",\n        \":tensor_shape\",\n        \":tf_should_use\",\n        \":util\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/training/tracking:base\",\n    ],\n)\n\npy_library(\n    name = \"gradient_checker\",\n    srcs = [\"ops/gradient_checker.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":framework_for_generated_wrappers\",\n        \":gradients\",\n        \":platform\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"gradient_checker_v2\",\n    srcs = [\"ops/gradient_checker_v2.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":framework_for_generated_wrappers\",\n        \":gradients\",\n        \":platform\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\n# This target is deprecated.\npy_library(\n    name = \"ops\",\n    srcs = [\"user_ops/user_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":user_ops_gen\",\n        \":util\",\n        \"@six_archive//:six\",\n    ],\n)\n\ncuda_py_test(\n    name = \"bitwise_ops_test\",\n    size = \"small\",\n    srcs = [\"ops/bitwise_ops_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_windows\"],\n    deps = [\n        \":bitwise_ops\",\n        \":constant_op\",\n        \":dtypes\",\n        \":framework_test_lib\",\n    ],\n)\n\ncuda_py_test(\n    name = \"control_flow_ops_test\",\n    size = \"small\",\n    srcs = [\"ops/control_flow_ops_test.py\"],\n    python_version = \"PY3\",\n    shard_count = 2,\n    deps = [\n        \":array_ops\",\n        \":cond_v2\",\n        \":control_flow_ops\",\n        \":control_flow_v2_toggles\",\n        \":embedding_ops\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":gradients\",\n        \":init_ops\",\n        \":math_ops\",\n        \":platform_test\",\n        \":state_ops\",\n        \":tensor_array_grad\",\n        \":tensor_array_ops\",\n        \":training\",\n        \":util\",\n        \":variable_scope\",\n        \":variables\",\n        \":while_v2\",\n        \"//tensorflow/python/eager:def_function\",\n    ],\n)\n\ncuda_py_test(\n    name = \"gradient_checker_test\",\n    size = \"medium\",\n    srcs = [\"ops/gradient_checker_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":nn_grad\",\n        \":nn_ops\",\n        \":platform\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_test(\n    name = \"op_selector_test\",\n    srcs = [\"ops/op_selector_test.py\"],\n    python_version = \"PY3\",\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":client_testlib\",\n        \":constant_op\",\n        \":framework_ops\",\n        \":math_ops\",\n        \":op_selector\",\n    ],\n)\n\ncuda_py_test(\n    name = \"gradient_checker_v2_test\",\n    size = \"medium\",\n    srcs = [\"ops/gradient_checker_v2_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":nn_grad\",\n        \":nn_ops\",\n        \":platform\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"gradients_test\",\n    size = \"medium\",\n    srcs = [\"ops/gradients_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_oss\"],  # b/118709825\n    deps = [\n        \":array_grad\",\n        \":array_ops\",\n        \":control_flow_grad\",\n        \":control_flow_ops\",\n        \":data_flow_grad\",\n        \":data_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":functional_ops\",\n        \":gradients\",\n        \":init_ops\",\n        \":list_ops\",\n        \":math_grad\",\n        \":math_ops\",\n        \":nn_grad\",\n        \":nn_ops\",\n        \":platform_test\",\n        \":state_grad\",\n        \":state_ops\",\n        \":tensor_array_grad\",\n        \":tensor_array_ops\",\n        \":test_ops\",\n        \":unconnected_gradients\",\n        \":variable_scope\",\n        \"//tensorflow/python/keras:engine\",\n        \"//third_party/py/numpy\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\ncuda_py_test(\n    name = \"histogram_ops_test\",\n    size = \"small\",\n    srcs = [\"ops/histogram_ops_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":histogram_ops\",\n        \":init_ops\",\n        \":variables\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"image_grad_test\",\n    size = \"medium\",\n    srcs = [\"ops/image_grad_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":gradients\",\n        \":image_ops\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"image_ops_test\",\n    size = \"medium\",\n    srcs = [\"ops/image_ops_test.py\"],\n    data = [\"//tensorflow/core:image_testdata\"],\n    python_version = \"PY3\",\n    shard_count = 5,\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":errors\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":image_ops\",\n        \":io_ops\",\n        \":math_ops\",\n        \":platform_test\",\n        \":random_ops\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"init_ops_test\",\n    size = \"small\",\n    srcs = [\"ops/init_ops_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":framework_ops\",\n        \":init_ops\",\n        \":resource_variable_ops\",\n        \"//tensorflow/python/eager:context\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"init_ops_v2_test\",\n    size = \"medium\",\n    srcs = [\"ops/init_ops_v2_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_ops\",\n        \":init_ops_v2\",\n        \":random_ops\",\n        \"//tensorflow/python/eager:context\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"math_grad_test\",\n    size = \"small\",\n    srcs = [\"ops/math_grad_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_windows_gpu\"],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \"//tensorflow/python/debug:check_numerics_callback\",\n        \"//tensorflow/python/eager:backprop\",\n        \"//tensorflow/python/eager:context\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"math_ops_test\",\n    size = \"small\",\n    srcs = [\"ops/math_ops_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_windows_gpu\"],\n    deps = [\n        \":array_ops\",\n        \":errors\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":gradients\",\n        \":math_ops\",\n        \":platform_test\",\n        \":variables\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"nn_batchnorm_test\",\n    size = \"medium\",\n    srcs = [\"ops/nn_batchnorm_test.py\"],\n    python_version = \"PY3\",\n    shard_count = 4,\n    tags = [\"no_windows\"],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":gradients\",\n        \":math_ops\",\n        \":nn\",\n        \":nn_grad\",\n        \":nn_ops_gen\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"nn_fused_batchnorm_test\",\n    size = \"large\",\n    srcs = [\"ops/nn_fused_batchnorm_test.py\"],\n    python_version = \"PY3\",\n    shard_count = 16,\n    tags = [\"no_rocm\"],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":gradients\",\n        \":nn\",\n        \":nn_grad\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"nn_test\",\n    size = \"medium\",\n    srcs = [\"ops/nn_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_windows\"],\n    # TODO(b/130689556): Numerical differences due to fast math on CPU.\n    xla_enable_strict_auto_jit = False,\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":nn\",\n        \":nn_grad\",\n        \":nn_ops\",\n        \":partitioned_variables\",\n        \":variable_scope\",\n        \":variables\",\n        \"//third_party/py/numpy\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\npy_test(\n    name = \"nn_loss_scaling_utilities_test\",\n    size = \"small\",\n    srcs = [\"ops/nn_loss_scaling_utilities_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \"//tensorflow/python/distribute:combinations\",\n        \"//tensorflow/python/distribute:strategy_combinations\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\ncuda_py_test(\n    name = \"nn_xent_test\",\n    size = \"medium\",\n    srcs = [\"ops/nn_xent_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":gradients\",\n        \":nn\",\n        \":nn_grad\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_test(\n    name = \"tensor_array_ops_test\",\n    size = \"small\",\n    srcs = [\"ops/tensor_array_ops_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n    ],\n)\n\ncuda_py_test(\n    name = \"sobol_ops_test\",\n    size = \"small\",\n    srcs = [\"ops/sobol_ops_test.py\"],\n    additional_deps = [\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":math_ops\",\n        \":platform_test\",\n        \"//third_party/py/numpy\",\n    ],\n    kernels = [\n        \"//tensorflow/core/kernels:libtfkernel_sobol_op.so\",\n    ],\n    tags = [\"no_windows_gpu\"],\n)\n\ncuda_py_test(\n    name = \"special_math_ops_test\",\n    size = \"medium\",\n    srcs = [\"ops/special_math_ops_test.py\"],\n    python_version = \"PY3\",\n    shard_count = 10,\n    tags = [\"no_windows_gpu\"],\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":special_math_ops\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"variable_spec_test\",\n    size = \"small\",\n    srcs = [\"ops/variable_spec_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":platform_test\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"training_lib\",\n    srcs = glob(\n        [\"training/**/*.py\"],\n        exclude = [\n            \"**/*test*\",\n            \"training/tracking/**/*.py\",\n            \"training/saving/**/*.py\",\n            # The following targets have their own build rules (same name as the\n            # file):\n            \"training/basic_session_run_hooks.py\",\n            \"training/checkpoint_management.py\",\n            \"training/distribute.py\",\n            \"training/distribution_strategy_context.py\",\n            \"training/saver.py\",\n            \"training/session_run_hook.py\",\n            \"training/training_util.py\",\n        ],\n    ),\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":array_ops_gen\",\n        \":basic_session_run_hooks\",\n        \":checkpoint_management\",\n        \":checkpoint_ops_gen\",\n        \":client\",\n        \":control_flow_ops\",\n        \":data_flow_ops\",\n        \":device\",\n        \":device_spec\",\n        \":distribute\",\n        \":errors\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_ops\",\n        \":gradients\",\n        \":init_ops\",\n        \":io_ops\",\n        \":layers_util\",\n        \":lookup_ops\",\n        \":loss_scale\",\n        \":loss_scale_optimizer\",\n        \":math_ops\",\n        \":mixed_precision\",\n        \":platform\",\n        \":py_checkpoint_reader\",\n        \":pywrap_tensorflow\",\n        \":random_ops\",\n        \":resource_variable_ops\",\n        \":resources\",\n        \":saver\",\n        \":sdca_ops\",\n        \":session\",\n        \":session_run_hook\",\n        \":sparse_ops\",\n        \":sparse_tensor\",\n        \":state_ops\",\n        \":summary\",\n        \":training_ops_gen\",\n        \":training_util\",\n        \":util\",\n        \":variable_scope\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/data/ops:dataset_ops\",\n        \"//tensorflow/python/distribute:distribute_coordinator_context\",\n        \"//tensorflow/python/distribute:distribute_lib\",\n        \"//tensorflow/python/distribute:reduce_util\",\n        \"//tensorflow/python/eager:backprop\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/keras/optimizer_v2:learning_rate_schedule\",\n        \"//tensorflow/python/ops/losses\",\n        \"//third_party/py/numpy\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"training\",\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":training_lib\",\n        \"//tensorflow/python/training/tracking:base\",\n        \"//tensorflow/python/training/tracking:python_state\",\n        \"//tensorflow/python/training/tracking:util\",\n    ],\n)\n\n# Dependency added and used by ClusterResolvers to avoid circular dependency between keras, distribute, and training.\npy_library(\n    name = \"training_server_lib\",\n    srcs = [\"training/server_lib.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework\",\n        \":pywrap_tensorflow\",\n        \":util\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"py_checkpoint_reader\",\n    srcs = [\"training/py_checkpoint_reader.py\"],\n    deps = [\n        \":_pywrap_checkpoint_reader\",\n        \":dtypes\",\n        \":errors\",\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"checkpoint_management\",\n    srcs = [\"training/checkpoint_management.py\"],\n    deps = [\n        \":errors\",\n        \":lib\",\n        \":platform\",\n        \":protos_all_py\",\n        \":util\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"session_run_hook\",\n    srcs = [\"training/session_run_hook.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\":util\"],\n)\n\npy_library(\n    name = \"basic_session_run_hooks\",\n    srcs = [\"training/basic_session_run_hooks.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":client\",\n        \":framework\",\n        \":platform\",\n        \":protos_all_py\",\n        \":session_run_hook\",\n        \":training_util\",\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"saver\",\n    srcs = [\"training/saver.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":checkpoint_management\",\n        \":constant_op\",\n        \":control_flow_ops\",\n        \":device\",\n        \":errors\",\n        \":framework\",\n        \":framework_ops\",\n        \":io_ops\",\n        \":io_ops_gen\",\n        \":platform\",\n        \":py_checkpoint_reader\",\n        \":resource_variable_ops\",\n        \":session\",\n        \":state_ops\",\n        \":string_ops\",\n        \":training_util\",\n        \":util\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/training/saving:saveable_object\",\n        \"//tensorflow/python/training/saving:saveable_object_util\",\n        \"//tensorflow/python/training/tracking:base\",\n        \"//third_party/py/numpy\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"distribute\",\n    srcs = [\n        \"training/distribute.py\",\n        \"training/distribution_strategy_context.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \"//tensorflow/python/distribute:distribute_lib\",\n    ],\n)\n\ntf_py_test(\n    name = \"evaluation_test\",\n    size = \"small\",\n    srcs = [\"training/evaluation_test.py\"],\n    python_version = \"PY3\",\n    shard_count = 3,\n    tags = [\n        \"manual\",\n        \"notap\",  # Disabling until b/33000128 and b/33040312 are fixed.\n    ],\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":math_ops\",\n        \":metrics\",\n        \":platform\",\n        \":state_ops\",\n        \":summary\",\n        \":training\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/ops/losses\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"client\",\n    srcs = [\n        \"client/client_lib.py\",\n        \"client/device_lib.py\",\n        \"client/timeline.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":_pywrap_device_lib\",\n        \":errors\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":platform\",\n        \":session\",\n        \":session_ops\",\n        \":util\",\n        \"//third_party/py/numpy\",\n        \"@six_archive//:six\",\n    ],\n)\n\npybind_extension(\n    name = \"_tf_stack\",\n    srcs = [\"util/tf_stack.cc\"],\n    # TODO(b/138203821): change to \"util._tf_stack\" once the bug is fixed.\n    module_name = \"_tf_stack\",\n    deps = [\n        \"//third_party/python_runtime:headers\",  # buildcleaner: keep\n        \"@pybind11\",\n    ],\n)\n\npy_library(\n    name = \"util\",\n    srcs = glob(\n        [\"util/**/*.py\"],\n        exclude = [\n            \"util/example_parser*\",\n            \"util/tf_should_use.py\",\n            \"util/**/*_test.py\",\n        ],\n    ),\n    srcs_version = \"PY2AND3\",\n    visibility = visibility + [\n        \"//tensorflow:__pkg__\",\n        \"//third_party/py/tensorflow_core:__subpackages__\",\n        \"//third_party/py/tf_agents:__subpackages__\",\n    ],\n    deps = [\n        \":_tf_stack\",\n        \"@org_python_pypi_backports_weakref\",\n        \"@com_google_protobuf//:protobuf_python\",\n        \"//third_party/py/numpy\",\n        \"@six_archive//:six\",\n        \"@wrapt\",\n        \"//tensorflow/tools/compatibility:all_renames_v2\",\n    ] + if_mlir([\"//tensorflow/compiler/mlir/tensorflow:mlir_roundtrip_pass_registration\"]),\n)\n\ntf_py_test(\n    name = \"tf_stack_test\",\n    srcs = [\"util/tf_stack_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":util\",\n    ],\n)\n\ntf_py_test(\n    name = \"object_identity_test\",\n    size = \"small\",\n    srcs = [\"util/object_identity_test.py\"],\n    python_version = \"PY3\",\n)\n\n# Placeholder for intenal nest_test comments.\ntf_py_test(\n    name = \"util_nest_test\",\n    size = \"small\",\n    srcs = [\"util/nest_test.py\"],\n    main = \"util/nest_test.py\",\n    python_version = \"PY3\",\n    deps = [\":util_nest_test_main_lib\"],\n)\n\npy_library(\n    name = \"util_nest_test_main_lib\",\n    testonly = True,\n    srcs = [\"util/nest_test.py\"],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":util\",\n        \"//third_party/py/numpy\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\ntf_py_test(\n    name = \"util_serialization_test\",\n    size = \"small\",\n    srcs = [\"util/serialization_test.py\"],\n    main = \"util/serialization_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":util\",\n    ],\n)\n\ntf_py_test(\n    name = \"function_utils_test\",\n    srcs = [\"util/function_utils_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":util\",\n    ],\n)\n\ntf_py_test(\n    name = \"tf_contextlib_test\",\n    size = \"small\",\n    srcs = [\"util/tf_contextlib_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":util\",\n    ],\n)\n\ntf_py_test(\n    name = \"tf_decorator_test\",\n    size = \"small\",\n    srcs = [\"util/tf_decorator_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"tf_should_use\",\n    srcs = [\"util/tf_should_use.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":framework_ops\",\n        \":util\",\n        \"//tensorflow/python/eager:context\",\n        \"@six_archive//:six\",\n    ],\n)\n\ntf_py_test(\n    name = \"tf_should_use_test\",\n    size = \"small\",\n    srcs = [\"util/tf_should_use_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":tf_should_use\",\n    ],\n)\n\ntf_py_test(\n    name = \"tf_inspect_test\",\n    size = \"small\",\n    srcs = [\"util/tf_inspect_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"util_example_parser_configuration\",\n    srcs = [\"util/example_parser_configuration.py\"],\n    srcs_version = \"PY2AND3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"lock_util_test\",\n    size = \"small\",\n    srcs = [\"util/lock_util_test.py\"],\n    main = \"util/lock_util_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":util\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\ntf_py_test(\n    name = \"module_wrapper_test\",\n    size = \"small\",\n    srcs = [\"util/module_wrapper_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":util\",\n        \"//tensorflow/tools/compatibility:all_renames_v2\",\n        \"@six_archive//:six\",\n    ],\n)\n\ntf_proto_library(\n    name = \"protos_all\",\n    srcs = glob(\n        [\"**/*.proto\"],\n        exclude = [\n            \"util/protobuf/compare_test.proto\",\n            \"framework/cpp_shape_inference.proto\",\n        ],\n    ),\n)\n\ntf_proto_library_py(\n    name = \"compare_test_proto\",\n    testonly = 1,\n    srcs = [\"util/protobuf/compare_test.proto\"],\n)\n\ntf_proto_library(\n    name = \"cpp_shape_inference_proto\",\n    srcs = [\"framework/cpp_shape_inference.proto\"],\n    cc_api_version = 2,\n    protodeps = tf_additional_all_protos(),\n    # TODO(b/74620627): remove when _USE_C_SHAPES is removed\n    visibility = [\"//tensorflow:internal\"],\n)\n\ntf_py_test(\n    name = \"protobuf_compare_test\",\n    size = \"small\",\n    srcs = [\"util/protobuf/compare_test.py\"],\n    main = \"util/protobuf/compare_test.py\",\n    python_version = \"PY3\",\n    tags = [\"no_pip\"],  # compare_test_pb2 proto is not available in pip.\n    deps = [\n        \":compare_test_proto_py\",\n        \":platform_test\",\n        \":util\",\n        \"@six_archive//:six\",\n    ],\n)\n\ntf_py_test(\n    name = \"util_example_parser_configuration_test\",\n    size = \"small\",\n    srcs = [\"util/example_parser_configuration_test.py\"],\n    main = \"util/example_parser_configuration_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":parsing_ops\",\n        \":util_example_parser_configuration\",\n    ],\n)\n\ntf_py_test(\n    name = \"events_writer_test\",\n    size = \"small\",\n    srcs = [\"client/events_writer_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":errors\",\n        \":framework_test_lib\",\n        \":lib\",\n        \":platform_test\",\n        \":util\",\n    ],\n)\n\npy_library(\n    name = \"device_lib\",\n    srcs = [\"client/device_lib.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":_pywrap_device_lib\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_device_lib\",\n    srcs = [\"client/device_lib_wrapper.cc\"],\n    module_name = \"_pywrap_device_lib\",\n    deps = [\n        \":pybind11_proto\",\n        \":pybind11_status\",\n        \"//tensorflow/core:core_cpu_headers_lib\",\n        \"//tensorflow/core:framework_internal_headers_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ncuda_py_tests(\n    name = \"device_lib_test\",\n    size = \"small\",\n    srcs = [\n        \"client/device_lib_test.py\",\n    ],\n    python_version = \"PY3\",\n    deps = [\n        \":client\",\n        \":client_testlib\",\n        \":framework_test_lib\",\n        \":platform_test\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ncc_library(\n    name = \"session_ref\",\n    srcs = [\"client/session_ref.cc\"],\n    hdrs = [\"client/session_ref.h\"],\n    deps = [\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:master_proto_cc\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:replay_log_proto_cc\",\n    ],\n)\n\ntf_cuda_library(\n    name = \"tf_session_helper\",\n    srcs = [\"client/tf_session_helper.cc\"],\n    hdrs = [\"client/tf_session_helper.h\"],\n    deps = [\n        \":construction_fails_op\",\n        \":ndarray_tensor\",\n        \":ndarray_tensor_bridge\",\n        \":numpy_lib\",\n        \":safe_ptr\",\n        \":session_ref\",\n        \":test_ops_kernels\",\n        \"//tensorflow/c:c_api\",\n        \"//tensorflow/c:c_api_internal\",\n        \"//tensorflow/c:tf_status_helper\",\n        \"//tensorflow/core\",\n        \"//tensorflow/core:all_kernels\",\n        \"//tensorflow/core:direct_session\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:graph\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/py/numpy:headers\",\n        \"//third_party/python_runtime:headers\",\n    ],\n)\n\npy_library(\n    name = \"pywrap_tensorflow\",\n    srcs = [\n        \"pywrap_tensorflow.py\",\n    ] + if_static(\n        [\"pywrap_dlopen_global_flags.py\"],\n        # Import will fail, indicating no global dlopen flags\n        otherwise = [],\n    ),\n    srcs_version = \"PY2AND3\",\n    deps = [\":pywrap_tensorflow_internal\"],\n)\n\ntf_py_wrap_cc(\n    name = \"pywrap_tensorflow_internal\",\n    srcs = [\"tensorflow.i\"],\n    swig_includes = [\n        \"client/tf_session.i\",\n        \"client/tf_sessionrun_wrapper.i\",\n        \"grappler/cluster.i\",\n        \"grappler/cost_analyzer.i\",\n        \"grappler/item.i\",\n        \"grappler/tf_optimizer.i\",\n        \"lib/core/strings.i\",\n        \"lib/io/py_record_reader.i\",\n        \"platform/base.i\",\n        \"//tensorflow/compiler/mlir/python:mlir.i\",\n    ],\n    # add win_def_file for pywrap_tensorflow\n    win_def_file = select({\n        \"//tensorflow:windows\": \":pywrap_tensorflow_filtered_def_file\",\n        \"//conditions:default\": None,\n    }),\n    deps = [\n        \":bfloat16_lib\",\n        \":cost_analyzer_lib\",\n        \":model_analyzer_lib\",\n        \":cpp_python_util\",\n        \":kernel_registry\",\n        \":numpy_lib\",\n        \":safe_ptr\",\n        \":py_exception_registry\",\n        \":py_func_lib\",\n        \":py_record_reader_lib\",\n        \":python_op_gen\",\n        \":tf_session_helper\",\n        \"//third_party/python_runtime:headers\",\n        \"//tensorflow/c:c_api\",\n        \"//tensorflow/c:c_api_experimental\",\n        \"//tensorflow/c:checkpoint_reader\",\n        \"//tensorflow/c:python_api\",\n        \"//tensorflow/c:tf_status_helper\",\n        \"//tensorflow/c/eager:c_api\",\n        \"//tensorflow/c/eager:c_api_experimental\",\n        \"//tensorflow/compiler/mlir:passes\",\n        \"//tensorflow/core/distributed_runtime/rpc:grpc_rpc_factory_registration\",\n        \"//tensorflow/core/distributed_runtime/rpc:grpc_server_lib\",\n        \"//tensorflow/core/distributed_runtime/rpc:grpc_session\",\n        \"//tensorflow/core/grappler:grappler_item\",\n        \"//tensorflow/core/grappler:grappler_item_builder\",\n        \"//tensorflow/core/grappler/clusters:cluster\",\n        \"//tensorflow/core/grappler/clusters:single_machine\",\n        \"//tensorflow/core/grappler/clusters:virtual_cluster\",\n        \"//tensorflow/core/grappler/costs:graph_memory\",\n        \"//tensorflow/core/grappler/graph_analyzer:graph_analyzer_tool\",\n        \"//tensorflow/core/grappler/optimizers:meta_optimizer\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:reader_base\",\n        \"//tensorflow/core/debug\",\n        \"//tensorflow/core/distributed_runtime:server_lib\",\n        \"//tensorflow/core/profiler/internal:print_model_analysis\",\n        \"//tensorflow/tools/graph_transforms:transform_graph_lib\",\n        \"//tensorflow/lite/toco/python:toco_python_api\",\n        \"//tensorflow/python/eager:pywrap_tfe_lib\",\n        \"//tensorflow/core/util/tensor_bundle\",\n    ] + (tf_additional_lib_deps() +\n         tf_additional_plugin_deps()) + if_ngraph([\n        \"@ngraph_tf//:ngraph_tf\",\n    ]),\n)\n\n# ** Targets for Windows build (start) **\n# We need the following targets to expose symbols from _pywrap_tensorflow.dll\n\nWIN_LIB_FILES_FOR_EXPORTED_SYMBOLS = [\n    \":cpp_python_util\",  # util\n    \":py_func_lib\",  # py_func\n    \":model_analyzer_lib\",  # model_analyzer\n    \"//tensorflow/core/util:port\",  # util_port\n    \"//tensorflow/stream_executor:stream_executor_pimpl\",  # stat_summarizer\n    \"//tensorflow/core/grappler/graph_analyzer:graph_analyzer_tool\",  # graph_analyzer\n    \"//tensorflow/core/profiler/internal:print_model_analysis\",  # tfprof\n    \"//tensorflow/core:framework_internal_impl\",  # op_def_registry\n    \"//tensorflow/core:lib_internal_impl\",  # device_lib\n    \"//tensorflow/core:core_cpu_impl\",  # device_lib\n    \":py_exception_registry\",  # py_exception_registry\n    \":kernel_registry\",  # kernel_registry\n    \"//tensorflow/lite/toco/python:toco_python_api\",  # toco\n    \"//tensorflow/tools/graph_transforms:transform_graph_lib\",  # transform_graph\n    \"//tensorflow/c:checkpoint_reader\",  # checkpoint_reader\n    \":ndarray_tensor\",  # checkpoint_reader\n    \":numpy_lib\",  # checkpoint_reader\n    \":safe_ptr\",  # checkpoint_reader\n    \":python_op_gen\",  # python_op_gen\n    \":bfloat16_lib\",  # bfloat16\n    \"//tensorflow/python/eager:pywrap_tfe_lib\",  # pywrap_tfe_lib\n    \"//tensorflow/core/util/tensor_bundle\",  # checkpoint_reader\n    \"//tensorflow/core/common_runtime/eager:eager_executor\",  # tfe\n    \"//tensorflow/core/common_runtime/eager:context\",  # tfe\n    \"//tensorflow/core/profiler/lib:profiler_session\",  # tfe\n    \"//tensorflow/c:tf_status_helper\",  # tfe\n]\n\n# Filter the DEF file to reduce the number of symbols to 64K or less.\n# Note that we also write the name of the pyd file into DEF file so that\n# the dynamic libraries of custom ops can find it at runtime.\ngenrule(\n    name = \"pywrap_tensorflow_filtered_def_file\",\n    srcs = select({\n        \"//tensorflow:windows\": [\n            \"//tensorflow:tensorflow_def_file\",\n            \":pybind_symbol_target_libs_file\",\n            \"//tensorflow/tools/def_file_filter:symbols_pybind\",\n        ] + WIN_LIB_FILES_FOR_EXPORTED_SYMBOLS,\n        \"//conditions:default\": [],\n    }),\n    outs = [\"pywrap_tensorflow_filtered_def_file.def\"],\n    cmd = select({\n        \"//tensorflow:windows\": \"\"\"\n              $(location @local_config_def_file_filter//:def_file_filter) \\\\\n              --input $(location //tensorflow:tensorflow_def_file) \\\\\n              --output $@ \\\\\n              --target _pywrap_tensorflow_internal.pyd \\\\\n              --symbols $(location //tensorflow/tools/def_file_filter:symbols_pybind) \\\\\n              --lib_paths $(location :pybind_symbol_target_libs_file)\n          \"\"\",\n        \"//conditions:default\": \"touch $@\",  # Just a placeholder for Unix platforms\n    }),\n    tools = [\"@local_config_def_file_filter//:def_file_filter\"],\n    visibility = [\"//visibility:public\"],\n)\n\n# Write to a file a list of all cc_library targets that we need for exporting symbols on Windows.\ngenrule(\n    name = \"pybind_symbol_target_libs_file\",\n    srcs = WIN_LIB_FILES_FOR_EXPORTED_SYMBOLS,\n    outs = [\"pybind_symbol_target_libs_file.txt\"],\n    cmd = select({\n        \"//tensorflow:windows\": \"\"\"\n            for SRC in $(SRCS); do\n              echo $$SRC | sed 's/third_party\\\\///g' >> $@\n            done\n          \"\"\",\n        \"//conditions:default\": \"touch $@\",  # Just a placeholder for Unix platforms\n    }),\n    visibility = [\"//visibility:public\"],\n)\n\n# Get the import library of _pywrap_tensorflow_internal.pyd\nfilegroup(\n    name = \"get_pywrap_tensorflow_import_lib_file\",\n    srcs = [\":_pywrap_tensorflow_internal.so\"],\n    output_group = \"interface_library\",\n)\n\ncc_import(\n    name = \"_pywrap_tensorflow_internal_linux\",\n    shared_library = \"//tensorflow/python:lib_pywrap_tensorflow_internal.so\",\n    visibility = tf_external_workspace_visible(visibility),\n)\n\ncc_import(\n    name = \"_pywrap_tensorflow_internal_macos\",\n    shared_library = \"//tensorflow/python:lib_pywrap_tensorflow_internal.dylib\",\n    visibility = tf_external_workspace_visible(visibility),\n)\n\ncc_import(\n    name = \"_pywrap_tensorflow_internal_windows\",\n    interface_library = \"//tensorflow/python:pywrap_tensorflow_import_lib_file\",\n    shared_library = \"//tensorflow/python:_pywrap_tensorflow_internal.dll\",\n    visibility = tf_external_workspace_visible(visibility),\n)\n\n# Rename the import library for _pywrap_tensorflow_internal.pyd to _pywrap_tensorflow_internal.lib\n# (It was _pywrap_tensorflow_internal.so.if.lib).\ngenrule(\n    name = \"pywrap_tensorflow_import_lib_file\",\n    srcs = [\":get_pywrap_tensorflow_import_lib_file\"],\n    outs = [\"_pywrap_tensorflow_internal.lib\"],\n    cmd = select({\n        \"//tensorflow:windows\": \"cp -f $< $@\",\n        \"//conditions:default\": \"touch $@\",  # Just a placeholder for Unix platforms\n    }),\n    visibility = [\"//visibility:public\"],\n)\n\n# Create a cc_import rule for the import library of _pywrap_tensorflow_internal.dll\n# so that custom ops' dynamic libraries can link against it.\ncc_import(\n    name = \"pywrap_tensorflow_import_lib\",\n    interface_library = select({\n        \"//tensorflow:windows\": \":pywrap_tensorflow_import_lib_file\",\n        \"//conditions:default\": \"not_exsiting_on_unix.lib\",  # Just a placeholder for Unix platforms\n    }),\n    system_provided = 1,\n)\n\n# ** Targets for Windows build (end) **\n\ntf_python_pybind_extension(\n    name = \"_pywrap_file_io\",\n    srcs = [\"lib/io/file_io_wrapper.cc\"],\n    module_name = \"_pywrap_file_io\",\n    deps = [\n        \":pybind11_absl\",\n        \":pybind11_status\",\n        \"//tensorflow/core:framework_headers_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@pybind11\",\n    ],\n)\n\npy_library(\n    name = \"lib\",\n    srcs = [\n        \"lib/io/file_io.py\",\n        \"lib/io/python_io.py\",\n        \"lib/io/tf_record.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":_pywrap_file_io\",\n        \":_pywrap_record_io\",\n        \":errors\",\n        \":pywrap_tensorflow\",\n        \":util\",\n        \"@six_archive//:six\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_record_io\",\n    srcs = [\"lib/io/record_io_wrapper.cc\"],\n    module_name = \"_pywrap_record_io\",\n    deps = [\n        \":pybind11_absl\",\n        \":pybind11_status\",\n        \"//tensorflow/core:framework_headers_lib\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/platform:types\",\n        \"@com_google_absl//absl/memory\",\n        \"@pybind11\",\n    ],\n)\n\npy_library(\n    name = \"session\",\n    srcs = [\"client/session.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":c_api_util\",\n        \":error_interpolation\",\n        \":errors\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":mixed_precision_global_state\",\n        \":platform\",\n        \":pywrap_tensorflow\",\n        \":session_ops\",\n        \":util\",\n        \"//third_party/py/numpy\",\n        \"@wrapt\",\n    ],\n)\n\ntf_py_test(\n    name = \"server_lib_test\",\n    size = \"small\",\n    srcs = [\"training/server_lib_test.py\"],\n    grpc_enabled = True,\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":data_flow_ops\",\n        \":errors\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":training\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"server_lib_multiple_containers_test\",\n    size = \"small\",\n    srcs = [\"training/server_lib_multiple_containers_test.py\"],\n    grpc_enabled = True,\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":data_flow_ops\",\n        \":errors\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":training\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"server_lib_same_variables_clear_container_test\",\n    size = \"small\",\n    srcs = [\"training/server_lib_same_variables_clear_container_test.py\"],\n    grpc_enabled = True,\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":data_flow_ops\",\n        \":errors\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":training\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"server_lib_same_variables_clear_test\",\n    size = \"small\",\n    srcs = [\"training/server_lib_same_variables_clear_test.py\"],\n    grpc_enabled = True,\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":data_flow_ops\",\n        \":errors\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":training\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"server_lib_same_variables_no_clear_test\",\n    size = \"small\",\n    srcs = [\"training/server_lib_same_variables_no_clear_test.py\"],\n    grpc_enabled = True,\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":data_flow_ops\",\n        \":errors\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":training\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"server_lib_sparse_job_test\",\n    size = \"small\",\n    srcs = [\"training/server_lib_sparse_job_test.py\"],\n    grpc_enabled = True,\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":data_flow_ops\",\n        \":errors\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":training\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"localhost_cluster_performance_test\",\n    size = \"medium\",\n    srcs = [\n        \"training/localhost_cluster_performance_test.py\",\n    ],\n    grpc_enabled = True,\n    python_version = \"PY3\",\n    tags = [\n        \"no_oss\",  # Test flaky due to port collisions.\n        \"oss_serial\",\n    ],\n    deps = [\n        \":client\",\n        \":client_testlib\",\n        \":distributed_framework_test_lib\",\n        \":framework_for_generated_wrappers\",\n        \":partitioned_variables\",\n        \":training\",\n        \":variable_scope\",\n        \":variables\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"sync_replicas_optimizer_test\",\n    size = \"medium\",\n    srcs = [\n        \"training/sync_replicas_optimizer_test.py\",\n    ],\n    grpc_enabled = True,\n    python_version = \"PY3\",\n    tags = [\n        \"no_oss\",  # Test flaky due to port collisions.\n        \"notsan\",  # data race due to b/62910646\n        \"oss_serial\",\n    ],\n    deps = [\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":training\",\n        \":variables\",\n    ],\n)\n\npy_library(\n    name = \"timeline\",\n    srcs = [\"client/timeline.py\"],\n    srcs_version = \"PY2AND3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":platform\",\n    ],\n)\n\n# Just used by tests.\ntf_cuda_library(\n    name = \"construction_fails_op\",\n    srcs = [\"client/test_construction_fails_op.cc\"],\n    deps = [\n        \"//tensorflow/core\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n    alwayslink = 1,\n)\n\ntf_py_test(\n    name = \"session_test\",\n    size = \"medium\",\n    srcs = [\"client/session_test.py\"],\n    grpc_enabled = True,\n    python_version = \"PY3\",\n    tags = [\n        \"no_gpu\",  # b/127001953\n        \"no_pip_gpu\",  # testInteractivePlacePrunedGraph fails on invalid assumption about GPU ops.\n        \"no_windows\",\n    ],\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":config\",\n        \":control_flow_ops\",\n        \":data_flow_ops\",\n        \":errors\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":math_ops\",\n        \":platform_test\",\n        \":state_ops\",\n        \":training\",\n        \":util\",\n        \":variables\",\n        \"//third_party/py/numpy\",\n        \"@six_archive//:six\",\n    ],\n)\n\ntf_py_test(\n    name = \"session_clusterspec_prop_test\",\n    size = \"small\",\n    srcs = [\"client/session_clusterspec_prop_test.py\"],\n    grpc_enabled = True,\n    python_version = \"PY3\",\n    tags = [\n        \"no_gpu\",\n        \"no_oss\",\n        \"no_pip\",\n        \"no_pip_gpu\",\n        \"notap\",\n    ],\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":math_ops\",\n        \":platform_test\",\n        \":state_ops\",\n        \":training\",\n        \":util\",\n        \":variables\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"session_list_devices_test\",\n    size = \"small\",\n    srcs = [\"client/session_list_devices_test.py\"],\n    grpc_enabled = True,\n    python_version = \"PY3\",\n    tags = [\n        \"no_gpu\",\n        \"no_pip_gpu\",\n        \"notsan\",  # data race due to b/62910646\n    ],\n    deps = [\n        \":client\",\n        \":framework\",\n        \":framework_test_lib\",\n        \":platform_test\",\n        \":training\",\n    ],\n)\n\ntf_py_test(\n    name = \"session_partial_run_test\",\n    size = \"small\",\n    srcs = [\"client/session_partial_run_test.py\"],\n    grpc_enabled = True,\n    python_version = \"PY3\",\n    tags = [\n        \"no_gpu\",\n        \"no_windows\",\n    ],\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":errors\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":math_ops\",\n        \":platform_test\",\n        \":training\",\n        \":util\",\n        \"@six_archive//:six\",\n    ],\n)\n\ncuda_py_test(\n    name = \"timeline_test\",\n    size = \"small\",\n    srcs = [\"client/timeline_test.py\"],\n    python_version = \"PY3\",\n    xla_enable_strict_auto_jit = False,  # Graph structure is different with autojit\n    deps = [\n        \":client\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ncuda_py_test(\n    name = \"virtual_gpu_test\",\n    size = \"small\",\n    srcs = [\"client/virtual_gpu_test.py\"],\n    python_version = \"PY3\",\n    tags = [\n        \"no_gpu\",  # b/127386241\n        \"no_windows_gpu\",\n    ],\n    deps = [\n        \":client\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"c_api_util_test\",\n    size = \"small\",\n    srcs = [\"framework/c_api_util_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":c_api_util\",\n        \":framework_test_lib\",\n        \":platform_test\",\n    ],\n)\n\ntf_py_test(\n    name = \"graph_util_test\",\n    size = \"small\",\n    srcs = [\"framework/graph_util_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client\",\n        \":client_testlib\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":state_ops_gen\",\n        \":variable_scope\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"convert_to_constants_test\",\n    size = \"small\",\n    srcs = [\"framework/convert_to_constants_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \"client_testlib\",\n        \"framework_test_lib\",\n        \":convert_to_constants\",\n    ],\n)\n\ntf_py_test(\n    name = \"bfloat16_test\",\n    size = \"small\",\n    srcs = [\"lib/core/bfloat16_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":lib\",\n        \":pywrap_tensorflow\",\n    ],\n)\n\ntf_py_test(\n    name = \"file_io_test\",\n    size = \"small\",\n    srcs = [\"lib/io/file_io_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_windows\"],\n    deps = [\n        \":client_testlib\",\n        \":errors\",\n        \":lib\",\n    ],\n)\n\ntf_py_test(\n    name = \"tf_record_test\",\n    size = \"small\",\n    srcs = [\"lib/io/tf_record_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":errors\",\n        \":lib\",\n        \":util\",\n    ],\n)\n\ntf_py_test(\n    name = \"tf_record_multiprocessing_test\",\n    size = \"small\",\n    srcs = [\"lib/io/tf_record_multiprocessing_test.py\"],\n    python_version = \"PY3\",\n    tags = [\n        # multiprocessing can be flaky in the internal google\n        # environment, so we disable it there.\n        \"notap\",\n        # The multiprocessing module behaves differently on\n        # windows, so we disable this test on windows.\n        \"no_windows\",\n    ],\n    deps = [\n        \":client_testlib\",\n        \":errors\",\n        \":lib\",\n        \":util\",\n    ],\n)\n\ncuda_py_test(\n    name = \"adam_test\",\n    size = \"small\",\n    srcs = [\"training/adam_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework\",\n        \":math_ops\",\n        \":platform\",\n        \":platform_test\",\n        \":training\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"moving_averages_test\",\n    size = \"small\",\n    srcs = [\n        \"training/moving_averages_test.py\",\n    ],\n    python_version = \"PY3\",\n    tags = [\n        \"no_windows\",  # b/139083295: bfloat16 tests fail on Windows\n        \"notsan\",\n    ],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":constant_op\",\n        \":dtypes\",\n        \":framework_for_generated_wrappers\",\n        \":framework_ops\",\n        \":training\",\n        \":variable_scope\",\n        \":variables\",\n    ],\n)\n\ncuda_py_tests(\n    name = \"training_tests\",\n    size = \"medium\",\n    srcs = [\n        \"training/adadelta_test.py\",\n        \"training/adagrad_da_test.py\",\n        \"training/adagrad_test.py\",\n        \"training/basic_loops_test.py\",\n        \"training/coordinator_test.py\",\n        \"training/device_setter_test.py\",\n        \"training/ftrl_test.py\",\n        \"training/gradient_descent_test.py\",\n        \"training/learning_rate_decay_test.py\",\n        \"training/momentum_test.py\",\n        \"training/optimizer_test.py\",\n        \"training/proximal_adagrad_test.py\",\n        \"training/proximal_gradient_descent_test.py\",\n        \"training/quantize_training_test.py\",\n        \"training/queue_runner_test.py\",\n        \"training/rmsprop_test.py\",\n        \"training/slot_creator_test.py\",\n        \"training/tensorboard_logging_test.py\",\n        \"training/training_ops_test.py\",\n    ],\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":data_flow_ops\",\n        \":data_flow_ops_gen\",\n        \":embedding_ops\",\n        \":errors\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":gradients\",\n        \":lookup_ops\",\n        \":math_ops\",\n        \":nn_grad\",\n        \":nn_ops\",\n        \":partitioned_variables\",\n        \":platform\",\n        \":platform_test\",\n        \":pywrap_tensorflow\",\n        \":random_ops\",\n        \":resource_variable_ops\",\n        \":resources\",\n        \":sparse_ops\",\n        \":state_ops\",\n        \":state_ops_gen\",\n        \":summary\",\n        \":training\",\n        \":util\",\n        \":variable_scope\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"saver_test_utils\",\n    srcs = [\"training/saver_test_utils.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":lookup_ops_gen\",\n        \":training\",\n    ],\n)\n\ncuda_py_test(\n    name = \"saver_test\",\n    size = \"medium\",\n    srcs = [\n        \"training/saver_test.py\",\n    ],\n    python_version = \"PY3\",\n    tags = [\"multi_gpu\"],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":data_flow_ops\",\n        \":errors\",\n        \":gradients\",\n        \":math_ops\",\n        \":nn_grad\",\n        \":nn_ops\",\n        \":partitioned_variables\",\n        \":platform\",\n        \":platform_test\",\n        \":py_checkpoint_reader\",\n        \":random_ops\",\n        \":resource_variable_ops\",\n        \":saver_test_utils\",\n        \":sparse_ops\",\n        \":summary\",\n        \":training\",\n        \":util\",\n        \":variable_scope\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/data/ops:dataset_ops\",\n        \"//third_party/py/numpy\",\n        \"@six_archive//:six\",\n    ],\n)\n\ncuda_py_test(\n    name = \"checkpoint_management_test\",\n    size = \"small\",\n    srcs = [\n        \"training/checkpoint_management_test.py\",\n    ],\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":data_flow_ops\",\n        \":errors\",\n        \":gradients\",\n        \":math_ops\",\n        \":nn_grad\",\n        \":nn_ops\",\n        \":partitioned_variables\",\n        \":platform\",\n        \":platform_test\",\n        \":pywrap_tensorflow\",\n        \":random_ops\",\n        \":resource_variable_ops\",\n        \":saver_test_utils\",\n        \":sparse_ops\",\n        \":summary\",\n        \":training\",\n        \":util\",\n        \":variable_scope\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/data/ops:dataset_ops\",\n        \"//third_party/py/numpy\",\n        \"@six_archive//:six\",\n    ],\n)\n\ntf_py_test(\n    name = \"saver_large_variable_test\",\n    size = \"medium\",\n    srcs = [\"training/saver_large_variable_test.py\"],\n    python_version = \"PY3\",\n    tags = [\n        \"manual\",\n        \"noasan\",  # http://b/30379628\n        \"notsan\",  # http://b/30379628\n    ],\n    deps = [\n        \":client\",\n        \":client_testlib\",\n        \":errors\",\n        \":framework_for_generated_wrappers\",\n        \":training\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"saver_large_partitioned_variable_test\",\n    size = \"medium\",\n    srcs = [\"training/saver_large_partitioned_variable_test.py\"],\n    python_version = \"PY3\",\n    tags = [\n        \"noasan\",  # http://b/30782289\n        \"notsan\",  # http://b/30782289\n    ],\n    deps = [\n        \":client\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":partitioned_variables\",\n        \":training\",\n        \":variables\",\n    ],\n)\n\ncuda_py_test(\n    name = \"session_manager_test\",\n    size = \"medium\",  # TODO(irving): Can this be made small?\n    srcs = [\"training/session_manager_test.py\"],\n    grpc_enabled = True,\n    main = \"training/session_manager_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":errors\",\n        \":framework_for_generated_wrappers\",\n        \":platform\",\n        \":training\",\n        \":variables\",\n    ],\n)\n\ntf_py_test(\n    name = \"supervisor_test\",\n    size = \"small\",\n    srcs = [\"training/supervisor_test.py\"],\n    grpc_enabled = True,\n    python_version = \"PY3\",\n    tags = [\"no_windows\"],\n    deps = [\n        \":array_ops\",\n        \":checkpoint_management\",\n        \":client_testlib\",\n        \":errors\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":io_ops\",\n        \":parsing_ops\",\n        \":platform\",\n        \":saver\",\n        \":summary\",\n        \":training\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"basic_session_run_hooks_test\",\n    size = \"medium\",\n    srcs = [\"training/basic_session_run_hooks_test.py\"],\n    python_version = \"PY3\",\n    tags = [\n        \"no_pip\",  # Relies on contrib\n        \"no_windows\",\n        \"notsan\",  # intermittent races on a few percent of runs\n    ],\n    deps = [\n        \":client\",\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":fake_summary_writer\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":nn_grad\",\n        \":platform\",\n        \":state_ops\",\n        \":summary\",\n        \":training\",\n        \":variable_scope\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"checkpoint_utils_test\",\n    size = \"small\",\n    srcs = [\"training/checkpoint_utils_test.py\"],\n    python_version = \"PY3\",\n    tags = [\n        \"manual\",\n        \"no_cuda_on_cpu_tap\",\n        \"no_oss\",\n        \"no_windows\",\n        \"notap\",\n    ],\n    deps = [\n        \":client\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":io_ops\",\n        \":partitioned_variables\",\n        \":platform\",\n        \":resource_variable_ops\",\n        \":state_ops\",\n        \":training\",\n        \":variable_scope\",\n        \":variables\",\n    ],\n)\n\ntf_py_test(\n    name = \"checkpoint_ops_test\",\n    size = \"small\",\n    srcs = [\"training/checkpoint_ops_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":checkpoint_ops_gen\",\n        \":client\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":io_ops\",\n        \":partitioned_variables\",\n        \":platform\",\n        \":pywrap_tensorflow\",\n        \":state_ops\",\n        \":training\",\n        \":variable_scope\",\n        \":variables\",\n    ],\n)\n\ntf_py_test(\n    name = \"warm_starting_util_test\",\n    size = \"medium\",\n    srcs = [\"training/warm_starting_util_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":init_ops\",\n        \":training\",\n        \":variable_scope\",\n        \":variables\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"monitored_session_test\",\n    size = \"medium\",\n    srcs = [\"training/monitored_session_test.py\"],\n    tags = [\n        \"no_pip\",\n        \"notsan\",  # b/67945581\n    ],\n    deps = [\n        \":array_ops\",\n        \":checkpoint_management\",\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":errors\",\n        \":framework_for_generated_wrappers\",\n        \":resource_variable_ops\",\n        \":saver\",\n        \":session\",\n        \":state_ops\",\n        \":summary\",\n        \":training\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/distribute:collective_all_reduce_strategy\",\n        \"//tensorflow/python/distribute:distribute_coordinator\",\n    ],\n)\n\npy_library(\n    name = \"training_util\",\n    srcs = [\"training/training_util.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":dtypes\",\n        \":framework\",\n        \":framework_ops\",\n        \":init_ops\",\n        \":platform\",\n        \":resource_variable_ops\",\n        \":state_ops\",\n        \":util\",\n        \":variable_scope\",\n        \":variables\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\ntf_py_test(\n    name = \"training_util_test\",\n    size = \"small\",\n    srcs = [\"training/training_util_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":framework\",\n        \":platform\",\n        \":training\",\n        \":training_util\",\n        \":variables\",\n    ],\n)\n\ntf_py_test(\n    name = \"input_test\",\n    size = \"medium\",\n    srcs = [\"training/input_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":errors\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":platform\",\n        \":training\",\n        \":util\",\n        \":variables\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"summary_op_util\",\n    srcs = [\"ops/summary_op_util.py\"],\n    srcs_version = \"PY2AND3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":platform\",\n    ],\n)\n\npy_library(\n    name = \"summary\",\n    srcs = glob(\n        [\"summary/**/*.py\"],\n        exclude = [\n            \"**/fake*\",\n            \"**/*test*\",\n        ],\n    ),\n    srcs_version = \"PY2AND3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":client\",\n        \":constant_op\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":lib\",\n        \":logging_ops_gen\",\n        \":platform\",\n        \":protos_all_py\",\n        \":pywrap_tensorflow\",\n        \":summary_op_util\",\n        \":summary_ops_gen\",\n        \":summary_ops_v2\",\n        \":util\",\n        \"//tensorflow/python/distribute:summary_op_util\",\n        \"//tensorflow/python/eager:context\",\n        \"@six_archive//:six\",\n    ],\n)\n\npy_library(\n    name = \"fake_summary_writer\",\n    testonly = 1,\n    srcs = [\"summary/writer/fake_summary_writer.py\"],\n    srcs_version = \"PY2AND3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":framework_test_lib\",\n        \":protos_all_py\",\n        \":summary\",\n    ],\n)\n\npy_tests(\n    name = \"summary_tests\",\n    size = \"small\",\n    srcs = [\n        \"summary/plugin_asset_test.py\",\n        \"summary/summary_test.py\",\n        \"summary/writer/writer_test.py\",\n    ],\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":platform\",\n        \":platform_test\",\n        \":summary\",\n        \":summary_ops_v2\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"layers_base\",\n    srcs = [\n        \"layers/__init__.py\",\n        \"layers/base.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":control_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":layers_util\",\n        \":platform\",\n        \":smart_cond\",\n        \":tensor_util\",\n        \":util\",\n        \":variable_scope\",\n        \":variables\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/keras:engine\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"layers_util\",\n    srcs = [\n        \"layers/utils.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":control_flow_ops\",\n        \":smart_cond\",\n        \":util\",\n        \":variables\",\n    ],\n)\n\npy_library(\n    name = \"layers\",\n    srcs = [\n        \"layers/convolutional.py\",\n        \"layers/core.py\",\n        \"layers/layers.py\",\n        \"layers/normalization.py\",\n        \"layers/pooling.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":array_ops_gen\",\n        \":control_flow_ops\",\n        \":framework\",\n        \":framework_for_generated_wrappers\",\n        \":init_ops\",\n        \":layers_base\",\n        \":math_ops\",\n        \":nn\",\n        \":nn_ops\",\n        \":platform\",\n        \":resource_variable_ops\",\n        \":resource_variable_ops_gen\",\n        \":standard_ops\",\n        \":state_ops\",\n        \":training\",\n        \":util\",\n        \":variable_scope\",\n        \":variables\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/keras:layers\",\n        \"//third_party/py/numpy\",\n        \"@six_archive//:six\",\n    ],\n)\n\ntf_py_test(\n    name = \"layers_base_test\",\n    size = \"small\",\n    srcs = [\"layers/base_test.py\"],\n    main = \"layers/base_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":init_ops\",\n        \":layers\",\n        \":layers_base\",\n        \":math_ops\",\n        \":random_ops\",\n        \":variable_scope\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\ntf_py_test(\n    name = \"layers_core_test\",\n    size = \"small\",\n    srcs = [\"layers/core_test.py\"],\n    main = \"layers/core_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":layers\",\n        \":math_ops\",\n        \":nn_ops\",\n        \":random_ops\",\n        \":variable_scope\",\n        \":variables\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"layers_convolutional_test\",\n    size = \"small\",\n    srcs = [\"layers/convolutional_test.py\"],\n    main = \"layers/convolutional_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":layers\",\n        \":math_ops\",\n        \":nn_ops\",\n        \":random_ops\",\n    ],\n)\n\ntf_py_test(\n    name = \"layers_utils_test\",\n    size = \"small\",\n    srcs = [\"layers/utils_test.py\"],\n    main = \"layers/utils_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":layers\",\n    ],\n)\n\ntf_py_test(\n    name = \"layers_pooling_test\",\n    size = \"small\",\n    srcs = [\"layers/pooling_test.py\"],\n    main = \"layers/pooling_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":framework_test_lib\",\n        \":layers\",\n        \":random_ops\",\n    ],\n)\n\ncuda_py_test(\n    name = \"layers_normalization_test\",\n    size = \"medium\",\n    srcs = [\"layers/normalization_test.py\"],\n    main = \"layers/normalization_test.py\",\n    python_version = \"PY3\",\n    shard_count = 10,\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":layers\",\n        \":math_ops\",\n        \":random_ops\",\n        \":variables\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\n# -----------------------------------------------------------------------------\n# Quantization\n\ntf_py_test(\n    name = \"dequantize_op_test\",\n    size = \"small\",\n    srcs = [\"ops/dequantize_op_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_windows\"],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"quantized_ops_test\",\n    size = \"small\",\n    srcs = [\"ops/quantized_ops_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_windows\"],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"quantized_conv_ops_test\",\n    size = \"small\",\n    srcs = [\"ops/quantized_conv_ops_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_windows\"],\n    deps = [\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":nn_ops\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_test(\n    name = \"ops/array_ops_test\",\n    srcs = [\"ops/array_ops_test.py\"],\n    python_version = \"PY3\",\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":constant_op\",\n        \":dtypes\",\n        \":framework_ops\",\n        \":framework_test_lib\",\n        \":gradients\",\n        \":math_ops\",\n        \":random_ops\",\n    ],\n)\n\ncuda_py_test(\n    name = \"accumulate_n_benchmark\",\n    size = \"medium\",\n    srcs = [\"ops/accumulate_n_benchmark.py\"],\n    main = \"ops/accumulate_n_benchmark.py\",\n    python_version = \"PY3\",\n    shard_count = 6,\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":control_flow_ops_gen\",\n        \":data_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":random_ops\",\n        \":state_ops\",\n        \":state_ops_gen\",\n    ],\n)\n\ncuda_py_test(\n    name = \"batch_norm_benchmark\",\n    srcs = [\"ops/batch_norm_benchmark.py\"],\n    main = \"ops/batch_norm_benchmark.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":gradients\",\n        \":math_ops\",\n        \":nn\",\n        \":nn_grad\",\n        \":nn_ops_gen\",\n        \":platform\",\n        \":random_ops\",\n        \":variables\",\n    ],\n)\n\ncuda_py_test(\n    name = \"collective_ops_benchmark\",\n    srcs = [\"ops/collective_ops_benchmark.py\"],\n    main = \"ops/collective_ops_benchmark.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":collective_ops\",\n        \":framework_for_generated_wrappers\",\n        \":platform\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ncuda_py_test(\n    name = \"concat_benchmark\",\n    srcs = [\"ops/concat_benchmark.py\"],\n    main = \"ops/concat_benchmark.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":gradients\",\n        \":platform\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ncuda_py_test(\n    name = \"control_flow_ops_benchmark\",\n    srcs = [\"ops/control_flow_ops_benchmark.py\"],\n    main = \"ops/control_flow_ops_benchmark.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":constant_op\",\n        \":control_flow_ops\",\n        \":framework_ops\",\n        \"//tensorflow/python/eager:function\",\n    ],\n)\n\ncuda_py_test(\n    name = \"conv2d_benchmark\",\n    size = \"large\",\n    srcs = [\"ops/conv2d_benchmark.py\"],\n    main = \"ops/conv2d_benchmark.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":client\",\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":nn_ops\",\n        \":platform\",\n        \":platform_benchmark\",\n        \":random_ops\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"split_benchmark\",\n    srcs = [\"ops/split_benchmark.py\"],\n    main = \"ops/split_benchmark.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":platform\",\n        \":platform_benchmark\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"transpose_benchmark\",\n    size = \"medium\",\n    srcs = [\"ops/transpose_benchmark.py\"],\n    main = \"ops/transpose_benchmark.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":platform\",\n        \":platform_benchmark\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"matmul_benchmark\",\n    size = \"medium\",\n    srcs = [\"ops/matmul_benchmark.py\"],\n    main = \"ops/matmul_benchmark.py\",\n    python_version = \"PY3\",\n    deps = [\":matmul_benchmark_main_lib\"],\n)\n\npy_library(\n    name = \"matmul_benchmark_main_lib\",\n    testonly = True,\n    srcs = [\"ops/matmul_benchmark.py\"],\n    deps = [\n        \":client\",\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":framework_for_generated_wrappers\",\n        \":framework_test_lib\",\n        \":math_ops\",\n        \":platform\",\n        \":platform_benchmark\",\n        \":random_ops\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"session_benchmark\",\n    srcs = [\"client/session_benchmark.py\"],\n    grpc_enabled = True,\n    main = \"client/session_benchmark.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":array_ops\",\n        \":client\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":random_ops\",\n        \":training\",\n        \":variables\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"nn_grad_test\",\n    size = \"small\",\n    srcs = [\"ops/nn_grad_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":nn_grad\",\n        \":nn_ops\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"tf_item\",\n    srcs = [\n        \"grappler/item.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":pywrap_tensorflow_internal\",\n        \"//tensorflow/core/grappler/costs:op_performance_data_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"item_test\",\n    size = \"small\",\n    srcs = [\n        \"grappler/item_test.py\",\n    ],\n    python_version = \"PY3\",\n    tags = [\n        \"grappler\",\n        \"no_pip\",  # tf_optimizer is not available in pip.\n    ],\n    deps = [\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":tf_item\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"datasets_test\",\n    size = \"small\",\n    srcs = [\n        \"grappler/datasets_test.py\",\n    ],\n    python_version = \"PY3\",\n    tags = [\n        \"grappler\",\n        \"no_pip\",  # tf_optimizer is not available in pip.\n    ],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_combinations\",\n        \":framework_for_generated_wrappers\",\n        \":tf_item\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/data\",\n    ],\n)\n\npy_library(\n    name = \"tf_cluster\",\n    srcs = [\n        \"grappler/cluster.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":pywrap_tensorflow_internal\",\n        \"//tensorflow/core/grappler/costs:op_performance_data_py\",\n    ],\n)\n\ncuda_py_test(\n    name = \"cluster_test\",\n    size = \"small\",\n    srcs = [\n        \"grappler/cluster_test.py\",\n    ],\n    python_version = \"PY3\",\n    shard_count = 10,\n    tags = [\n        \"grappler\",\n        \"no_pip\",  # tf_optimizer is not available in pip.\n        \"notap\",  # TODO(b/135924227): Re-enable after fixing flakiness.\n    ],\n    # This test will not run on XLA because it primarily tests the TF Classic flow.\n    xla_enable_strict_auto_jit = False,\n    deps = [\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":tf_cluster\",\n        \":tf_item\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"tf_optimizer\",\n    srcs = [\n        \"grappler/tf_optimizer.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":pywrap_tensorflow_internal\",\n        \":tf_cluster\",\n    ],\n)\n\ntf_py_test(\n    name = \"tf_optimizer_test\",\n    size = \"small\",\n    srcs = [\n        \"grappler/tf_optimizer_test.py\",\n    ],\n    python_version = \"PY3\",\n    tags = [\n        \"grappler\",\n        \"no_pip\",  # tf_optimizer is not available in pip.\n    ],\n    deps = [\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":tf_item\",\n        \":tf_optimizer\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"graph_placer\",\n    srcs = [\n        \"grappler/controller.py\",\n        \"grappler/graph_placer.py\",\n        \"grappler/hierarchical_controller.py\",\n    ],\n    deps = [\n        \":python\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"graph_placer_test\",\n    size = \"large\",\n    srcs = [\"grappler/graph_placer_test.py\"],\n    python_version = \"PY3\",\n    tags = [\n        \"grappler\",\n        \"no_pip\",  # graph_placer is not available in pip.\n    ],\n    deps = [\n        \":client_testlib\",\n        \":graph_placer\",\n        \"//tensorflow/python:math_ops\",\n    ],\n)\n\ntf_py_test(\n    name = \"memory_optimizer_test\",\n    size = \"medium\",\n    srcs = [\n        \"grappler/memory_optimizer_test.py\",\n    ],\n    python_version = \"PY3\",\n    tags = [\n        \"grappler\",\n    ],\n    deps = [\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":nn\",\n        \":random_seed\",\n        \":session\",\n        \":tf_optimizer\",\n        \":training\",\n        \":variable_scope\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"constant_folding_test\",\n    size = \"medium\",\n    srcs = [\n        \"grappler/constant_folding_test.py\",\n    ],\n    python_version = \"PY3\",\n    tags = [\n        \"grappler\",\n    ],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":control_flow_ops\",\n        \":dtypes\",\n        \":framework_for_generated_wrappers\",\n        \":functional_ops\",\n        \":math_ops\",\n        \":ops\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\n# TODO(b/131764887) Remove once LayoutOptimizer is swapped out with GenericLayoutOptimizer.\n#\n# cuda_py_test(\n#     name = \"layout_optimizer_test\",\n#     size = \"medium\",\n#     srcs = [\n#         \"grappler/layout_optimizer_test.py\",\n#     ],\n#     deps = [\n#         \":client_testlib\",\n#         \":framework_for_generated_wrappers\",\n#         \":array_ops\",\n#         \":constant_op\",\n#         \":dtypes\",\n#         \":functional_ops\",\n#         \":math_ops\",\n#         \":nn\",\n#         \":ops\",\n#         \":random_ops\",\n#         \":state_ops\",\n#         \":tf_cluster\",\n#         \":tf_optimizer\",\n#         \":training\",\n#         \"//third_party/py/numpy\",\n#         \"//tensorflow/core:protos_all_py\",\n#     ],\n#     shard_count = 10,\n#     tags = [\n#         \"grappler\",\n#     ],\n#     # This test will not run on XLA because it primarily tests the TF Classic flow.\n#     xla_enable_strict_auto_jit = False,\n# )\n\npy_library(\n    name = \"cost_analyzer\",\n    srcs = [\n        \"grappler/cost_analyzer.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":pywrap_tensorflow_internal\",\n        \":tf_cluster\",\n        \":tf_item\",\n    ],\n)\n\npy_binary(\n    name = \"cost_analyzer_tool\",\n    srcs = [\n        \"grappler/cost_analyzer_tool.py\",\n    ],\n    python_version = \"PY3\",\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":cost_analyzer\",\n        \":framework_for_generated_wrappers\",\n        \":tf_optimizer\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"cost_analyzer_test\",\n    size = \"small\",\n    srcs = [\"grappler/cost_analyzer_test.py\"],\n    python_version = \"PY3\",\n    tags = [\n        \"grappler\",\n        \"no_cuda_on_cpu_tap\",\n        \"no_pip\",\n        \"nomac\",\n    ],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":cost_analyzer\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":nn\",\n        \":nn_grad\",\n        \":random_ops\",\n        \":state_ops\",\n        \":training\",\n        \":variables\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"model_analyzer\",\n    srcs = [\n        \"grappler/model_analyzer.py\",\n    ],\n    srcs_version = \"PY2AND3\",\n    deps = [\":_pywrap_model_analyzer\"],\n)\n\ntf_py_test(\n    name = \"model_analyzer_test\",\n    size = \"small\",\n    srcs = [\"grappler/model_analyzer_test.py\"],\n    tags = [\n        \"grappler\",\n        \"no_pip\",\n    ],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":model_analyzer\",\n        \":state_ops\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"auto_mixed_precision_test\",\n    size = \"small\",\n    srcs = [\n        \"grappler/auto_mixed_precision_test.py\",\n    ],\n    python_version = \"PY3\",\n    tags = [\n        \"grappler\",\n        \"no_rocm\",\n    ],\n    # This test analyzes the graph, but XLA changes the names of nodes.\n    xla_enable_strict_auto_jit = False,\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":constant_op\",\n        \":control_flow_ops\",\n        \":dtypes\",\n        \":framework_for_generated_wrappers\",\n        \":math_ops\",\n        \":nn\",\n        \":ops\",\n        \":random_ops\",\n        \":training\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"nccl_ops_gen\",\n    visibility = [\"//tensorflow:internal\"],\n    deps = [\n        \"//tensorflow/core:nccl_ops_op_lib\",\n    ],\n)\n\npy_library(\n    name = \"nccl_ops\",\n    srcs = [\"ops/nccl_ops.py\"],\n    srcs_version = \"PY2AND3\",\n    visibility = visibility + [\n        \"//learning/deepmind/tensorflow:__subpackages__\",\n        \"//third_party/car/deep_nets/tensorflow:__subpackages__\",\n    ],\n    deps = [\n        \":framework_for_generated_wrappers\",\n        \":nccl_ops_gen\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:def_function\",\n    ],\n)\n\ncuda_py_test(\n    name = \"nccl_ops_test\",\n    size = \"small\",\n    srcs = [\"ops/nccl_ops_test.py\"],\n    python_version = \"PY3\",\n    # Disabled on jenkins until errors finding nvmlShutdown are found.\n    tags = [\n        \"manual\",\n        \"multi_gpu\",\n        \"no_oss\",\n        \"noguitar\",\n        \"notap\",\n    ],\n    deps = [\n        \":array_ops\",\n        \":client_testlib\",\n        \":framework_test_lib\",\n        \":nccl_ops\",\n        \":platform_test\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"decode_proto_ops_gen\",\n    deps = [\n        \"//tensorflow/core:decode_proto_ops_op_lib\",\n    ],\n)\n\ntf_gen_op_wrapper_private_py(\n    name = \"encode_proto_ops_gen\",\n    deps = [\n        \"//tensorflow/core:encode_proto_ops_op_lib\",\n    ],\n)\n\npy_library(\n    name = \"proto_ops\",\n    srcs = [\"ops/proto_ops.py\"],\n    deps = [\n        \":decode_proto_ops_gen\",\n        \":encode_proto_ops_gen\",\n        \":framework_ops\",\n    ],\n)\n\npy_library(\n    name = \"pywrap_tfe\",\n    srcs = [\"pywrap_tfe.py\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":_pywrap_tfe\",\n        \":pywrap_tensorflow\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_tfe\",\n    srcs = [\"tfe_wrapper.cc\"],\n    hdrs = [\n        \"lib/core/safe_ptr.h\",\n        \"util/util.h\",\n        \":py_exception_registry_hdr\",\n        \"//tensorflow/c:headers\",\n        \"//tensorflow/c:pywrap_eager_hdrs\",\n        \"//tensorflow/c/eager:headers\",\n        \"//tensorflow/c/eager:pywrap_eager_hdrs\",\n        \"//tensorflow/core/common_runtime/eager:pywrap_eager_hdrs\",\n        \"//tensorflow/core/distributed_runtime:pywrap_eager_hdrs\",\n        \"//tensorflow/core/distributed_runtime/eager:pywrap_eager_hdrs\",\n        \"//tensorflow/core/framework:pywrap_eager_hdrs\",\n        \"//tensorflow/core/profiler/internal:pywrap_eager_hdrs\",\n        \"//tensorflow/core/profiler/lib:pywrap_eager_hdrs\",\n        \"//tensorflow/python/eager:pywrap_eager_hdrs\",\n    ],\n    module_name = \"_pywrap_tfe\",\n    deps = [\n        \":pybind11_lib\",\n        \":pybind11_status\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/hash\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:optional\",\n        \"@pybind11\",\n        \"//third_party/python_runtime:headers\",\n        \"//tensorflow/core:core_cpu_headers_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/platform:platform\",\n        \"//tensorflow/core/profiler/protobuf:xplane_proto_cc\",\n    ] + if_static(\n        extra_deps = [\n            \"//tensorflow/core:eager_service_proto_cc\",\n            \"//tensorflow/core:master_proto_cc\",\n            \"//tensorflow/core:worker_proto_cc\",\n        ],\n        otherwise = [\n            \"//tensorflow/core:eager_service_proto_cc_headers_only\",\n            \"//tensorflow/core:master_proto_cc_headers_only\",\n            \"//tensorflow/core:worker_proto_cc_headers_only\",\n        ],\n    ),\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_graph_analyzer\",\n    srcs = [\"grappler/graph_analyzer_tool_wrapper.cc\"],\n    module_name = \"_pywrap_graph_analyzer\",\n    deps = [\n        \"//tensorflow/core/grappler/graph_analyzer:graph_analyzer_tool\",\n        \"@pybind11\",\n    ],\n)\n\npy_binary(\n    name = \"graph_analyzer\",\n    srcs = [\n        \"grappler/graph_analyzer.py\",\n    ],\n    python_version = \"PY3\",\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":_pywrap_graph_analyzer\",\n        \":framework_for_generated_wrappers\",\n    ],\n)\n\npyx_library(\n    name = \"framework_fast_tensor_util\",\n    srcs = [\"framework/fast_tensor_util.pyx\"],\n    py_deps = [\"//tensorflow/python:util\"],\n    deps = [\"//third_party/py/numpy:headers\"],\n)\n\npy_library(\n    name = \"tf2\",\n    srcs = [\"tf2.py\"],\n    srcs_version = \"PY2AND3\",\n)\n\npy_test(\n    name = \"tf2_test\",\n    srcs = [\"framework/tf2_test.py\"],\n    python_version = \"PY3\",\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":client_testlib\",\n        \":framework_combinations\",\n        \":tf2\",\n    ],\n)\n\ncuda_py_test(\n    name = \"raw_ops_test\",\n    srcs = [\"ops/raw_ops_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \"//tensorflow/python:client_testlib\",\n    ],\n)"