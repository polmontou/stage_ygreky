"diff --git a/tensorflow/lite/model_test.cc b/tensorflow/lite/model_test.cc\nindex 59ba00652e4..1dbe5c12abc 100644\n--- a/tensorflow/lite/model_test.cc\n+++ b/tensorflow/lite/model_test.cc\n@@ -600,6 +600,25 @@ TEST(BasicFlatBufferModel, TestHandleMalformedModelReuseTensor) {\n   ASSERT_NE(interpreter->AllocateTensors(), kTfLiteOk);\n }\n \n+// Recursion & reentrant are not supported in TFLite.\n+// The test ensures it fails gracefullly instead of crashing with\n+// a stack overflow.\n+TEST(BasicFlatBufferModel, TestUnsupportedRecursion) {\n+  const auto model_path =\n+      \"tensorflow/lite/testdata/unsupported_recursion.bin\";\n+\n+  std::unique_ptr<tflite::FlatBufferModel> model =\n+      FlatBufferModel::BuildFromFile(model_path);\n+  ASSERT_NE(model, nullptr);\n+\n+  tflite::ops::builtin::BuiltinOpResolver resolver;\n+  InterpreterBuilder builder(*model, resolver);\n+  std::unique_ptr<Interpreter> interpreter;\n+  ASSERT_EQ(builder(&interpreter), kTfLiteOk);\n+  ASSERT_NE(interpreter, nullptr);\n+  ASSERT_NE(interpreter->AllocateTensors(), kTfLiteOk);\n+}\n+\n // The models here have a buffer index for a tensor pointing to a null buffer.\n // This results in the tensor being interpreted as read-write, but the model\n // assumes the tensor is read-only. As such, `interpreter->Invoke()` would"