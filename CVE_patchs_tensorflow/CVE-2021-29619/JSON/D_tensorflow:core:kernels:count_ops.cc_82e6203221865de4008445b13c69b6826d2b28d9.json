"diff --git a/tensorflow/core/kernels/count_ops.cc b/tensorflow/core/kernels/count_ops.cc\nindex 087deef0812..d6ab68c2c70 100644\n--- a/tensorflow/core/kernels/count_ops.cc\n+++ b/tensorflow/core/kernels/count_ops.cc\n@@ -192,6 +192,10 @@ class SparseCount : public OpKernel {\n               \"; values shape: \", values.shape().DebugString()));\n     }\n \n+    OP_REQUIRES(context, shape.NumElements() != 0,\n+                errors::InvalidArgument(\n+                    \"The shape argument requires at least one element.\"));\n+\n     bool is_1d = shape.NumElements() == 1;\n     int num_batches = is_1d ? 1 : shape.flat<int64>()(0);\n     int num_values = values.NumElements();\n@@ -212,6 +216,14 @@ class SparseCount : public OpKernel {\n \n     for (int idx = 0; idx < num_values; ++idx) {\n       int batch = is_1d ? 0 : indices_values(idx, 0);\n+      if (batch >= num_batches) {\n+        OP_REQUIRES(context, batch < num_batches,\n+                    errors::InvalidArgument(\n+                        \"Indices value along the first dimension must be \",\n+                        \"lower than the first index of the shape.\", \"Got \",\n+                        batch, \" as batch and \", num_batches,\n+                        \" as the first dimension of the shape.\"));\n+      }\n       const auto& value = values_values(idx);\n       if (value >= 0 && (maxlength_ <= 0 || value < maxlength_)) {\n         if (binary_output_) {"