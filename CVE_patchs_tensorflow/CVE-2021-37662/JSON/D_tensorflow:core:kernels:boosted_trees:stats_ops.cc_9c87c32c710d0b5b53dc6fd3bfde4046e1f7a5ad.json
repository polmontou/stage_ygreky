"diff --git a/tensorflow/core/kernels/boosted_trees/stats_ops.cc b/tensorflow/core/kernels/boosted_trees/stats_ops.cc\nindex f3449daef78..014c2ec22c9 100644\n--- a/tensorflow/core/kernels/boosted_trees/stats_ops.cc\n+++ b/tensorflow/core/kernels/boosted_trees/stats_ops.cc\n@@ -51,6 +51,16 @@ class BoostedTreesCalculateBestGainsPerFeatureOp : public OpKernel {\n     // node_id_range\n     const Tensor* node_id_range_t;\n     OP_REQUIRES_OK(context, context->input(\"node_id_range\", &node_id_range_t));\n+    OP_REQUIRES(\n+        context, node_id_range_t->dims() == 1,\n+        errors::InvalidArgument(\"node_id_range must be a rank 1 tensor, but \"\n+                                \"given node_id_range has dims of \",\n+                                node_id_range_t->dims()));\n+    OP_REQUIRES(context, node_id_range_t->dim_size(0) == 2,\n+                errors::InvalidArgument(\n+                    \"node_id_range must be a rank 1 tensor with shape=[2], but \"\n+                    \"given node_id_range has shape \",\n+                    node_id_range_t->dim_size(0), \" on its first dim\"));\n     const auto node_id_range = node_id_range_t->vec<int32>();\n     const int32_t node_id_first = node_id_range(0);  // inclusive\n     const int32_t node_id_last = node_id_range(1);   // exclusive\n@@ -570,6 +580,16 @@ class BoostedTreesCalculateBestFeatureSplitV2 : public OpKernel {\n     const Tensor* node_id_range_t;\n     OP_REQUIRES_OK(context, context->input(\"node_id_range\", &node_id_range_t));\n     const auto node_id_range = node_id_range_t->vec<int32>();\n+    OP_REQUIRES(\n+        context, node_id_range_t->dims() == 1,\n+        errors::InvalidArgument(\"node_id_range must be a rank 1 tensor, but \"\n+                                \"given node_id_range has dims of \",\n+                                node_id_range_t->dims()));\n+    OP_REQUIRES(context, node_id_range_t->dim_size(0) == 2,\n+                errors::InvalidArgument(\n+                    \"node_id_range must be a rank 1 tensor with shape=[2], but \"\n+                    \"given node_id_range has shape \",\n+                    node_id_range_t->dim_size(0), \" on its first dim\"));\n     const int32_t node_id_first = node_id_range(0);  // Inclusive.\n     const int32_t node_id_last = node_id_range(1);   // Exclusive.\n "