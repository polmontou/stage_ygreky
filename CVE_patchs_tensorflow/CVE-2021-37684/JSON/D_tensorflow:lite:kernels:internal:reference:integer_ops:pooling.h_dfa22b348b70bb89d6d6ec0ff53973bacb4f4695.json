"diff --git a/tensorflow/lite/kernels/internal/reference/integer_ops/pooling.h b/tensorflow/lite/kernels/internal/reference/integer_ops/pooling.h\nindex 17944bc47dd..2cb4dada8a6 100644\n--- a/tensorflow/lite/kernels/internal/reference/integer_ops/pooling.h\n+++ b/tensorflow/lite/kernels/internal/reference/integer_ops/pooling.h\n@@ -21,7 +21,7 @@ limitations under the License.\n namespace tflite {\n namespace reference_integer_ops {\n \n-inline void AveragePool(const PoolParams& params,\n+inline bool AveragePool(const PoolParams& params,\n                         const RuntimeShape& input_shape,\n                         const int8_t* input_data,\n                         const RuntimeShape& output_shape, int8_t* output_data) {\n@@ -66,6 +66,7 @@ inline void AveragePool(const PoolParams& params,\n               filter_count++;\n             }\n           }\n+          if (filter_count == 0) return false;\n           // Round to the closest integer value.\n           acc = acc > 0 ? (acc + filter_count / 2) / filter_count\n                         : (acc - filter_count / 2) / filter_count;\n@@ -77,6 +78,7 @@ inline void AveragePool(const PoolParams& params,\n       }\n     }\n   }\n+  return true;\n }\n \n inline void MaxPool(const PoolParams& params, const RuntimeShape& input_shape,\n@@ -136,7 +138,7 @@ inline void MaxPool(const PoolParams& params, const RuntimeShape& input_shape,\n   }\n }\n \n-inline void AveragePool(const PoolParams& params,\n+inline bool AveragePool(const PoolParams& params,\n                         const RuntimeShape& input_shape,\n                         const int16_t* input_data,\n                         const RuntimeShape& output_shape,\n@@ -182,6 +184,7 @@ inline void AveragePool(const PoolParams& params,\n               filter_count++;\n             }\n           }\n+          if (filter_count == 0) return false;\n           // Round to the closest integer value.\n           acc = acc > 0 ? (acc + filter_count / 2) / filter_count\n                         : (acc - filter_count / 2) / filter_count;\n@@ -193,6 +196,7 @@ inline void AveragePool(const PoolParams& params,\n       }\n     }\n   }\n+  return true;\n }\n \n inline void MaxPool(const PoolParams& params, const RuntimeShape& input_shape,"