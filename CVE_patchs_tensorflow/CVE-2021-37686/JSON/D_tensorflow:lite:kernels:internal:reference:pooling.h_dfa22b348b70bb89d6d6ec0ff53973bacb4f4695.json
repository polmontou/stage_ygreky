"diff --git a/tensorflow/lite/kernels/internal/reference/pooling.h b/tensorflow/lite/kernels/internal/reference/pooling.h\nindex 0872f5210c8..ee30b840446 100644\n--- a/tensorflow/lite/kernels/internal/reference/pooling.h\n+++ b/tensorflow/lite/kernels/internal/reference/pooling.h\n@@ -23,7 +23,7 @@ limitations under the License.\n namespace tflite {\n namespace reference_ops {\n \n-inline void AveragePool(const PoolParams& params,\n+inline bool AveragePool(const PoolParams& params,\n                         const RuntimeShape& input_shape,\n                         const float* input_data,\n                         const RuntimeShape& output_shape, float* output_data) {\n@@ -66,6 +66,7 @@ inline void AveragePool(const PoolParams& params,\n               filter_count++;\n             }\n           }\n+          if (filter_count == 0) return false;\n           const float average = total / filter_count;\n           output_data[Offset(output_shape, batch, out_y, out_x, channel)] =\n               ActivationFunctionWithMinMax(average, params.float_activation_min,\n@@ -74,9 +75,10 @@ inline void AveragePool(const PoolParams& params,\n       }\n     }\n   }\n+  return true;\n }\n \n-inline void AveragePool(const PoolParams& params,\n+inline bool AveragePool(const PoolParams& params,\n                         const RuntimeShape& input_shape,\n                         const uint8_t* input_data,\n                         const RuntimeShape& output_shape,\n@@ -122,6 +124,7 @@ inline void AveragePool(const PoolParams& params,\n               filter_count++;\n             }\n           }\n+          if (filter_count == 0) return false;\n           acc = (acc + filter_count / 2) / filter_count;\n           acc = std::max(acc, params.quantized_activation_min);\n           acc = std::min(acc, params.quantized_activation_max);\n@@ -131,6 +134,7 @@ inline void AveragePool(const PoolParams& params,\n       }\n     }\n   }\n+  return true;\n }\n \n inline void L2Pool(const PoolParams& params, const RuntimeShape& input_shape,"