"diff --git a/tensorflow/core/util/tensor_slice_reader_test.cc b/tensorflow/core/util/tensor_slice_reader_test.cc\nindex 53993862385..efb2d9d9748 100644\n--- a/tensorflow/core/util/tensor_slice_reader_test.cc\n+++ b/tensorflow/core/util/tensor_slice_reader_test.cc\n@@ -459,6 +459,33 @@ TEST(TensorSliceReaderTest, InvalidTensorSlice) {\n   EXPECT_FALSE(reader.status().ok());\n }\n \n+TEST(TensorSliceReaderTest, MissingTensorData) {\n+  const string fname =\n+      io::JoinPath(testing::TmpDir(), \"missing_data_checkpoint\");\n+  TensorSliceWriter writer(fname, CreateTableTensorSliceBuilder);\n+  const int32 data[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};\n+  TF_ASSERT_OK(writer.Add(\"test\", TensorShape({4, 5}),\n+                          TensorSlice::ParseOrDie(\"0,2:-\"), data));\n+  TF_ASSERT_OK(writer.Finish());\n+\n+  MutateSavedTensorSlices(fname, [&](SavedTensorSlices sts) {\n+    if (sts.has_data()) {\n+      // Replace the data with only 4 elements.\n+      Fill(data, 4, sts.mutable_data()->mutable_data());\n+    }\n+    return sts.SerializeAsString();\n+  });\n+\n+  TensorSliceReader reader(fname, OpenTableTensorSliceReader);\n+  TF_ASSERT_OK(reader.status());\n+\n+  // The tensor should be present, but loading it should fail due to the missing\n+  // data.\n+  EXPECT_TRUE(reader.HasTensor(\"test\", nullptr, nullptr));\n+  std::unique_ptr<Tensor> tensor;\n+  EXPECT_FALSE(reader.GetTensor(\"test\", &tensor).ok());\n+}\n+\n void CachedTensorSliceReaderTesterHelper(\n     const TensorSliceWriter::CreateBuilderFunction& create_function,\n     const TensorSliceReader::OpenTableFunction& open_function) {"