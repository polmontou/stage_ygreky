"load(\n    \"//tensorflow/core/platform:build_config.bzl\",\n    \"tf_kernel_tests_linkstatic\",\n    \"tf_proto_library\",\n    \"tf_pyclif_proto_library\",\n)\nload(\n    \"//tensorflow:tensorflow.bzl\",\n    \"tf_cc_test\",\n    \"tf_cc_tests\",\n    \"tf_copts\",\n    \"tf_cuda_library\",\n)\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"filegroup\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"tf_cuda_cc_test\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"tf_generate_proto_text_sources\")\n\n# buildifier: disable=same-origin-load\nload(\n    \"//tensorflow/core/platform:build_config_root.bzl\",\n    \"if_static\",\n    \"tf_cuda_tests_tags\",\n)\nload(\n    \"//tensorflow/core/platform:rules_cc.bzl\",\n    \"cc_library\",\n)\n\npackage(\n    default_visibility = [\n        \"//tensorflow/core:__subpackages__\",\n        \"//tensorflow/security/fuzzing:__subpackages__\",\n    ],\n    licenses = [\"notice\"],\n)\n\n# Export all header files for which we do not yet provide a dedicated build\n# rule. This avoids breaking all the rules in tensorflow/core/BUILD.\nexports_files(\n    srcs = [\n        \"allocator_registry.h\",\n        \"cancellation.h\",\n        \"collective.h\",\n        \"control_flow.h\",\n        \"dataset.h\",\n        \"dataset_stateful_op_allowlist.h\",\n        \"device.h\",\n        \"device_base.h\",\n        \"device_factory.h\",\n        \"function.h\",\n        \"function_handle_cache.h\",\n        \"graph_def_util.h\",\n        \"graph_to_functiondef.h\",\n        \"kernel_def_builder.h\",\n        \"kernel_def_util.h\",\n        \"logging.h\",\n        \"lookup_interface.h\",\n        \"memory_types.h\",\n        \"metrics.h\",\n        \"model.h\",\n        \"node_def_builder.h\",\n        \"numeric_op.h\",\n        \"op_kernel.h\",\n        \"op_requires.h\",\n        \"op_segment.h\",\n        \"ops_util.h\",\n        \"partial_tensor_shape.h\",\n        \"queue_interface.h\",\n        \"reader_interface.h\",\n        \"reader_op_kernel.h\",\n        \"register_types_traits.h\",\n        \"rendezvous.h\",\n        \"resource_mgr.h\",\n        \"resource_op_kernel.h\",\n        \"resource_var.h\",\n        \"rng_alg.h\",\n        \"run_handler.h\",\n        \"run_handler_util.h\",\n        \"session_state.h\",\n        \"shared_ptr_variant.h\",\n        \"stats_aggregator.h\",\n        \"tensor_reference.h\",\n        \"tensor_slice.h\",\n        \"tensor_util.h\",\n        \"thread_factory.h\",\n        \"tracking_allocator.h\",\n        \"versions.h\",\n    ],\n    visibility = [\n        \"//tensorflow/core:__pkg__\",\n        \"//tensorflow/core/common_runtime:__pkg__\",\n    ],\n)\n\n# List of exported test source files that do not yet have local build rules.\nexports_files(\n    srcs = [\n        \"op_gen_lib_test.cc\",\n        \"op_segment_test.cc\",\n        \"run_handler_test.cc\",\n        \"run_handler_util_test.cc\",\n        \"variant_op_copy_test.cc\",\n    ],\n    visibility = [\"//tensorflow/core:__pkg__\"],\n)\n\n# List of exported proto source files.\nexports_files(\n    srcs = [\n        \"allocation_description.proto\",\n        \"api_def.proto\",\n        \"attr_value.proto\",\n        \"cost_graph.proto\",\n        \"dataset_options.proto\",\n        \"device_attributes.proto\",\n        \"full_type.proto\",\n        \"function.proto\",\n        \"graph.proto\",\n        \"graph_transfer_info.proto\",\n        \"kernel_def.proto\",\n        \"log_memory.proto\",\n        \"model.proto\",\n        \"node_def.proto\",\n        \"op_def.proto\",\n        \"reader_base.proto\",\n        \"resource_handle.proto\",\n        \"step_stats.proto\",\n        \"summary.proto\",\n        \"tensor.proto\",\n        \"tensor_description.proto\",\n        \"tensor_shape.proto\",\n        \"tensor_slice.proto\",\n        \"types.proto\",\n        \"variable.proto\",\n        \"versions.proto\",\n    ],\n    visibility = [\n        \"//tensorflow:internal\",\n        \"//tensorflow/core:__pkg__\",\n    ],\n)\n\nexports_files(\n    [\n        \"attr_value_util.h\",\n        \"common_shape_fns.h\",\n        \"kernel_shape_util.h\",\n        \"node_def_util.h\",\n        \"node_properties.h\",\n        \"op.h\",\n        \"op_def_builder.h\",\n        \"full_type_util.h\",\n        \"op_def_util.h\",\n        \"shape_inference.h\",\n    ],\n    visibility = [\"//tensorflow/core:__subpackages__\"],\n)\n\n# The following filegroups are needed since globbing across packages boundaries\n# will just fail silently (see 3rd caveat at\n# https://docs.bazel.build/versions/master/be/functions.html#glob).\n\n# Files needed for core:framework_internal_impl.\nfilegroup(\n    name = \"framework_internal_private_hdrs\",\n    srcs = [\n        \"allocator.h\",\n        \"allocator_registry.h\",\n        \"attr_value_util.h\",\n        \"bfloat16.h\",\n        \"bounds_check.h\",\n        \"cancellation.h\",\n        \"collective.h\",\n        \"common_shape_fns.h\",\n        \"control_flow.h\",\n        \"dataset.h\",\n        \"dataset_stateful_op_allowlist.h\",\n        \"device.h\",\n        \"device_base.h\",\n        \"device_factory.h\",\n        \"full_type_util.h\",\n        \"function.h\",\n        \"function_handle_cache.h\",\n        \"graph_def_util.h\",\n        \"graph_to_functiondef.h\",\n        \"kernel_def_builder.h\",\n        \"kernel_def_util.h\",\n        \"kernel_shape_util.h\",\n        \"local_rendezvous.h\",\n        \"log_memory.h\",\n        \"logging.h\",\n        \"lookup_interface.h\",\n        \"memory_types.h\",\n        \"metrics.h\",\n        \"model.h\",\n        \"node_def_builder.h\",\n        \"node_def_util.h\",\n        \"node_properties.h\",\n        \"numeric_op.h\",\n        \"numeric_types.h\",\n        \"op.h\",\n        \"op_def_builder.h\",\n        \"op_def_util.h\",\n        \"op_kernel.h\",\n        \"op_requires.h\",\n        \"op_segment.h\",\n        \"ops_util.h\",\n        \"partial_tensor_shape.h\",\n        \"queue_interface.h\",\n        \"reader_interface.h\",\n        \"reader_op_kernel.h\",\n        \"register_types.h\",\n        \"register_types_traits.h\",\n        \"rendezvous.h\",\n        \"resource_base.h\",\n        \"resource_handle.h\",\n        \"resource_mgr.h\",\n        \"resource_op_kernel.h\",\n        \"resource_var.h\",\n        \"run_handler.h\",\n        \"run_handler_util.h\",\n        \"session_state.h\",\n        \"shape_inference.h\",\n        \"shared_ptr_variant.h\",\n        \"stats_aggregator.h\",\n        \"tensor.h\",\n        \"tensor_key.h\",\n        \"tensor_reference.h\",\n        \"tensor_shape.h\",\n        \"tensor_slice.h\",\n        \"tensor_types.h\",\n        \"tensor_util.h\",\n        \"thread_factory.h\",\n        \"tracking_allocator.h\",\n        \"type_index.h\",\n        \"type_traits.h\",\n        \"typed_allocator.h\",\n        \"types.h\",\n        \"variant.h\",\n        \"variant_encode_decode.h\",\n        \"variant_op_registry.h\",\n        \"variant_tensor_data.h\",\n        \"versions.h\",\n        \"//tensorflow/core/framework/registration:options.h\",\n        \"//tensorflow/core/framework/registration:registration.h\",\n    ],\n)\n\nfilegroup(\n    name = \"framework_internal_impl_srcs\",\n    srcs = [\n        \"cancellation.cc\",\n        \"collective.cc\",\n        \"dataset.cc\",\n        \"device.cc\",\n        \"device_base.cc\",\n        \"device_factory.cc\",\n        \"function.cc\",\n        \"function_handle_cache.cc\",\n        \"graph_def_util.cc\",\n        \"graph_to_functiondef.cc\",\n        \"kernel_def_builder.cc\",\n        \"kernel_def_util.cc\",\n        \"load_library.cc\",\n        \"local_rendezvous.cc\",\n        \"logging.cc\",\n        \"lookup_interface.cc\",\n        \"memory_types.cc\",\n        \"metrics.cc\",\n        \"model.cc\",\n        \"node_def_builder.cc\",\n        \"op_kernel.cc\",\n        \"op_segment.cc\",\n        \"ops_util.cc\",\n        \"rendezvous.cc\",\n        \"resource_mgr.cc\",\n        \"resource_var.cc\",\n        \"run_handler.cc\",\n        \"run_handler_util.cc\",\n        \"tensor_slice.cc\",\n        \"tensor_util.cc\",\n        \"versions.cc\",\n    ],\n)\n\n# Files needed for core:mobile_srcs_(no|only)_runtime.\nfilegroup(\n    name = \"mobile_srcs_no_runtime\",\n    srcs = [\n        \"allocator.cc\",\n        \"allocator.h\",\n        \"allocator_registry.cc\",\n        \"allocator_registry.h\",\n        \"bfloat16.cc\",\n        \"bfloat16.h\",\n        \"bounds_check.h\",\n        \"cpu_allocator_impl.cc\",\n        \"kernel_shape_util.cc\",\n        \"kernel_shape_util.h\",\n        \"log_memory.cc\",\n        \"log_memory.h\",\n        \"numeric_types.h\",\n        \"op_requires.h\",\n        \"ops_util.cc\",\n        \"ops_util.h\",\n        \"register_types.h\",\n        \"resource_base.h\",\n        \"resource_handle.cc\",\n        \"resource_handle.h\",\n        \"tensor.cc\",\n        \"tensor.h\",\n        \"tensor_key.h\",\n        \"tensor_shape.cc\",\n        \"tensor_shape.h\",\n        \"tensor_types.h\",\n        \"tracking_allocator.cc\",\n        \"tracking_allocator.h\",\n        \"type_index.h\",\n        \"type_traits.h\",\n        \"typed_allocator.cc\",\n        \"typed_allocator.h\",\n        \"types.cc\",\n        \"types.h\",\n        \"variant.cc\",\n        \"variant.h\",\n        \"variant_encode_decode.h\",\n        \"variant_op_registry.cc\",\n        \"variant_op_registry.h\",\n        \"variant_tensor_data.cc\",\n        \"variant_tensor_data.h\",\n    ],\n)\n\nfilegroup(\n    name = \"mobile_srcs_only_runtime\",\n    srcs = [\n        \"attr_value_util.cc\",\n        \"attr_value_util.h\",\n        \"cancellation.cc\",\n        \"cancellation.h\",\n        \"collective.cc\",\n        \"collective.h\",\n        \"common_shape_fns.cc\",\n        \"common_shape_fns.h\",\n        \"control_flow.h\",\n        \"dataset.cc\",\n        \"dataset.h\",\n        \"dataset_stateful_op_allowlist.h\",\n        \"device.cc\",\n        \"device.h\",\n        \"device_base.cc\",\n        \"device_base.h\",\n        \"device_factory.cc\",\n        \"device_factory.h\",\n        \"full_type_util.cc\",\n        \"full_type_util.h\",\n        \"function.cc\",\n        \"function.h\",\n        \"function_handle_cache.cc\",\n        \"function_handle_cache.h\",\n        \"graph_def_util.cc\",\n        \"graph_def_util.h\",\n        \"graph_to_functiondef.cc\",\n        \"graph_to_functiondef.h\",\n        \"kernel_def_builder.cc\",\n        \"kernel_def_builder.h\",\n        \"kernel_def_util.cc\",\n        \"kernel_def_util.h\",\n        \"load_library.cc\",\n        \"local_rendezvous.cc\",\n        \"local_rendezvous.h\",\n        \"logging.cc\",\n        \"logging.h\",\n        \"lookup_interface.cc\",\n        \"lookup_interface.h\",\n        \"memory_types.cc\",\n        \"memory_types.h\",\n        \"metrics.cc\",\n        \"metrics.h\",\n        \"model.cc\",\n        \"model.h\",\n        \"node_def_builder.cc\",\n        \"node_def_builder.h\",\n        \"node_def_util.cc\",\n        \"node_def_util.h\",\n        \"node_properties.cc\",\n        \"node_properties.h\",\n        \"numeric_op.h\",\n        \"op.cc\",\n        \"op.h\",\n        \"op_def_builder.cc\",\n        \"op_def_builder.h\",\n        \"op_def_util.cc\",\n        \"op_def_util.h\",\n        \"op_kernel.cc\",\n        \"op_kernel.h\",\n        \"op_segment.cc\",\n        \"op_segment.h\",\n        \"partial_tensor_shape.h\",\n        \"queue_interface.h\",\n        \"reader_base.cc\",\n        \"reader_base.h\",\n        \"reader_interface.h\",\n        \"reader_op_kernel.h\",\n        \"register_types_traits.h\",\n        \"rendezvous.cc\",\n        \"rendezvous.h\",\n        \"resource_mgr.cc\",\n        \"resource_mgr.h\",\n        \"resource_op_kernel.h\",\n        \"resource_var.cc\",\n        \"resource_var.h\",\n        \"rng_alg.h\",\n        \"run_handler.cc\",\n        \"run_handler.h\",\n        \"run_handler_util.cc\",\n        \"run_handler_util.h\",\n        \"session_state.h\",\n        \"shape_inference.cc\",\n        \"shape_inference.h\",\n        \"stats_aggregator.h\",\n        \"tensor_reference.h\",\n        \"tensor_slice.cc\",\n        \"tensor_slice.h\",\n        \"tensor_util.cc\",\n        \"tensor_util.h\",\n        \"thread_factory.h\",\n        \"versions.cc\",\n        \"versions.h\",\n        \"//tensorflow/core/framework/registration:options.h\",\n        \"//tensorflow/core/framework/registration:registration.h\",\n    ],\n)\n\nfilegroup(\n    name = \"android_test_hdrs\",\n    srcs = [\n        \"fake_input.h\",\n        \"shape_inference_testutil.h\",\n        \"tensor_testutil.h\",\n    ],\n)\n\nfilegroup(\n    name = \"android_test_srcs\",\n    srcs = [\n        \"fake_input.cc\",\n        \":android_test_srcs_no_core\",\n    ],\n)\n\nfilegroup(\n    name = \"android_test_srcs_no_core\",\n    srcs = [\n        \"shape_inference_testutil.cc\",\n        \"tensor_testutil.cc\",\n    ],\n)\n\n# Individual targets. These should be preferred over tensorflow/core:framework\n# whenever possible.\n\n# This is redundant with the \"tensorflow/core:framework\" target. It's useful for\n# applications that want to depend on a minimal subset of TensorFlow (e.g. XLA).\ncc_library(\n    name = \"allocator\",\n    srcs = [\n        \"allocator.cc\",\n        \"allocator_registry.h\",\n        \"tracking_allocator.cc\",\n        \"tracking_allocator.h\",\n    ],\n    hdrs = [\n        \"allocator.h\",\n    ],\n    features = [\"parse_headers\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":numeric_types\",\n        \":type_traits\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:optional\",\n    ] + if_static(\n        extra_deps = [\n            \":allocator_registry_impl\",\n            \"//tensorflow/core/lib/gtl:inlined_vector\",\n            \"//tensorflow/core/lib/strings:strcat\",\n            \"//tensorflow/core/lib/strings:stringprintf\",\n            \"//tensorflow/core/platform:env\",\n            \"//tensorflow/core/platform:env_impl\",\n            \"//tensorflow/core/platform:logging\",\n            \"//tensorflow/core/platform:macros\",\n            \"//tensorflow/core/platform:mutex\",\n            \"//tensorflow/core/platform:platform_port\",\n            \"//tensorflow/core/platform:thread_annotations\",\n            \"//tensorflow/core/platform:types\",\n        ],\n        otherwise = [\n            \"//tensorflow/core:lib\",\n        ],\n    ),\n    alwayslink = 1,\n)\n\n# This target will be included in libtensorflow_framework.so via the\n# framework_internal_impl target.\n# All other dependencies on this target need to go through if_static guard,\n# as otherwise duplicate registration in the registry will cause crashes.\ncc_library(\n    name = \"allocator_registry_impl\",\n    srcs = [\n        \"allocator.h\",\n        \"allocator_registry.cc\",\n        \"allocator_registry.h\",\n        \"cpu_allocator_impl.cc\",\n        \"tracking_allocator.h\",\n    ],\n    visibility = [\"//tensorflow/core:__subpackages__\"],\n    deps = [\n        \":numeric_types\",\n        \":type_traits\",\n        \"//tensorflow/core/lib/gtl:inlined_vector\",\n        \"//tensorflow/core/lib/strings:strcat\",\n        \"//tensorflow/core/lib/strings:stringprintf\",\n        \"//tensorflow/core/platform:logging\",\n        \"//tensorflow/core/platform:macros\",\n        \"//tensorflow/core/platform:mutex\",\n        \"//tensorflow/core/platform:platform_port\",\n        \"//tensorflow/core/platform:thread_annotations\",\n        \"//tensorflow/core/platform:types\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:optional\",\n    ],\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"tensor_testutil\",\n    testonly = 1,\n    srcs = [\"tensor_testutil.cc\"],\n    hdrs = [\"tensor_testutil.h\"],\n    copts = tf_copts(),\n    visibility = [\"//tensorflow:internal\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n    ],\n)\n\ncc_library(\n    name = \"shape_inference_testutil\",\n    testonly = 1,\n    srcs = [\"shape_inference_testutil.cc\"],\n    hdrs = [\"shape_inference_testutil.h\"],\n    copts = tf_copts(),\n    visibility = [\"//tensorflow:internal\"],\n    deps = [\n        \":node_def_proto_cc\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n    ],\n)\n\ncc_library(\n    name = \"reader_base\",\n    srcs = [\"reader_base.cc\"],\n    hdrs = [\"reader_base.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":reader_base_proto_cc\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ncc_library(\n    name = \"op_gen_lib\",\n    srcs = [\"op_gen_lib.cc\"],\n    hdrs = [\"op_gen_lib.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":api_def_proto_cc\",\n        \":attr_value_proto_cc\",\n        \":op_def_proto_cc\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/util/proto:proto_utils\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"fake_input\",\n    testonly = 1,\n    srcs = [\"fake_input.cc\"],\n    hdrs = [\"fake_input.h\"],\n    visibility = [\"//tensorflow:__subpackages__\"],\n    deps = [\n        \":attr_value_proto_cc\",\n        \":op_def_proto_cc\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ncc_library(\n    name = \"function_testlib\",\n    testonly = 1,\n    srcs = [\"function_testlib.cc\"],\n    hdrs = [\"function_testlib.h\"],\n    visibility = [\"//tensorflow/core:__subpackages__\"],\n    deps = [\n        \":function_proto_cc\",\n        \":graph_proto_cc\",\n        \":node_def_proto_cc\",\n        \":tensor_testutil\",\n        \":versions_proto_cc\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ncc_library(\n    name = \"bfloat16\",\n    srcs = [\"bfloat16.cc\"],\n    hdrs = [\"bfloat16.h\"],\n    visibility = [\n        \"//tensorflow/core:__subpackages__\",\n        \"//tensorflow/security/fuzzing:__subpackages__\",\n    ],\n    deps = [\n        \":numeric_types\",\n        \"//tensorflow/core/platform:byte_order\",\n        \"//tensorflow/core/platform:types\",\n        \"//third_party/eigen3\",\n    ],\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"numeric_types\",\n    hdrs = [\"numeric_types.h\"],\n    visibility = [\n        \"//tensorflow/compiler:__subpackages__\",\n        \"//tensorflow/core:__subpackages__\",\n    ],\n    deps = [\n        \"//tensorflow/core/platform:types\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"bounds_check\",\n    hdrs = [\"bounds_check.h\"],\n    visibility = [\"//tensorflow/core/kernels:friends\"],\n    deps = [\n        \"//tensorflow/core/platform:macros\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"tensor_shape\",\n    srcs = [\"tensor_shape.cc\"],\n    hdrs = [\n        \"partial_tensor_shape.h\",\n        \"tensor_shape.h\",\n    ],\n    visibility = [\n        \"//tensorflow/core:__pkg__\",\n        \"//tensorflow/core/runtime_fallback:__subpackages__\",\n        \"//tensorflow/core/tfrt/utils:__subpackages__\",\n    ],\n    deps = [\n        \":bounds_check\",\n        \":tensor_shape_proto_cc\",\n        \":types_proto_cc\",\n        \"//tensorflow/core/lib/core:errors\",\n        \"//tensorflow/core/lib/core:status\",\n        \"//tensorflow/core/lib/core:stringpiece\",\n        \"//tensorflow/core/lib/gtl:array_slice\",\n        \"//tensorflow/core/lib/gtl:inlined_vector\",\n        \"//tensorflow/core/lib/strings:str_util\",\n        \"//tensorflow/core/lib/strings:strcat\",\n        \"//tensorflow/core/platform:errors\",\n        \"//tensorflow/core/platform:logging\",\n        \"//tensorflow/core/platform:macros\",\n        \"//tensorflow/core/util:overflow\",\n        \"//third_party/eigen3\",\n    ],\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"resource_base\",\n    hdrs = [\"resource_base.h\"],\n    deps = [\n        \"//tensorflow/core/lib/core:refcount\",\n        \"//tensorflow/core/lib/core:status\",\n        \"//tensorflow/core/platform:errors\",\n    ],\n)\n\ncc_library(\n    name = \"resource_handle\",\n    srcs = [\"resource_handle.cc\"],\n    hdrs = [\"resource_handle.h\"],\n    visibility = [\n        \"//tensorflow/compiler/mlir/tensorflow:__subpackages__\",\n        \"//tensorflow/core:__pkg__\",\n    ],\n    deps = [\n        \":resource_base\",\n        \":resource_handle_proto_cc\",\n        \":tensor_shape\",\n        \":type_index\",\n        \":types_proto_cc\",\n        \"//tensorflow/core/lib/core:errors\",\n        \"//tensorflow/core/lib/strings:strcat\",\n        \"//tensorflow/core/platform:casts\",\n        \"//tensorflow/core/platform:intrusive_ptr\",\n        \"//tensorflow/core/platform:statusor\",\n        \"//tensorflow/core/platform:tensor_coding\",\n        \"//tensorflow/core/platform:types\",\n        \"//tensorflow/core/util:managed_stack_trace\",\n    ],\n    alwayslink = 1,\n)\n\ntf_cc_test(\n    name = \"resource_handle_test\",\n    size = \"small\",\n    srcs = [\"resource_handle_test.cc\"],\n    deps = [\n        \":resource_handle\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ncc_library(\n    name = \"type_index\",\n    hdrs = [\"type_index.h\"],\n    visibility = [\"//visibility:private\"],\n    deps = [\n        \"//tensorflow/core/platform:hash\",\n        \"//tensorflow/core/platform:stringpiece\",\n        \"//tensorflow/core/platform:types\",\n    ],\n)\n\ncc_library(\n    name = \"tensor_types\",\n    hdrs = [\"tensor_types.h\"],\n    visibility = [\"//visibility:private\"],\n    deps = [\n        \"//tensorflow/core/platform:logging\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"type_traits\",\n    hdrs = [\"type_traits.h\"],\n    visibility = [\"//visibility:private\"],\n    deps = [\n        \":numeric_types\",\n        \"//tensorflow/core/platform:types\",\n    ],\n)\n\ntf_cuda_library(\n    name = \"tensor\",\n    srcs = [\n        \"log_memory.cc\",\n        \"tensor.cc\",\n        \"typed_allocator.cc\",\n        \"types.cc\",\n        \"variant.cc\",\n        \"variant_op_registry.cc\",\n        \"variant_tensor_data.cc\",\n    ],\n    hdrs = [\n        \"log_memory.h\",\n        \"register_types.h\",\n        \"tensor.h\",\n        \"typed_allocator.h\",\n        \"types.h\",\n        \"variant.h\",\n        \"variant_encode_decode.h\",\n        \"variant_op_registry.h\",\n        \"variant_tensor_data.h\",\n    ],\n    visibility = [\n        \"//tensorflow/core:__pkg__\",\n        \"//tensorflow/core/runtime_fallback:__subpackages__\",\n        \"//tensorflow/core/tfrt/utils:__subpackages__\",\n        \"//tensorflow/core/util:__pkg__\",\n        \"//tensorflow/security/fuzzing:__subpackages__\",\n    ],\n    deps = [\n        \":allocation_description_proto_cc\",\n        \":allocator\",\n        \":bfloat16\",\n        \":full_type_proto_cc\",\n        \":log_memory_proto_cc\",\n        \":numeric_types\",\n        \":resource_handle\",\n        \":resource_handle_proto_cc\",\n        \":tensor_description_proto_cc\",\n        \":tensor_proto_cc\",\n        \":tensor_shape\",\n        \":tensor_types\",\n        \":type_index\",\n        \":type_traits\",\n        \":types_proto_cc\",\n        \"//tensorflow/core/lib/core:coding\",\n        \"//tensorflow/core/lib/core:errors\",\n        \"//tensorflow/core/lib/core:refcount\",\n        \"//tensorflow/core/lib/core:status\",\n        \"//tensorflow/core/lib/core:stringpiece\",\n        \"//tensorflow/core/lib/gtl:array_slice\",\n        \"//tensorflow/core/lib/gtl:flatmap\",\n        \"//tensorflow/core/lib/gtl:inlined_vector\",\n        \"//tensorflow/core/lib/hash\",\n        \"//tensorflow/core/lib/strings:str_util\",\n        \"//tensorflow/core/lib/strings:strcat\",\n        \"//tensorflow/core/platform:abi\",\n        \"//tensorflow/core/platform:logging\",\n        \"//tensorflow/core/platform:macros\",\n        \"//tensorflow/core/platform:platform_port\",\n        \"//tensorflow/core/platform:protobuf\",\n        \"//tensorflow/core/platform:strcat\",\n        \"//tensorflow/core/platform:tensor_coding\",\n        \"//tensorflow/core/platform:types\",\n        \"//tensorflow/core/public:version\",\n        \"//tensorflow/core/util:managed_stack_trace\",\n        \"//third_party/eigen3\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/strings\",\n    ],\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"shape_inference\",\n    srcs = [\"shape_inference.cc\"],\n    hdrs = [\"shape_inference.h\"],\n    deps = [\n        \":bounds_check\",\n        \":full_type_proto_cc\",\n        \":full_type_util\",\n        \":node_def_proto_cc\",\n        \":node_def_util\",\n        \":op_def_proto_cc\",\n        \":tensor\",\n        \":tensor_shape\",\n        \":tensor_shape_proto_cc\",\n        \"//tensorflow/core/lib/core:errors\",\n        \"//tensorflow/core/lib/core:status\",\n        \"//tensorflow/core/lib/gtl:inlined_vector\",\n        \"//tensorflow/core/lib/strings:numbers\",\n        \"//tensorflow/core/lib/strings:scanner\",\n        \"//tensorflow/core/lib/strings:str_util\",\n        \"//tensorflow/core/platform:macros\",\n        \"@com_google_absl//absl/memory\",\n    ],\n)\n\ncc_library(\n    name = \"kernel_shape_util\",\n    srcs = [\"kernel_shape_util.cc\"],\n    hdrs = [\"kernel_shape_util.h\"],\n    deps = [\n        \":tensor\",\n        \":tensor_shape\",\n        \"//tensorflow/core/lib/core:errors\",\n        \"//tensorflow/core/platform:status\",\n        \"//tensorflow/core/util:padding\",\n    ],\n)\n\ncc_library(\n    name = \"common_shape_fns\",\n    srcs = [\"common_shape_fns.cc\"],\n    hdrs = [\"common_shape_fns.h\"],\n    deps = [\n        \":attr_value_proto_cc\",\n        \":shape_inference\",\n        \":tensor\",\n        \":tensor_shape\",\n        \"//tensorflow/core/lib/core:errors\",\n        \"//tensorflow/core/lib/gtl:inlined_vector\",\n        \"//tensorflow/core/util:einsum_op_util\",\n        \"//tensorflow/core/util:padding\",\n        \"//tensorflow/core/util:tensor_format\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"attr_value_util\",\n    srcs = [\"attr_value_util.cc\"],\n    hdrs = [\"attr_value_util.h\"],\n    deps = [\n        \":attr_value_proto_text\",\n        \":tensor\",\n        \":tensor_shape\",\n        \":tensor_shape_proto_cc\",\n        \"//tensorflow/core/lib/core:errors\",\n        \"//tensorflow/core/lib/core:status\",\n        \"//tensorflow/core/lib/core:stringpiece\",\n        \"//tensorflow/core/lib/gtl:array_slice\",\n        \"//tensorflow/core/lib/hash\",\n        \"//tensorflow/core/lib/strings:proto_serialization\",\n        \"//tensorflow/core/lib/strings:str_util\",\n        \"//tensorflow/core/platform:protobuf\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"op_def_util\",\n    srcs = [\"op_def_util.cc\"],\n    hdrs = [\"op_def_util.h\"],\n    deps = [\n        \":api_def_proto_cc\",\n        \":attr_value_proto_cc\",\n        \":attr_value_util\",\n        \":op_def_proto_cc\",\n        \":tensor\",\n        \"//tensorflow/core/lib/core:errors\",\n        \"//tensorflow/core/lib/core:status\",\n        \"//tensorflow/core/lib/core:stringpiece\",\n        \"//tensorflow/core/lib/gtl:map_util\",\n        \"//tensorflow/core/lib/hash\",\n        \"//tensorflow/core/lib/strings:proto_serialization\",\n        \"//tensorflow/core/lib/strings:scanner\",\n        \"//tensorflow/core/lib/strings:str_util\",\n        \"//tensorflow/core/lib/strings:strcat\",\n        \"//tensorflow/core/platform:mutex\",\n        \"//tensorflow/core/platform:protobuf\",\n        \"//tensorflow/core/platform:types\",\n    ],\n)\n\ncc_library(\n    name = \"node_def_util\",\n    srcs = [\"node_def_util.cc\"],\n    hdrs = [\"node_def_util.h\"],\n    deps = [\n        \":attr_value_proto_cc\",\n        \":attr_value_util\",\n        \":node_def_proto_cc\",\n        \":op_def_proto_cc\",\n        \":op_def_util\",\n        \":tensor\",\n        \":tensor_proto_cc\",\n        \":tensor_shape\",\n        \":tensor_shape_proto_cc\",\n        \":types_proto_cc\",\n        \"//tensorflow/core/lib/core:stringpiece\",\n        \"//tensorflow/core/lib/gtl:array_slice\",\n        \"//tensorflow/core/lib/gtl:flatmap\",\n        \"//tensorflow/core/lib/gtl:map_util\",\n        \"//tensorflow/core/lib/hash\",\n        \"//tensorflow/core/platform:errors\",\n        \"//tensorflow/core/platform:hash\",\n        \"//tensorflow/core/platform:protobuf\",\n        \"//tensorflow/core/platform:scanner\",\n        \"//tensorflow/core/platform:status\",\n        \"//tensorflow/core/platform:strcat\",\n        \"//tensorflow/core/platform:stringpiece\",\n        \"//tensorflow/core/platform:types\",\n        \"//tensorflow/core/util:padding\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"node_properties\",\n    srcs = [\"node_properties.cc\"],\n    hdrs = [\"node_properties.h\"],\n    deps = [\n        \":full_type_proto_cc\",\n        \":node_def_proto_cc\",\n        \":node_def_util\",\n        \":op\",\n        \":op_def_proto_cc\",\n        \":tensor\",\n        \"//tensorflow/core/lib/core:status\",\n    ],\n)\n\ncc_library(\n    name = \"op_def_builder\",\n    srcs = [\"op_def_builder.cc\"],\n    hdrs = [\"op_def_builder.h\"],\n    deps = [\n        \":attr_value_proto_cc\",\n        \":attr_value_util\",\n        \":op_def_proto_cc\",\n        \":op_def_util\",\n        \":tensor\",\n        \"//tensorflow/core/lib/core:errors\",\n        \"//tensorflow/core/lib/core:status\",\n        \"//tensorflow/core/lib/core:stringpiece\",\n        \"//tensorflow/core/lib/gtl:array_slice\",\n        \"//tensorflow/core/lib/strings:scanner\",\n        \"//tensorflow/core/lib/strings:str_util\",\n        \"//tensorflow/core/lib/strings:strcat\",\n        \"//tensorflow/core/platform:errors\",\n        \"//tensorflow/core/platform:macros\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"full_type_util\",\n    srcs = [\"full_type_util.cc\"],\n    hdrs = [\"full_type_util.h\"],\n    deps = [\n        \":attr_value_proto_cc\",\n        \":full_type_proto_cc\",\n        \":node_def_proto_cc\",\n        \":node_def_util\",\n        \":op_def_builder\",\n        \":op_def_proto_cc\",\n        \":tensor\",\n        \":types_proto_cc\",\n        \"//tensorflow/core/platform:statusor\",\n        \"//tensorflow/core/protobuf:error_codes_proto_impl_cc\",\n    ],\n)\n\ncc_library(\n    name = \"op\",\n    srcs = [\"op.cc\"],\n    hdrs = [\"op.h\"],\n    deps = [\n        \":full_type_proto_cc\",\n        \":full_type_util\",\n        \":op_def_builder\",\n        \":op_def_util\",\n        \"//tensorflow/core/framework/registration\",\n        \"//tensorflow/core/lib/core:errors\",\n        \"//tensorflow/core/lib/core:status\",\n        \"//tensorflow/core/lib/gtl:map_util\",\n        \"//tensorflow/core/lib/strings:str_util\",\n        \"//tensorflow/core/lib/strings:strcat\",\n        \"//tensorflow/core/platform:logging\",\n        \"//tensorflow/core/platform:macros\",\n        \"//tensorflow/core/platform:mutex\",\n        \"//tensorflow/core/platform:platform_port\",\n        \"//tensorflow/core/platform:protobuf\",\n        \"//tensorflow/core/platform:thread_annotations\",\n        \"//tensorflow/core/platform:types\",\n    ],\n)\n\ncc_library(\n    name = \"op_requires\",\n    hdrs = [\"op_requires.h\"],\n    deps = [\"//tensorflow/core/platform:macros\"],\n)\n\n# Files whose users still need to be migrated from core:framework to the\n# above targets.\n# TODO(gonnet): Remove these files once targets depending on them have\n# been cleaned up.\nexports_files(\n    srcs = [\n        \"allocator.h\",\n        \"bfloat16.h\",\n        \"bounds_check.h\",\n        \"fake_input.h\",\n        \"function_testlib.h\",\n        \"log_memory.h\",\n        \"numeric_types.h\",\n        \"op_gen_lib.h\",\n        \"reader_base.h\",\n        \"register_types.h\",\n        \"resource_base.h\",\n        \"resource_handle.h\",\n        \"shape_inference_testutil.h\",\n        \"tensor.h\",\n        \"tensor_interface.h\",\n        \"tensor_shape.h\",\n        \"tensor_testutil.h\",\n        \"tensor_types.h\",\n        \"type_index.h\",\n        \"type_traits.h\",\n        \"typed_allocator.h\",\n        \"types.h\",\n        \"variant.h\",\n        \"variant_encode_decode.h\",\n        \"variant_op_registry.h\",\n        \"variant_tensor_data.h\",\n    ],\n)\n\n# Framework tests.\ntf_cc_test(\n    name = \"framework_op_gen_lib_test\",\n    size = \"small\",\n    srcs = [\"op_gen_lib_test.cc\"],\n    deps = [\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/framework:op_gen_lib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"variant_op_copy_test\",\n    size = \"small\",\n    srcs = [\"variant_op_copy_test.cc\"],\n    linkstatic = tf_kernel_tests_linkstatic(),\n    tags = tf_cuda_tests_tags(),\n    deps = [\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n        \"//tensorflow/cc:ops\",\n        \"//tensorflow/cc:scope\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:direct_session\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/kernels:array\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_cc_test(\n    name = \"framework_run_handler_util_test\",\n    size = \"small\",\n    srcs = [\"run_handler_util_test.cc\"],\n    linkstatic = tf_kernel_tests_linkstatic(),\n    deps = [\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ntf_cc_test(\n    name = \"framework_run_handler_test\",\n    size = \"small\",\n    srcs = [\"run_handler_test.cc\"],\n    linkstatic = tf_kernel_tests_linkstatic(),\n    deps = [\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:direct_session_internal\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/framework:tensor_testutil\",\n        \"//tensorflow/core/kernels:cwise_op\",\n        \"//tensorflow/core/kernels:matmul_op\",\n        \"//third_party/eigen3\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/synchronization\",\n    ],\n)\n\ntf_cc_test(\n    name = \"framework_op_segment_test\",\n    size = \"small\",\n    srcs = [\"op_segment_test.cc\"],\n    linkstatic = tf_kernel_tests_linkstatic(),\n    deps = [\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:direct_session_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:ops\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/kernels:cwise_op\",\n        \"//tensorflow/core/kernels:ops_util\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_cc_tests(\n    name = \"higher_level_tests\",\n    size = \"small\",\n    srcs = [\n        \"allocator_test.cc\",\n        \"attr_value_util_test.cc\",\n        \"batch_util_test.cc\",\n        \"bfloat16_test.cc\",\n        \"cancellation_test.cc\",\n        \"common_shape_fns_test.cc\",\n        \"dataset_test.cc\",\n        \"device_base_test.cc\",\n        \"function_test.cc\",\n        \"graph_def_util_test.cc\",\n        \"graph_to_functiondef_test.cc\",\n        \"kernel_def_builder_test.cc\",\n        \"kernel_def_util_test.cc\",\n        \"memory_types_test.cc\",\n        \"model_test.cc\",\n        \"node_def_builder_test.cc\",\n        \"node_def_util_test.cc\",\n        \"node_properties_test.cc\",\n        \"op_compatibility_test.cc\",\n        \"op_def_builder_test.cc\",\n        \"op_def_util_test.cc\",\n        \"op_kernel_test.cc\",\n        \"op_registration_test.cc\",\n        \"partial_tensor_shape_test.cc\",\n        \"rendezvous_test.cc\",\n        \"resource_mgr_test.cc\",\n        \"resource_op_kernel_test.cc\",\n        \"shape_inference_test.cc\",\n        \"shape_inference_testutil_test.cc\",\n        \"tensor_shape_test.cc\",\n        \"tensor_slice_test.cc\",\n        \"tensor_test.cc\",\n        \"tensor_testutil_test.cc\",\n        \"tensor_util_test.cc\",\n        \"tracking_allocator_test.cc\",\n        \"types_test.cc\",\n        \"variant_op_registry_test.cc\",\n        \"variant_test.cc\",\n    ],\n    linkopts = select({\n        \"//tensorflow:macos\": [\"-headerpad_max_install_names\"],\n        \"//conditions:default\": [],\n    }),\n    linkstatic = tf_kernel_tests_linkstatic(),\n    visibility = [\n        \"//tensorflow:internal\",\n        \"//tensorflow/core:__pkg__\",\n    ],\n    deps = [\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:cc_ops_internal\",\n        \"//tensorflow/cc:function_ops\",\n        \"//tensorflow/cc:ops\",\n        \"//tensorflow/cc:scope\",\n        \"//tensorflow/cc:sendrecv_ops\",\n        \"//tensorflow/cc:while_loop\",\n        \"//tensorflow/core\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:ops\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/common_runtime:direct_session_internal\",\n        \"//tensorflow/core/kernels:ops_util\",\n        \"//tensorflow/core/platform:regexp\",\n        \"//tensorflow/core/util:protos_test_cc\",\n        \"//third_party/eigen3\",\n        \"@com_google_absl//absl/base\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"pywrap_required_hdrs\",\n    textual_hdrs = [\n        \"op_gen_lib.h\",\n        \"rendezvous.h\",\n    ],\n    visibility = [\n        \"//tensorflow/core:__pkg__\",\n        \"//tensorflow/python:__pkg__\",\n        \"//tensorflow/python/client:__pkg__\",\n        \"//tensorflow/python/util:__pkg__\",\n    ],\n)\n\n# All framewrok protos are self-contained, i.e. they only import other\n# protos from the same package, so we can build the protos here and then\n# link them from core:protos_all without circular dependencies.\n\n# Generate the C++ sources for some of the protos.\ntf_generate_proto_text_sources(\n    name = \"attr_value_proto_text\",\n    srcs = [\n        \"attr_value.proto\",\n        \"resource_handle.proto\",\n        \"tensor.proto\",\n        \"tensor_shape.proto\",\n        \"types.proto\",\n    ],\n    srcs_relative_dir = \"tensorflow/core/framework/\",\n    deps = [\n        \":attr_value_proto_cc\",\n        \":resource_handle_proto_cc\",\n        \":tensor_proto_cc\",\n        \":tensor_shape_proto_cc\",\n        \":types_proto_cc\",\n        \"//tensorflow/core/lib/strings:proto_text_util\",\n        \"//tensorflow/core/lib/strings:scanner\",\n        \"//tensorflow/core/platform:macros\",\n        \"//tensorflow/core/platform:protobuf\",\n        \"//tensorflow/core/platform:types\",\n    ],\n)\n\ntf_pyclif_proto_library(\n    name = \"cost_graph_pyclif\",\n    proto_lib = \"//tensorflow/core:protos_all\",\n    proto_srcfile = \"cost_graph.proto\",\n    visibility = [\"//visibility:public\"],\n)\n\ntf_pyclif_proto_library(\n    name = \"tensor_pyclif\",\n    proto_lib = \"//tensorflow/core:protos_all\",\n    proto_srcfile = \"tensor.proto\",\n    visibility = [\"//visibility:public\"],\n)\n\ntf_pyclif_proto_library(\n    name = \"kernel_def_pyclif\",\n    proto_lib = \"//tensorflow/core:protos_all\",\n    proto_srcfile = \"kernel_def.proto\",\n    visibility = [\"//visibility:public\"],\n)\n\ntf_pyclif_proto_library(\n    name = \"node_def_pyclif\",\n    proto_lib = \"//tensorflow/core:protos_all\",\n    proto_srcfile = \"node_def.proto\",\n    visibility = [\"//visibility:public\"],\n)\n\ntf_pyclif_proto_library(\n    name = \"function_pyclif\",\n    proto_lib = \"//tensorflow/core:protos_all\",\n    proto_srcfile = \"function.proto\",\n    visibility = [\"//visibility:public\"],\n)\n\ntf_pyclif_proto_library(\n    name = \"graph_pyclif\",\n    proto_lib = \"//tensorflow/core:protos_all\",\n    proto_srcfile = \"graph.proto\",\n    visibility = [\"//visibility:public\"],\n)\n\ntf_pyclif_proto_library(\n    name = \"step_stats_pyclif\",\n    proto_lib = \"//tensorflow/core:protos_all\",\n    proto_srcfile = \"step_stats.proto\",\n    visibility = [\"//visibility:public\"],\n)\n\ntf_pyclif_proto_library(\n    name = \"types_pyclif\",\n    proto_lib = \"//tensorflow/core:protos_all\",\n    proto_srcfile = \"types.proto\",\n    visibility = [\"//visibility:public\"],\n)\n\ntf_pyclif_proto_library(\n    name = \"variable_pyclif\",\n    proto_lib = \"//tensorflow/core:protos_all\",\n    proto_srcfile = \"variable.proto\",\n    visibility = [\"//visibility:public\"],\n)\n\ntf_proto_library(\n    name = \"log_memory_proto\",\n    srcs = [\"log_memory.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":allocation_description_proto\",\n        \":tensor_description_proto\",\n        \":tensor_shape_proto\",\n        \":types_proto\",\n    ],\n)\n\ntf_proto_library(\n    name = \"versions_proto\",\n    srcs = [\"versions.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n)\n\ntf_proto_library(\n    name = \"graph_proto\",\n    srcs = [\"graph.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":attr_value_proto\",\n        \":function_proto\",\n        \":node_def_proto\",\n        \":op_def_proto\",\n        \":resource_handle_proto\",\n        \":tensor_proto\",\n        \":tensor_shape_proto\",\n        \":types_proto\",\n        \":versions_proto\",\n    ],\n)\n\ntf_proto_library(\n    name = \"node_def_proto\",\n    srcs = [\"node_def.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":attr_value_proto\",\n        \":full_type_proto\",\n        \":resource_handle_proto\",\n        \":tensor_proto\",\n        \":tensor_shape_proto\",\n        \":types_proto\",\n    ],\n)\n\ntf_proto_library(\n    name = \"allocation_description_proto\",\n    srcs = [\"allocation_description.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n)\n\ntf_proto_library(\n    name = \"tensor_slice_proto\",\n    srcs = [\"tensor_slice.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n)\n\ntf_proto_library(\n    name = \"tensor_description_proto\",\n    srcs = [\"tensor_description.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":allocation_description_proto\",\n        \":tensor_shape_proto\",\n        \":types_proto\",\n    ],\n)\n\ntf_proto_library(\n    name = \"device_attributes_proto\",\n    srcs = [\"device_attributes.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n)\n\ntf_proto_library(\n    name = \"resource_handle_proto\",\n    srcs = [\"resource_handle.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":tensor_shape_proto\",\n        \":types_proto\",\n    ],\n)\n\ntf_proto_library(\n    name = \"step_stats_proto\",\n    srcs = [\"step_stats.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":allocation_description_proto\",\n        \":tensor_description_proto\",\n        \":tensor_shape_proto\",\n        \":types_proto\",\n    ],\n)\n\ntf_proto_library(\n    name = \"reader_base_proto\",\n    srcs = [\"reader_base.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n)\n\ntf_proto_library(\n    name = \"kernel_def_proto\",\n    srcs = [\"kernel_def.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":attr_value_proto\",\n        \":resource_handle_proto\",\n        \":tensor_proto\",\n        \":tensor_shape_proto\",\n        \":types_proto\",\n    ],\n)\n\ntf_proto_library(\n    name = \"op_def_proto\",\n    srcs = [\"op_def.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":attr_value_proto\",\n        \":full_type_proto\",\n        \":resource_handle_proto\",\n        \":tensor_proto\",\n        \":tensor_shape_proto\",\n        \":types_proto\",\n    ],\n    visibility = [\n        \"//tensorflow/core:__subpackages__\",\n        \"//tensorflow/python:__pkg__\",\n        \"//tensorflow/security/fuzzing:__subpackages__\",\n    ],\n)\n\ntf_proto_library(\n    name = \"attr_value_proto\",\n    srcs = [\"attr_value.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":resource_handle_proto\",\n        \":tensor_proto\",\n        \":tensor_shape_proto\",\n        \":types_proto\",\n    ],\n    visibility = [\n        \"//tensorflow/core:__subpackages__\",\n        \"//tensorflow/python:__pkg__\",\n        \"//tensorflow/security/fuzzing:__subpackages__\",\n    ],\n)\n\ntf_proto_library(\n    name = \"full_type_proto\",\n    srcs = [\"full_type.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [],\n)\n\ntf_proto_library(\n    name = \"tensor_proto\",\n    srcs = [\"tensor.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":resource_handle_proto\",\n        \":tensor_shape_proto\",\n        \":types_proto\",\n    ],\n)\n\ntf_proto_library(\n    name = \"api_def_proto\",\n    srcs = [\"api_def.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":attr_value_proto\",\n        \":resource_handle_proto\",\n        \":tensor_proto\",\n        \":tensor_shape_proto\",\n        \":types_proto\",\n    ],\n)\n\ntf_proto_library(\n    name = \"variable_proto\",\n    srcs = [\"variable.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n)\n\ntf_proto_library(\n    name = \"graph_transfer_info_proto\",\n    srcs = [\"graph_transfer_info.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":types_proto\",\n    ],\n)\n\ntf_proto_library(\n    name = \"types_proto\",\n    srcs = [\"types.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n)\n\ntf_proto_library(\n    name = \"cost_graph_proto\",\n    srcs = [\"cost_graph.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":tensor_shape_proto\",\n        \":types_proto\",\n    ],\n)\n\ntf_proto_library(\n    name = \"tensor_shape_proto\",\n    srcs = [\"tensor_shape.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n)\n\ntf_proto_library(\n    name = \"function_proto\",\n    srcs = [\"function.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":attr_value_proto\",\n        \":node_def_proto\",\n        \":op_def_proto\",\n        \":resource_handle_proto\",\n        \":tensor_proto\",\n        \":tensor_shape_proto\",\n        \":types_proto\",\n    ],\n)\n\ntf_proto_library(\n    name = \"summary_proto\",\n    srcs = [\"summary.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":resource_handle_proto\",\n        \":tensor_proto\",\n        \":tensor_shape_proto\",\n        \":types_proto\",\n    ],\n)\n\ntf_proto_library(\n    name = \"model_proto\",\n    srcs = [\"model.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n)\n\ntf_proto_library(\n    name = \"dataset_options_proto\",\n    srcs = [\"dataset_options.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n)\n\ntf_proto_library(\n    name = \"protos_all\",\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":allocation_description_proto\",\n        \":api_def_proto\",\n        \":attr_value_proto\",\n        \":cost_graph_proto\",\n        \":dataset_options_proto\",\n        \":device_attributes_proto\",\n        \":full_type_proto\",\n        \":function_proto\",\n        \":graph_proto\",\n        \":graph_transfer_info_proto\",\n        \":kernel_def_proto\",\n        \":log_memory_proto\",\n        \":model_proto\",\n        \":node_def_proto\",\n        \":op_def_proto\",\n        \":reader_base_proto\",\n        \":resource_handle_proto\",\n        \":step_stats_proto\",\n        \":summary_proto\",\n        \":tensor_description_proto\",\n        \":tensor_proto\",\n        \":tensor_shape_proto\",\n        \":tensor_slice_proto\",\n        \":types_proto\",\n        \":variable_proto\",\n        \":versions_proto\",\n    ],\n    tags = [\n        \"alt_dep=//third_party/tensorflow/core:protos_all\",\n    ],\n)"