"diff --git a/tensorflow/python/kernel_tests/sparse_serialization_ops_test.py b/tensorflow/python/kernel_tests/sparse_serialization_ops_test.py\nindex 425808e3a6d..065e1c75fc8 100644\n--- a/tensorflow/python/kernel_tests/sparse_serialization_ops_test.py\n+++ b/tensorflow/python/kernel_tests/sparse_serialization_ops_test.py\n@@ -16,10 +16,12 @@\n \n import numpy as np\n \n+from tensorflow.python.eager import def_function\n from tensorflow.python.framework import dtypes\n from tensorflow.python.framework import sparse_tensor as sparse_tensor_lib\n from tensorflow.python.framework import test_util\n from tensorflow.python.ops import array_ops\n+from tensorflow.python.ops import gen_resource_variable_ops\n from tensorflow.python.ops import sparse_ops\n from tensorflow.python.platform import test\n \n@@ -460,6 +462,18 @@ class SerializeSparseTest(test.TestCase):\n     self._testDeserializeFailsInvalidProtoHelper(\n         sparse_ops.serialize_sparse, sparse_ops.deserialize_many_sparse)\n \n+  def testDeserializeInvalidVariant(self):\n+    mu = gen_resource_variable_ops.mutex_v2()\n+    mu_lock = gen_resource_variable_ops.mutex_lock(mutex=mu)\n+\n+    @def_function.function\n+    def f():\n+      return sparse_ops.deserialize_sparse(\n+          serialized_sparse=mu_lock, dtype=dtypes.int32)\n+\n+    with self.assertRaisesRegex(ValueError, r\"Shape must be at least rank 1\"):\n+      f()\n+\n \n if __name__ == \"__main__\":\n   test.main()"