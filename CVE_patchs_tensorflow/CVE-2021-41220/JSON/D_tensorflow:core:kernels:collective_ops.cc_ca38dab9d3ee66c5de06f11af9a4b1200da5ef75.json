"diff --git a/tensorflow/core/kernels/collective_ops.cc b/tensorflow/core/kernels/collective_ops.cc\nindex c59464cad70..1824148a401 100644\n--- a/tensorflow/core/kernels/collective_ops.cc\n+++ b/tensorflow/core/kernels/collective_ops.cc\n@@ -494,15 +494,17 @@ class CollectiveOpV2Kernel : public AsyncOpKernel {\n                               const Tensor& group_size, const Tensor& group_key,\n                               const Tensor& instance_key) {\n     if (group_size.dims() > 0) {\n-      return errors::Internal(\"Unexpected dimensions on input group_size, got \",\n-                              group_size.shape().DebugString());\n+      return errors::InvalidArgument(\n+          \"Unexpected dimensions on input group_size, got \",\n+          group_size.shape().DebugString());\n     }\n     if (group_key.dims() > 0) {\n-      return errors::Internal(\"Unexpected dimensions on input group_key, got \",\n-                              group_key.shape().DebugString());\n+      return errors::InvalidArgument(\n+          \"Unexpected dimensions on input group_key, got \",\n+          group_key.shape().DebugString());\n     }\n     if (instance_key.dims() > 0) {\n-      return errors::Internal(\n+      return errors::InvalidArgument(\n           \"Unexpected dimensions on input instance_key, got \",\n           instance_key.shape().DebugString());\n     }\n@@ -625,7 +627,7 @@ class CollectiveReduceV2OpKernel : public CollectiveOpV2Kernel {\n                                               /*group_size*/ c->input(1),\n                                               /*group_key*/ c->input(2),\n                                               /*instance_key*/ c->input(3)),\n-                         done);\n+                         done_with_cleanup);\n     col_params->instance.shape = c->input(0).shape();\n     col_params->merge_op = merge_op_.get();\n     col_params->final_op = final_op_.get();\n@@ -855,14 +857,15 @@ class CollectiveInitializeCommunicatorOpKernel : public AsyncOpKernel {\n \n   Status CheckInputs(Tensor group_size_t, Tensor group_key_t) {\n     if (group_size_t.dims() > 0) {\n-      return errors::Internal(\n+      return errors::InvalidArgument(\n           \"Unexpected dimensions on input group_size. \"\n           \"It shoulbe a scalar, got tensor with shape \",\n           group_size_t.shape().DebugString());\n     }\n     if (group_key_t.dims() > 0) {\n-      return errors::Internal(\"Unexpected dimensions on input group_key, got \",\n-                              group_key_t.shape().DebugString());\n+      return errors::InvalidArgument(\n+          \"Unexpected dimensions on input group_key, got \",\n+          group_key_t.shape().DebugString());\n     }\n \n     auto group_size = group_size_t.unaligned_flat<int32>()(0);\n@@ -1084,7 +1087,7 @@ class CollectiveReduceV3OpKernel : public CollectiveOpV3Kernel {\n     };\n     core::RefCountPtr<CollectiveGroupResource> resource;\n     OP_REQUIRES_OK_ASYNC(c, LookupResource(c, HandleFromInput(c, 1), &resource),\n-                         done);\n+                         done_with_cleanup);\n \n     Tensor group_assignment = c->input(2);\n \n@@ -1134,7 +1137,7 @@ class CollectiveAllToAllV3OpKernel : public CollectiveOpV3Kernel {\n     };\n     core::RefCountPtr<CollectiveGroupResource> resource;\n     OP_REQUIRES_OK_ASYNC(c, LookupResource(c, HandleFromInput(c, 1), &resource),\n-                         done);\n+                         done_with_cleanup);\n \n     Tensor group_assignment = c->input(2);\n "