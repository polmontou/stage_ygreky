"diff --git a/tensorflow/core/ops/cudnn_rnn_ops.cc b/tensorflow/core/ops/cudnn_rnn_ops.cc\nindex 1dd7659e137..ff6d2852a66 100644\n--- a/tensorflow/core/ops/cudnn_rnn_ops.cc\n+++ b/tensorflow/core/ops/cudnn_rnn_ops.cc\n@@ -81,11 +81,17 @@ REGISTER_OP(\"CudnnRNN\")\n     .Attr(\"seed2: int = 0\")\n     .Attr(\"is_training: bool = true\")\n     .SetShapeFn([](InferenceContext* c) {\n+      ShapeHandle unused;\n       auto input_shape = c->input(0);\n       auto input_h_shape = c->input(1);\n+      TF_RETURN_IF_ERROR(c->WithRank(input_shape, 3, &unused));\n+      TF_RETURN_IF_ERROR(c->WithRank(input_h_shape, 3, &unused));\n+      TF_RETURN_IF_ERROR(c->WithRank(c->input(3), 1, &unused));\n+\n       auto seq_length = c->Dim(input_shape, 0);\n       auto batch_size = c->Dim(input_shape, 1);\n       auto num_units = c->Dim(input_h_shape, 2);\n+\n       string direction;\n       TF_RETURN_IF_ERROR(c->GetAttr(\"direction\", &direction));\n       string rnn_mode;\n@@ -124,8 +130,13 @@ REGISTER_OP(\"CudnnRNNV2\")\n     .Attr(\"seed2: int = 0\")\n     .Attr(\"is_training: bool = true\")\n     .SetShapeFn([](InferenceContext* c) {\n+      ShapeHandle unused;\n       auto input_shape = c->input(0);\n       auto input_h_shape = c->input(1);\n+      TF_RETURN_IF_ERROR(c->WithRank(input_shape, 3, &unused));\n+      TF_RETURN_IF_ERROR(c->WithRank(input_h_shape, 3, &unused));\n+      TF_RETURN_IF_ERROR(c->WithRank(c->input(3), 1, &unused));\n+\n       auto seq_length = c->Dim(input_shape, 0);\n       auto batch_size = c->Dim(input_shape, 1);\n       auto num_units = c->Dim(input_h_shape, 2);\n@@ -171,16 +182,26 @@ REGISTER_OP(\"CudnnRNNV3\")\n     .Attr(\"is_training: bool = true\")\n     .Attr(\"time_major: bool = true\")\n     .SetShapeFn([](InferenceContext* c) {\n+      ShapeHandle unused;\n       auto input_shape = c->input(0);\n       auto input_h_shape = c->input(1);\n       auto input_c_shape = c->input(2);\n+      TF_RETURN_IF_ERROR(c->WithRank(input_shape, 3, &unused));\n+      TF_RETURN_IF_ERROR(c->WithRank(input_h_shape, 3, &unused));\n+      TF_RETURN_IF_ERROR(c->WithRank(c->input(3), 1, &unused));\n+      TF_RETURN_IF_ERROR(c->WithRank(c->input(4), 1, &unused));\n+\n       auto max_seq_length = c->Dim(input_shape, 0);\n       auto batch_size = c->Dim(input_shape, 1);\n       auto num_units = c->Dim(input_h_shape, 2);\n+\n       string direction;\n       TF_RETURN_IF_ERROR(c->GetAttr(\"direction\", &direction));\n       string rnn_mode;\n       TF_RETURN_IF_ERROR(c->GetAttr(\"rnn_mode\", &rnn_mode));\n+      if (rnn_mode == \"lstm\") {\n+        TF_RETURN_IF_ERROR(c->WithRank(input_c_shape, 3, &unused));\n+      }\n       int dir_count = (direction == \"bidirectional\") ? 2 : 1;\n       DimensionHandle output_size;\n       TF_RETURN_IF_ERROR(c->Multiply(num_units, dir_count, &output_size));"