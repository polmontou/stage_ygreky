"diff --git a/tensorflow/core/kernels/fused_batch_norm_op.cc b/tensorflow/core/kernels/fused_batch_norm_op.cc\nindex f1488e74077..1278365c67f 100644\n--- a/tensorflow/core/kernels/fused_batch_norm_op.cc\n+++ b/tensorflow/core/kernels/fused_batch_norm_op.cc\n@@ -1340,18 +1340,20 @@ class FusedBatchNormOpBase : public OpKernel {\n         errors::InvalidArgument(\"offset must have the same number of elements \"\n                                 \"as the channels of x, got \",\n                                 offset.NumElements(), \" and \", num_channels));\n-    if (estimated_mean.NumElements() != 0) {\n+    if (!is_training_ || exponential_avg_factor_ != 1.) {\n+      std::string prefix_msg = is_training_ ? \"When exponential_avg_factor != 1\"\n+                                            : \"When is_training=false\";\n       OP_REQUIRES(context, estimated_mean.NumElements() == num_channels,\n                   errors::InvalidArgument(\n-                      \"mean must be empty or have the same number of \"\n-                      \"elements as the channels of x, got \",\n+                      prefix_msg,\n+                      \", mean must have the same number \"\n+                      \"of elements as the channels of x, got \",\n                       estimated_mean.NumElements(), \" and \", num_channels));\n-    }\n-    if (estimated_variance.NumElements() != 0) {\n       OP_REQUIRES(context, estimated_variance.NumElements() == num_channels,\n                   errors::InvalidArgument(\n-                      \"variance must be empty or have the same number of \"\n-                      \"elements as the channels of x, got \",\n+                      prefix_msg,\n+                      \", variance must have the same \"\n+                      \"number of elements as the channels of x, got \",\n                       estimated_variance.NumElements(), \" and \", num_channels));\n     }\n \n@@ -1543,6 +1545,11 @@ class FusedBatchNormGradOpBase : public OpKernel {\n                 errors::InvalidArgument(\n                     \"saved variance must be 1-dimensional\",\n                     saved_maybe_inv_var_or_pop_var.shape().DebugString()));\n+    OP_REQUIRES(\n+        context, x.shape() == y_backprop.shape(),\n+        errors::InvalidArgument(\n+            \"x and y_backprop must have same shape, but x has shape \",\n+            x.shape(), \" and y_backprop has shape \", y_backprop.shape()));\n     if (use_activation) {\n       OP_REQUIRES(\n           context, x.dim_size(3) % 4 == 0,\n@@ -1569,6 +1576,23 @@ class FusedBatchNormGradOpBase : public OpKernel {\n                   errors::InvalidArgument(\"Error during tensor copy.\"));\n     }\n \n+    const auto num_channels = GetTensorDim(x, tensor_format_, 'C');\n+    OP_REQUIRES(\n+        context, scale.NumElements() == num_channels,\n+        errors::InvalidArgument(\"scale must have the same number of elements \"\n+                                \"as the channels of x, got \",\n+                                scale.NumElements(), \" and \", num_channels));\n+    OP_REQUIRES(\n+        context, saved_mean_or_pop_mean.NumElements() == num_channels,\n+        errors::InvalidArgument(\"reserve_space_1 must have the same number of \"\n+                                \"elements as the channels of x, got \",\n+                                scale.NumElements(), \" and \", num_channels));\n+    OP_REQUIRES(\n+        context, saved_maybe_inv_var_or_pop_var.NumElements() == num_channels,\n+        errors::InvalidArgument(\"reserve_space_2 must have the same number of \"\n+                                \"elements as the channels of x, got \",\n+                                scale.NumElements(), \" and \", num_channels));\n+\n     Tensor* x_backprop = nullptr;\n     auto alloc_shape = use_reshape ? dest_shape : x_shape;\n     OP_REQUIRES_OK(context,"