"diff --git a/tensorflow/core/grappler/optimizers/auto_parallel_test.cc b/tensorflow/core/grappler/optimizers/auto_parallel_test.cc\nindex 1c3186f1ee6..3af03a09613 100644\n--- a/tensorflow/core/grappler/optimizers/auto_parallel_test.cc\n+++ b/tensorflow/core/grappler/optimizers/auto_parallel_test.cc\n@@ -126,6 +126,30 @@ TEST_F(AutoParallelTest, SimpleParallel) {\n   EXPECT_EQ(\"^AutoParallel-Control-Fetch\", node_gradient.input(0));\n }\n \n+TEST_F(AutoParallelTest, SimpleParallelNoDequeue) {\n+  tensorflow::Scope s = tensorflow::Scope::DisabledShapeInferenceScope();\n+  Output constant_a = ops::Const(s.WithOpName(\"constant_a\"), 1.0f, {1});\n+  Output constant_c = ops::Const(s.WithOpName(\"constant_c\"), 1.0f, {1});\n+  Output constant_b = ops::Const(s.WithOpName(\"constant_b\"), 1, {1});\n+  Output var = ops::Variable(s.WithOpName(\"var\"), {1}, DT_FLOAT);\n+  Output assign = ops::Assign(s.WithOpName(\"assign\"), {var}, {constant_a});\n+  Output add = ops::AddN(s.WithOpName(\"add\"), {constant_a, constant_c});\n+  Output learning_rate = ops::Const(s.WithOpName(\"learning_rate\"), 0.01f, {1});\n+  Output apply_gradient = ops::ApplyGradientDescent(\n+      s.WithOpName(\"apply_gradient\"), {var}, {learning_rate}, {add});\n+\n+  GrapplerItem item;\n+  item.init_ops.push_back(\"assign\");\n+  item.fetch.push_back(\"apply_gradient\");\n+  item.init_ops.push_back(\"assign\");\n+  TF_CHECK_OK(s.ToGraphDef(&item.graph));\n+\n+  AutoParallel parallel(2);\n+  GraphDef output;\n+  Status status = parallel.Optimize(nullptr, item, &output);\n+  TF_EXPECT_OK(status);\n+}\n+\n }  // namespace\n }  // namespace grappler\n }  // namespace tensorflow"