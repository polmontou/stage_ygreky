"diff --git a/tensorflow/core/kernels/quantized_pooling_ops.cc b/tensorflow/core/kernels/quantized_pooling_ops.cc\nindex 17df3c22367..b512369b3c4 100644\n--- a/tensorflow/core/kernels/quantized_pooling_ops.cc\n+++ b/tensorflow/core/kernels/quantized_pooling_ops.cc\n@@ -15,6 +15,8 @@ limitations under the License.\n \n // See docs in ../ops/nn_ops.cc.\n \n+#include \"tensorflow/core/framework/op_requires.h\"\n+#include \"tensorflow/core/platform/errors.h\"\n #define EIGEN_USE_THREADS\n \n #include \"third_party/eigen3/unsupported/Eigen/CXX11/Tensor\"\n@@ -117,6 +119,18 @@ class QuantizedMaxPoolingOp : public MaxPoolingOp<Device, T> {\n       : MaxPoolingOp<Device, T>(context) {}\n \n   void Compute(OpKernelContext* context) override {\n+    auto min_input_tensor = context->input(1);\n+    auto max_input_tensor = context->input(2);\n+    OP_REQUIRES(\n+        context, min_input_tensor.NumElements() == 1,\n+        errors::InvalidArgument(\n+            \"min_input must be a scalar float value, got tensor with shape \",\n+            min_input_tensor.shape()));\n+    OP_REQUIRES(\n+        context, max_input_tensor.NumElements() == 1,\n+        errors::InvalidArgument(\n+            \"max_input must be a scalar float value, got tensor with shape \",\n+            max_input_tensor.shape()));\n     const float min_input = context->input(1).flat<float>()(0);\n     const float max_input = context->input(2).flat<float>()(0);\n     MaxPoolingOp<Device, T>::Compute(context);"