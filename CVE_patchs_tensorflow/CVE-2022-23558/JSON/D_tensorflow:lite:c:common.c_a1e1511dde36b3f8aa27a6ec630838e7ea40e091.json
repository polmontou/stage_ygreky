"diff --git a/tensorflow/lite/c/common.c b/tensorflow/lite/c/common.c\nindex ef4d3ffdec5..d149d22c567 100644\n--- a/tensorflow/lite/c/common.c\n+++ b/tensorflow/lite/c/common.c\n@@ -21,10 +21,10 @@ limitations under the License.\n #include <string.h>\n #endif  // TF_LITE_STATIC_MEMORY\n \n-int TfLiteIntArrayGetSizeInBytes(int size) {\n+size_t TfLiteIntArrayGetSizeInBytes(int size) {\n   static TfLiteIntArray dummy;\n \n-  int computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;\n+  size_t computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;\n #if defined(_MSC_VER)\n   // Context for why this is needed is in http://b/189926408#comment21\n   computed_size -= sizeof(dummy.data[0]);\n@@ -51,7 +51,7 @@ int TfLiteIntArrayEqualsArray(const TfLiteIntArray* a, int b_size,\n #ifndef TF_LITE_STATIC_MEMORY\n \n TfLiteIntArray* TfLiteIntArrayCreate(int size) {\n-  int alloc_size = TfLiteIntArrayGetSizeInBytes(size);\n+  size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);\n   if (alloc_size <= 0) return NULL;\n   TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);\n   if (!ret) return ret;"