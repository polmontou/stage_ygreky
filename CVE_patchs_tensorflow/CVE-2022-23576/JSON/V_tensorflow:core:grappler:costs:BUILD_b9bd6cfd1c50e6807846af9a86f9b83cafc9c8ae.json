"load(\"//tensorflow:tensorflow.bzl\", \"filegroup\")\nload(\"//tensorflow/core/platform:rules_cc.bzl\", \"cc_library\")\nload(\n    \"//tensorflow:tensorflow.bzl\",\n    \"tf_cc_test\",\n    \"tf_cuda_library\",\n)\nload(\n    \"//tensorflow/core/platform:build_config.bzl\",\n    \"tf_proto_library\",\n    \"tf_protos_grappler\",\n    \"tf_pyclif_proto_library\",\n)\n\npackage(\n    licenses = [\"notice\"],\n)\n\nalias(\n    name = \"graph_properties_testdata\",\n    actual = \"//tensorflow/core/grappler/costs/graph_properties_testdata:graph_properties_testdata\",\n    visibility = [\"//visibility:public\"],\n)\n\ntf_proto_library(\n    name = \"op_performance_data\",\n    srcs = [\"op_performance_data.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \"//tensorflow/core/framework:attr_value_proto\",\n        \"//tensorflow/core/framework:resource_handle_proto\",\n        \"//tensorflow/core/framework:tensor_proto\",\n        \"//tensorflow/core/framework:tensor_shape_proto\",\n        \"//tensorflow/core/framework:types_proto\",\n        \"//tensorflow/core/protobuf:for_core_protos\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n\ntf_pyclif_proto_library(\n    name = \"op_performance_data_pyclif\",\n    proto_lib = \":op_performance_data\",\n    proto_srcfile = \"op_performance_data.proto\",\n    visibility = [\"//visibility:public\"],\n)\n\nfilegroup(\n    name = \"pywrap_required_hdrs\",\n    srcs = [\n        \"analytical_cost_estimator.h\",\n        \"cost_estimator.h\",\n        \"graph_memory.h\",\n        \"graph_properties.h\",\n        \"measuring_cost_estimator.h\",\n        \"op_context.h\",\n        \"op_level_cost_estimator.h\",\n        \"utils.h\",\n        \"virtual_placer.h\",\n        \"virtual_scheduler.h\",\n    ],\n    visibility = [\n        \"//tensorflow/python/grappler:__pkg__\",\n    ],\n)\n\ncc_library(\n    name = \"graph_properties\",\n    srcs = [\"graph_properties.cc\"],\n    hdrs = [\"graph_properties.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":utils\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/types:optional\",\n        \"//tensorflow/core/grappler/utils:functions\",\n        \"//tensorflow/core/grappler/utils:topological_sort\",\n        \"//tensorflow/core/grappler:mutable_graph_view\",\n        \"//tensorflow/core/grappler:op_types\",\n        \"//tensorflow/core:core_cpu_base\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/grappler:grappler_item\",\n        \"//tensorflow/core/grappler:utils\",\n        \"//tensorflow/core/grappler/clusters:cluster\",\n        \"//tensorflow/core/grappler/optimizers:evaluation_utils\",\n    ] + tf_protos_grappler(),\n)\n\ntf_cc_test(\n    name = \"graph_properties_test\",\n    srcs = [\"graph_properties_test.cc\"],\n    args = [\"--heap_check=\"],  # The GPU tracer leaks memory. TODO(b/185483595): use a dependency instead of a flag\n    data = [\":graph_properties_testdata\"],\n    tags = [\n        \"nomsan\",  # TODO(b/160921160): broken by NOAUTOROLLBACK CL\n    ],\n    deps = [\n        \":graph_properties\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:functional_ops\",\n        \"//tensorflow/cc:scope\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_proto_parsing\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/framework:tensor_testutil\",\n        \"//tensorflow/core/graph:mkl_graph_util\",\n        \"//tensorflow/core/grappler:grappler_item\",\n        \"//tensorflow/core/grappler/clusters:single_machine\",\n        \"//tensorflow/core/grappler/inputs:trivial_test_graph_input_yielder\",\n        \"//tensorflow/core/grappler/inputs:utils\",\n    ],\n)\n\ncc_library(\n    name = \"graph_memory\",\n    srcs = [\"graph_memory.cc\"],\n    hdrs = [\"graph_memory.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":cost_estimator\",\n        \":graph_properties\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/grappler:grappler_item\",\n        \"//tensorflow/core/grappler:utils\",\n        \"//tensorflow/core/grappler/clusters:cluster\",\n        \"//tensorflow/core/grappler/clusters:virtual_cluster\",\n    ],\n)\n\ntf_cc_test(\n    name = \"graph_memory_test\",\n    srcs = [\"graph_memory_test.cc\"],\n    args = [\"--heap_check=\"],  # The GPU tracer leaks memory. TODO(b/185483595): use a dependency instead of a flag\n    deps = [\n        \":graph_memory\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/grappler:grappler_item\",\n        \"//tensorflow/core/grappler/inputs:trivial_test_graph_input_yielder\",\n    ],\n)\n\ncc_library(\n    name = \"robust_stats\",\n    srcs = [\"robust_stats.cc\"],\n    hdrs = [\"robust_stats.h\"],\n    visibility = [\"//visibility:public\"],\n)\n\ntf_cc_test(\n    name = \"robust_stats_test\",\n    srcs = [\"robust_stats_test.cc\"],\n    deps = [\n        \":robust_stats\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ntf_cuda_library(\n    name = \"utils\",\n    srcs = [\"utils.cc\"],\n    hdrs = [\"utils.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":cost_estimator\",\n        \"//third_party/eigen3\",\n        \"@com_google_absl//absl/container:node_hash_map\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/strings:str_format\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:graph\",\n        \"//tensorflow/core/common_runtime/gpu:gpu_id\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_proto_parsing\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/grappler:utils\",\n        \"//tensorflow/core/grappler/clusters:utils\",\n    ] + tf_protos_grappler(),\n)\n\ntf_cc_test(\n    name = \"utils_test\",\n    srcs = [\"utils_test.cc\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":utils\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core:all_kernels\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/framework:tensor_testutil\",\n    ],\n)\n\ncc_library(\n    name = \"cost_estimator\",\n    srcs = [\"cost_estimator.cc\"],\n    hdrs = [\"cost_estimator.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ntf_cc_test(\n    name = \"cost_estimator_test\",\n    srcs = [\"cost_estimator_test.cc\"],\n    deps = [\n        \":cost_estimator\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ncc_library(\n    name = \"virtual_placer\",\n    srcs = [\"virtual_placer.cc\"],\n    hdrs = [\"virtual_placer.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/grappler:devices\",\n        \"//tensorflow/core/grappler/clusters:cluster\",\n    ],\n)\n\ntf_cc_test(\n    name = \"virtual_placer_test\",\n    srcs = [\"virtual_placer_test.cc\"],\n    deps = [\n        \":virtual_placer\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/grappler/clusters:virtual_cluster\",\n    ],\n)\n\ncc_library(\n    name = \"op_context\",\n    hdrs = [\"op_context.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"//tensorflow/core:protos_all_cc\",\n    ] + tf_protos_grappler(),\n)\n\ncc_library(\n    name = \"virtual_scheduler\",\n    srcs = [\"virtual_scheduler.cc\"],\n    hdrs = [\"virtual_scheduler.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":cost_estimator\",\n        \":graph_properties\",\n        \":op_context\",\n        \":utils\",\n        \":virtual_placer\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/grappler:grappler_item\",\n        \"//tensorflow/core/grappler:op_types\",\n        \"//tensorflow/core/grappler:utils\",\n        \"//tensorflow/core/grappler/clusters:utils\",\n        \"//tensorflow/core/grappler/utils:transitive_fanin\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/strings:str_format\",\n    ],\n)\n\ntf_cc_test(\n    name = \"virtual_scheduler_test\",\n    srcs = [\"virtual_scheduler_test.cc\"],\n    deps = [\n        \":graph_properties\",\n        \":utils\",\n        \":virtual_placer\",\n        \":virtual_scheduler\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:tensorflow\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/grappler/clusters:virtual_cluster\",\n    ],\n)\n\ncc_library(\n    name = \"measuring_cost_estimator\",\n    srcs = [\"measuring_cost_estimator.cc\"],\n    hdrs = [\"measuring_cost_estimator.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":robust_stats\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:lib_proto_parsing\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/grappler:grappler_item\",\n        \"//tensorflow/core/grappler/clusters:cluster\",\n        \"//tensorflow/core/grappler/costs:cost_estimator\",\n        \"//tensorflow/core/kernels:ops_util\",\n    ],\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"op_level_cost_estimator\",\n    srcs = [\"op_level_cost_estimator.cc\"],\n    hdrs = [\"op_level_cost_estimator.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":cost_estimator\",\n        \":op_context\",\n        \":utils\",\n        \"@com_google_absl//absl/strings\",\n        \"//third_party/eigen3\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/grappler/clusters:utils\",\n    ] + tf_protos_grappler(),\n)\n\ntf_cc_test(\n    name = \"op_level_cost_estimator_test\",\n    srcs = [\"op_level_cost_estimator_test.cc\"],\n    tags = [\"no_oss\"],  # b/163222310\n    deps = [\n        \":op_level_cost_estimator\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ncc_library(\n    name = \"analytical_cost_estimator\",\n    srcs = [\"analytical_cost_estimator.cc\"],\n    hdrs = [\"analytical_cost_estimator.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":cost_estimator\",\n        \":graph_properties\",\n        \":op_level_cost_estimator\",\n        \":utils\",\n        \":virtual_placer\",\n        \":virtual_scheduler\",\n        \"//tensorflow/core:core_cpu_base\",\n        \"//tensorflow/core:graph\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/grappler:grappler_item\",\n        \"//tensorflow/core/grappler:op_types\",\n        \"//tensorflow/core/grappler:utils\",\n        \"//tensorflow/core/util:overflow\",\n    ] + tf_protos_grappler(),\n    alwayslink = 1,\n)\n\ntf_cc_test(\n    name = \"analytical_cost_estimator_test\",\n    srcs = [\"analytical_cost_estimator_test.cc\"],\n    deps = [\n        \":analytical_cost_estimator\",\n        \":virtual_scheduler\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:tensorflow\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/grappler/clusters:virtual_cluster\",\n    ],\n)\n\n# copybara:uncomment_begin(google-only)\n# py_proto_library(\n#     name = \"op_performance_data_py_pb2\",\n#     has_services = 0,\n#     api_version = 2,\n#     visibility = [\"//visibility:public\"],\n#     deps = [\":op_performance_data\"],\n# )\n# copybara:uncomment_end"