"diff --git a/tensorflow/cc/saved_model/loader.cc b/tensorflow/cc/saved_model/loader.cc\nindex b06f2281d6a..1022793fda0 100644\n--- a/tensorflow/cc/saved_model/loader.cc\n+++ b/tensorflow/cc/saved_model/loader.cc\n@@ -25,6 +25,7 @@ limitations under the License.\n #include \"tensorflow/core/framework/attr_value.pb.h\"\n #include \"tensorflow/core/framework/function.pb.h\"\n #include \"tensorflow/core/framework/node_def.pb.h\"\n+#include \"tensorflow/core/framework/op_def.pb.h\"\n #include \"tensorflow/core/framework/tensor.pb.h\"\n #include \"tensorflow/core/lib/io/path.h\"\n #include \"tensorflow/core/lib/monitoring/counter.h\"\n@@ -99,6 +100,19 @@ static Status ValidateNode(const NodeDef& node) {\n   return Status::OK();\n }\n \n+static Status ValidateFunctionNotRecursive(const FunctionDef& function) {\n+  const auto& function_name = function.signature().name();\n+  for (const auto& node : function.node_def()) {\n+    if (node.op() == function_name) {\n+      return errors::FailedPrecondition(\n+          \"Function \", function_name,\n+          \" is self recursive and TensorFlow does not support this scenario.\");\n+    }\n+  }\n+\n+  return Status::OK();\n+}\n+\n static Status ValidateSavedTensors(const GraphDef& graph_def) {\n   for (const auto& node : graph_def.node()) {\n     TF_RETURN_IF_ERROR(ValidateNode(node));\n@@ -110,6 +124,10 @@ static Status ValidateSavedTensors(const GraphDef& graph_def) {\n       for (const auto& node : function.node_def()) {\n         TF_RETURN_IF_ERROR(ValidateNode(node));\n       }\n+\n+      // Also check that there is no recursivity in the library\n+      // TODO(mihaimaruseac): Do more than self-recursivity\n+      TF_RETURN_IF_ERROR(ValidateFunctionNotRecursive(function));\n     }\n   }\n "