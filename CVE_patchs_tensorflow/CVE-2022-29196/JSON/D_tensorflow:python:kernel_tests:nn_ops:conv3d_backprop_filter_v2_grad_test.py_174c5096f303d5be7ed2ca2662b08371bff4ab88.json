"diff --git a/tensorflow/python/kernel_tests/nn_ops/conv3d_backprop_filter_v2_grad_test.py b/tensorflow/python/kernel_tests/nn_ops/conv3d_backprop_filter_v2_grad_test.py\nindex f6e84d3c339..c92bb747acf 100644\n--- a/tensorflow/python/kernel_tests/nn_ops/conv3d_backprop_filter_v2_grad_test.py\n+++ b/tensorflow/python/kernel_tests/nn_ops/conv3d_backprop_filter_v2_grad_test.py\n@@ -18,6 +18,7 @@ import numpy as np\n \n from tensorflow.python.framework import constant_op\n from tensorflow.python.framework import dtypes\n+from tensorflow.python.framework import errors\n from tensorflow.python.framework import test_util\n from tensorflow.python.ops import array_ops\n from tensorflow.python.ops import gradient_checker\n@@ -58,6 +59,23 @@ class Conv3DBackpropFilterV2GradTest(test.TestCase):\n           err_tolerance = 1e-3\n           self.assertLess(err, err_tolerance)\n \n+  def testBadFilterShape(self):\n+    strides = [1, 1, 1, 1, 1]\n+    padding = \"VALID\"\n+    tin = constant_op.constant(\n+        .5053710941, shape=[2, 2, 2, 2, 1], dtype=dtypes.float32)\n+    filter_sizes = constant_op.constant(0, shape=[], dtype=dtypes.int32)\n+    out_backprop = constant_op.constant(\n+        .5053710941, shape=[2, 2, 2, 2, 1], dtype=dtypes.float32)\n+\n+    with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),\n+                                \"must be rank 1\"):\n+      nn_ops.conv3d_backprop_filter_v2(\n+          input=tin,\n+          filter_sizes=filter_sizes,\n+          out_backprop=out_backprop,\n+          strides=strides,\n+          padding=padding)\n \n if __name__ == \"__main__\":\n   test.main()"