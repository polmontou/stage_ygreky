"load(\"//tensorflow/core/platform:rules_cc.bzl\", \"cc_library\")\nload(\"//tensorflow:tensorflow.bzl\", \"tf_kernel_library\")\n\npackage(\n    default_visibility = [\n        \"//tensorflow/compiler/tf2xla:internal\",\n        \"//third_party/cloud_tpu/inference_converter:__subpackages__\",\n    ],\n    licenses = [\"notice\"],\n)\n\ntf_kernel_library(\n    name = \"xla_ops\",\n    srcs = [\n        \"aggregate_ops.cc\",\n        \"all_reduce_op.cc\",\n        \"approx_topk_op.cc\",\n        \"arg_op.cc\",\n        \"batch_matmul_op.cc\",\n        \"batch_norm_op.cc\",\n        \"batchtospace_op.cc\",\n        \"bcast_ops.cc\",\n        \"beta_op.cc\",\n        \"bias_ops.cc\",\n        \"binary_ops.cc\",\n        \"broadcast_to_op.cc\",\n        \"bucketize_op.cc\",\n        \"cast_op.cc\",\n        \"categorical_op.cc\",\n        \"cholesky_op.cc\",\n        \"clip_by_value_op.cc\",\n        \"concat_op.cc\",\n        \"const_op.cc\",\n        \"conv_ops.cc\",\n        \"cross_op.cc\",\n        \"cwise_ops.cc\",\n        \"cwise_ops.h\",\n        \"data_format_ops.cc\",\n        \"depthtospace_op.cc\",\n        \"dequantize_op.cc\",\n        \"device_index_op.cc\",\n        \"diag_op.cc\",\n        \"dynamic_partition_op.cc\",\n        \"dynamic_slice_ops.cc\",\n        \"dynamic_stitch_op.cc\",\n        \"einsum_op.cc\",\n        \"elu_op.cc\",\n        \"elu_op.h\",\n        \"empty_op.cc\",\n        \"ensure_shape_op.cc\",\n        \"extract_image_patches_op.cc\",\n        \"fake_param_op.cc\",\n        \"fake_quantize_ops.cc\",\n        \"fft_ops.cc\",\n        \"fill_op.cc\",\n        \"function_ops.cc\",\n        \"gather_op.cc\",\n        \"gather_op_helpers.h\",\n        \"gather_scatter_ops.cc\",\n        \"identity_op.cc\",\n        \"image_ops.cc\",\n        \"image_resize_ops.cc\",\n        \"in_topk_op.cc\",\n        \"index_ops.cc\",\n        \"l2loss_op.cc\",\n        \"listdiff_op.cc\",\n        \"lower_upper_bound_ops.cc\",\n        \"lrn_ops.cc\",\n        \"matmul_op.cc\",\n        \"matrix_band_part_op.cc\",\n        \"matrix_diag_ops.cc\",\n        \"matrix_inverse_op.cc\",\n        \"matrix_solve_op.cc\",\n        \"matrix_triangular_solve_op.cc\",\n        \"mirror_pad_op.cc\",\n        \"next_after_op.cc\",\n        \"no_op.cc\",\n        \"one_hot_op.cc\",\n        \"pack_op.cc\",\n        \"pad_op.cc\",\n        \"pooling_ops.cc\",\n        \"qr_op.cc\",\n        \"quantize_and_dequantize_op.cc\",\n        \"random_ops.cc\",\n        \"random_ops_util.cc\",\n        \"random_ops_util.h\",\n        \"reduce_window_op.cc\",\n        \"reduction_ops.cc\",\n        \"reduction_ops.h\",\n        \"reduction_ops_common.cc\",\n        \"relu_op.cc\",\n        \"relu_op.h\",\n        \"replica_id_op.cc\",\n        \"reshape_op.cc\",\n        \"retval_op.cc\",\n        \"reverse_op.cc\",\n        \"reverse_sequence_op.cc\",\n        \"roll_op.cc\",\n        \"scan_ops.cc\",\n        \"scatter_nd_op.cc\",\n        \"segment_reduction_ops.cc\",\n        \"select_op.cc\",\n        \"sendrecv_ops.cc\",\n        \"sequence_ops.cc\",\n        \"shape_op.cc\",\n        \"shape_util.cc\",\n        \"sharding_op.cc\",\n        \"sharding_util_ops.cc\",\n        \"slice_op.cc\",\n        \"softmax_op.cc\",\n        \"sort_ops.cc\",\n        \"spacetobatch_op.cc\",\n        \"spacetodepth_op.cc\",\n        \"sparse_to_dense_op.cc\",\n        \"split_op.cc\",\n        \"spmd_manual_sharding_ops.cc\",\n        \"stack_ops.cc\",\n        \"stateful_random_ops.cc\",\n        \"stateless_random_ops.cc\",\n        \"stateless_random_ops_v2.cc\",\n        \"strided_slice_op.cc\",\n        \"tensor_array_ops.cc\",\n        \"tensor_list_ops.cc\",\n        \"tile_ops.cc\",\n        \"to_bool_op.cc\",\n        \"topk_op.cc\",\n        \"training_ops.cc\",\n        \"transpose_op.cc\",\n        \"tridiagonal_ops.cc\",\n        \"unary_ops.cc\",\n        \"unary_ops_composition.cc\",\n        \"unique_op.cc\",\n        \"unpack_op.cc\",\n        \"variable_ops.cc\",\n        \"where_op.cc\",\n        \"xla_broadcast_helper_op.cc\",\n        \"xla_conv_op.cc\",\n        \"xla_custom_call_op.cc\",\n        \"xla_dequantize_op.cc\",\n        \"xla_dot_op.cc\",\n        \"xla_optimization_barrier_op.cc\",\n        \"xla_pad_op.cc\",\n        \"xla_reduce_op.cc\",\n        \"xla_select_and_scatter_op.cc\",\n        \"xla_self_adjoint_eig_op.cc\",\n        \"xla_svd_op.cc\",\n    ],\n    hdrs = [\n        \"image_resize_ops.h\",\n        \"index_ops.h\",\n        \"shape_util.h\",\n    ],\n    tags = [\"optonly\"],\n    deps = [\n        \":case_op\",\n        \":conv_op_helpers\",\n        \":if_op\",\n        \":tensor_list_utils\",\n        \":while_op\",\n        \"//tensorflow/compiler/jit:xla_activity_listener\",\n        \"//tensorflow/compiler/jit:xla_activity_proto_cc\",\n        \"//tensorflow/compiler/tf2xla:common\",\n        \"//tensorflow/compiler/tf2xla:mlir_xla_op_kernel\",\n        \"//tensorflow/compiler/tf2xla:xla_compilation_device\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla:xla_context\",\n        \"//tensorflow/compiler/tf2xla:xla_helpers\",\n        \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n        \"//tensorflow/compiler/tf2xla:xla_resource\",\n        \"//tensorflow/compiler/tf2xla/lib:broadcast\",\n        \"//tensorflow/compiler/tf2xla/lib:data_format\",\n        \"//tensorflow/compiler/tf2xla/lib:random\",\n        \"//tensorflow/compiler/tf2xla/lib:scatter\",\n        \"//tensorflow/compiler/tf2xla/lib:util\",\n        \"//tensorflow/compiler/tf2xla/ops:xla_ops\",\n        \"//tensorflow/compiler/xla:array4d\",\n        \"//tensorflow/compiler/xla:comparison_util\",\n        \"//tensorflow/compiler/xla:literal\",\n        \"//tensorflow/compiler/xla:literal_util\",\n        \"//tensorflow/compiler/xla:shape_util\",\n        \"//tensorflow/compiler/xla:sharding_op_util\",\n        \"//tensorflow/compiler/xla:status_macros\",\n        \"//tensorflow/compiler/xla:util\",\n        \"//tensorflow/compiler/xla:xla_data_proto_cc\",\n        \"//tensorflow/compiler/xla/client:client_library\",\n        \"//tensorflow/compiler/xla/client:value_inference\",\n        \"//tensorflow/compiler/xla/client:xla_builder\",\n        \"//tensorflow/compiler/xla/client:xla_computation\",\n        \"//tensorflow/compiler/xla/client/lib:approx_topk\",\n        \"//tensorflow/compiler/xla/client/lib:arithmetic\",\n        \"//tensorflow/compiler/xla/client/lib:comparators\",\n        \"//tensorflow/compiler/xla/client/lib:constants\",\n        \"//tensorflow/compiler/xla/client/lib:dynamic_shaped_ops\",\n        \"//tensorflow/compiler/xla/client/lib:loops\",\n        \"//tensorflow/compiler/xla/client/lib:math\",\n        \"//tensorflow/compiler/xla/client/lib:matrix\",\n        \"//tensorflow/compiler/xla/client/lib:pooling\",\n        \"//tensorflow/compiler/xla/client/lib:prng\",\n        \"//tensorflow/compiler/xla/client/lib:qr\",\n        \"//tensorflow/compiler/xla/client/lib:quantize\",\n        \"//tensorflow/compiler/xla/client/lib:self_adjoint_eig\",\n        \"//tensorflow/compiler/xla/client/lib:slicing\",\n        \"//tensorflow/compiler/xla/client/lib:sorting\",\n        \"//tensorflow/compiler/xla/client/lib:svd\",\n        \"//tensorflow/compiler/xla/client/lib:tridiagonal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/kernels:resource_variable_util\",\n        \"//tensorflow/core/kernels:scatter_nd_util\",\n        \"//tensorflow/core/kernels:stateful_random_ops_header\",\n        \"//tensorflow/core/kernels:stateless_random_ops_v2_header\",\n        \"//tensorflow/core/tpu:tpu_defs\",\n        \"//tensorflow/core/util:overflow\",\n        \"//tensorflow/stream_executor/lib\",\n        \"@com_google_absl//absl/algorithm:container\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/strings:str_format\",\n        \"@com_google_absl//absl/types:optional\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)\n\n# A separate cc_library for resampler_ops is needed because resampler is in\n# contrib/, and thus the declaration of resampler cannot be pulled into the deps\n# of xla_ops. Therefore, resampler_ops is its own cc_library target, and its\n# corresponding tf_kernel_library is defined in contrib/resampler/BUILD.\ncc_library(\n    name = \"resampler_ops\",\n    srcs = [\"resampler_ops.cc\"],\n    hdrs = [\"resampler_ops.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"//tensorflow/compiler/tf2xla:common\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/xla:array4d\",\n        \"//tensorflow/compiler/xla:literal\",\n        \"//tensorflow/compiler/xla:shape_util\",\n        \"//tensorflow/compiler/xla:xla_data_proto_cc\",\n        \"//tensorflow/compiler/xla/client:xla_builder\",\n        \"//tensorflow/compiler/xla/client/lib:arithmetic\",\n        \"//tensorflow/compiler/xla/client/lib:constants\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n    alwayslink = 1,\n)\n\n# See note on resampler_ops target for why this is also a seprate op.\ncc_library(\n    name = \"resampler_addon_ops\",\n    srcs = [\"resampler_addon_ops.cc\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":resampler_ops\",\n        \"//tensorflow/compiler/tf2xla:common\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla:xla_helpers\",\n        \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n    ],\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"conv_op_helpers\",\n    srcs = [\"conv_op_helpers.cc\"],\n    hdrs = [\"conv_op_helpers.h\"],\n    deps = [\n        \"//tensorflow/compiler/tf2xla:common\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla:xla_helpers\",\n        \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n        \"//tensorflow/compiler/xla:literal_util\",\n        \"//tensorflow/compiler/xla:statusor\",\n        \"//tensorflow/compiler/xla:util\",\n        \"//tensorflow/compiler/xla/client:xla_builder\",\n        \"//tensorflow/compiler/xla/client/lib:arithmetic\",\n        \"//tensorflow/compiler/xla/client/lib:constants\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//tensorflow/core/kernels:conv_grad_shape_utils\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)\n\ncc_library(\n    name = \"tensor_list_utils\",\n    srcs = [\"tensor_list_utils.cc\"],\n    hdrs = [\"tensor_list_utils.h\"],\n    deps = [\n        \"//tensorflow/compiler/tf2xla:common\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/xla:literal_util\",\n        \"//tensorflow/compiler/xla:shape_util\",\n        \"//tensorflow/compiler/xla:status_macros\",\n        \"//tensorflow/compiler/xla:statusor\",\n        \"//tensorflow/compiler/xla:util\",\n        \"//tensorflow/compiler/xla:xla_data_proto_cc\",\n        \"//tensorflow/compiler/xla/client:xla_builder\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ncc_library(\n    name = \"if_while_utils\",\n    srcs = [\"if_while_utils.cc\"],\n    hdrs = [\"if_while_utils.h\"],\n    deps = [\n        \"//tensorflow/compiler/tf2xla:common\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla/ops:xla_ops\",\n        \"//tensorflow/compiler/xla:literal\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"while_op\",\n    srcs = [\"while_op.cc\"],\n    hdrs = [\"while_op.h\"],\n    deps = [\n        \":if_while_utils\",\n        \":tensor_list_utils\",\n        \"//tensorflow/compiler/tf2xla:common\",\n        \"//tensorflow/compiler/tf2xla:side_effect_util\",\n        \"//tensorflow/compiler/tf2xla:tf2xla_util\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla:xla_helpers\",\n        \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n        \"//tensorflow/compiler/tf2xla/ops:xla_ops\",\n        \"//tensorflow/compiler/xla:literal\",\n        \"//tensorflow/compiler/xla:status_macros\",\n        \"//tensorflow/compiler/xla/client:xla_builder\",\n        \"//tensorflow/compiler/xla/client:xla_computation\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"if_op\",\n    srcs = [\"if_op.cc\"],\n    hdrs = [\"if_op.h\"],\n    deps = [\n        \":if_while_utils\",\n        \"//tensorflow/compiler/tf2xla:common\",\n        \"//tensorflow/compiler/tf2xla:side_effect_util\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla:xla_context\",\n        \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n        \"//tensorflow/compiler/tf2xla/ops:xla_ops\",\n        \"//tensorflow/compiler/xla:literal\",\n        \"//tensorflow/compiler/xla/client:xla_builder\",\n        \"//tensorflow/compiler/xla/client/lib:dynamic_shaped_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"case_op\",\n    srcs = [\"case_op.cc\"],\n    hdrs = [\"case_op.h\"],\n    deps = [\n        \":if_while_utils\",\n        \"//tensorflow/compiler/tf2xla:common\",\n        \"//tensorflow/compiler/tf2xla:side_effect_util\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla:xla_context\",\n        \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n        \"//tensorflow/compiler/tf2xla/ops:xla_ops\",\n        \"//tensorflow/compiler/xla:literal\",\n        \"//tensorflow/compiler/xla/client:xla_builder\",\n        \"//tensorflow/compiler/xla/client/lib:constants\",\n        \"//tensorflow/compiler/xla/client/lib:dynamic_shaped_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\n# Kernels that have a dummy (no-op) implementation.\ntf_kernel_library(\n    name = \"xla_dummy_ops\",\n    srcs = [\n        \"assert_op.cc\",\n        \"check_numerics_op.cc\",\n    ],\n    deps = [\n        \"//tensorflow/compiler/tf2xla:mlir_xla_op_kernel\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n        \"//tensorflow/core:array_ops_op_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:logging_ops_op_lib\",\n    ],\n    alwayslink = 1,\n)"