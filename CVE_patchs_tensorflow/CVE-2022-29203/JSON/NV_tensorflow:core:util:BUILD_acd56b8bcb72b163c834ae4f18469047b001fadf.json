"load(\n    \"//tensorflow/core/platform:build_config.bzl\",\n    \"tf_kernel_tests_linkstatic\",\n    \"tf_proto_library\",\n)\nload(\n    \"//tensorflow/core/platform:rules_cc.bzl\",\n    \"cc_library\",\n)\nload(\n    \"//tensorflow:tensorflow.bzl\",\n    \"tf_cc_test\",\n    \"tf_cc_tests\",\n    \"tf_copts\",\n    \"tf_cuda_library\",\n    \"tf_cuda_only_cc_test\",\n    \"tf_kernel_library\",\n    \"tf_mkl_kernel_library\",\n)\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"filegroup\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"get_compatible_with_portable\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"tf_version_info_genrule\")\nload(\n    \"//tensorflow/core/platform:build_config_root.bzl\",\n    \"if_static\",\n)\nload(\"@local_config_cuda//cuda:build_defs.bzl\", \"if_cuda\")\nload(\n    \"@local_config_rocm//rocm:build_defs.bzl\",\n    \"if_rocm\",\n)\n\ndefault_package_visibility = [\n    \"//tensorflow/core:__subpackages__\",\n]\n\npackage(\n    default_visibility = default_package_visibility,\n    features = [\n        \"-layering_check\",\n        \"-parse_headers\",\n    ],\n    licenses = [\"notice\"],\n)\n\n# List of exported source files.\nexports_files(\n    srcs = [\n        \"event.proto\",\n        \"example_proto_fast_parsing_test.proto\",\n        \"image_resizer_state.h\",\n        \"memmapped_file_system.proto\",\n        \"saved_tensor_slice.proto\",\n    ],\n    visibility = [\n        \"//tensorflow:internal\",\n        \"//tensorflow/core:__pkg__\",\n    ],\n)\n\n# Export source files needed for mobile builds, which do not use granular targets.\nfilegroup(\n    name = \"mobile_srcs_no_runtime\",\n    srcs = [\n        \"overflow.h\",\n        \"padding.cc\",\n        \"padding.h\",\n        \"tensor_format.cc\",\n        \"tensor_format.h\",\n    ],\n)\n\nfilegroup(\n    name = \"mobile_srcs_only_runtime\",\n    srcs = [\n        \"batch_util.cc\",\n        \"batch_util.h\",\n        \"bcast.cc\",\n        \"bcast.h\",\n        \"command_line_flags.cc\",\n        \"command_line_flags.h\",\n        \"determinism.cc\",\n        \"determinism.h\",\n        \"device_name_utils.cc\",\n        \"device_name_utils.h\",\n        \"dump_graph.cc\",\n        \"dump_graph.h\",\n        \"einsum_op_util.cc\",\n        \"einsum_op_util.h\",\n        \"env_var.cc\",\n        \"env_var.h\",\n        \"equal_graph_def.cc\",\n        \"equal_graph_def.h\",\n        \"example_proto_fast_parsing.cc\",\n        \"example_proto_fast_parsing.h\",\n        \"example_proto_helper.cc\",\n        \"example_proto_helper.h\",\n        \"guarded_philox_random.cc\",\n        \"guarded_philox_random.h\",\n        \"managed_stack_trace.h\",\n        \"matmul_autotune.cc\",\n        \"matmul_autotune.h\",\n        \"matmul_bcast.h\",\n        \"mirror_pad_mode.cc\",\n        \"mirror_pad_mode.h\",\n        \"port.cc\",\n        \"port.h\",\n        \"presized_cuckoo_map.h\",\n        \"ptr_util.h\",\n        \"ragged_to_dense_util.cc\",\n        \"ragged_to_dense_util.h\",\n        \"ragged_to_dense_util_common.h\",\n        \"reffed_status_callback.h\",\n        \"saved_tensor_slice_util.cc\",\n        \"saved_tensor_slice_util.h\",\n        \"stat_summarizer.cc\",\n        \"stat_summarizer.h\",\n        \"strided_slice_op.cc\",\n        \"strided_slice_op.h\",\n        \"tensor_ops_util.h\",\n        \"tensor_slice_reader.cc\",\n        \"tensor_slice_reader.h\",\n        \"tensor_slice_reader_cache.cc\",\n        \"tensor_slice_reader_cache.h\",\n        \"tensor_slice_set.cc\",\n        \"tensor_slice_set.h\",\n        \"tensor_slice_util.h\",\n        \"tensor_slice_writer.cc\",\n        \"tensor_slice_writer.h\",\n        \"use_cudnn.cc\",\n        \"use_cudnn.h\",\n        \"util.cc\",\n        \"util.h\",\n        \"work_sharder.cc\",\n        \"work_sharder.h\",\n    ],\n)\n\nfilegroup(\n    name = \"framework_internal_private_hdrs\",\n    srcs = [\n        \"activation_mode.h\",\n        \"batch_util.h\",\n        \"bcast.h\",\n        \"command_line_flags.h\",\n        \"debug_events_writer.h\",\n        \"device_name_utils.h\",\n        \"dump_graph.h\",\n        \"einsum_op_util.h\",\n        \"env_var.h\",\n        \"equal_graph_def.h\",\n        \"events_writer.h\",\n        \"example_proto_fast_parsing.h\",\n        \"example_proto_helper.h\",\n        \"exec_on_stall.h\",\n        \"gpu_cuda_alias.h\",\n        \"gpu_device_functions.h\",\n        \"gpu_kernel_helper.h\",\n        \"gpu_launch_config.h\",\n        \"guarded_philox_random.h\",\n        \"matmul_autotune.h\",\n        \"matmul_bcast.h\",\n        \"mirror_pad_mode.h\",\n        \"mkl_threadpool.h\",\n        \"mkl_util.h\",\n        \"onednn_env_vars.h\",\n        \"overflow.h\",\n        \"padding.h\",\n        \"permutation_input_iterator.h\",\n        \"permutation_output_iterator.h\",\n        \"presized_cuckoo_map.h\",\n        \"ptr_util.h\",\n        \"reffed_status_callback.h\",\n        \"saved_tensor_slice_util.h\",\n        \"stat_summarizer.h\",\n        \"stat_summarizer_options.h\",\n        \"stats_calculator.h\",\n        \"stream_executor_util.h\",\n        \"strided_slice_op.h\",\n        \"tensor_format.h\",\n        \"tensor_ops_util.h\",\n        \"tensor_slice_reader.h\",\n        \"tensor_slice_reader_cache.h\",\n        \"tensor_slice_set.h\",\n        \"tensor_slice_util.h\",\n        \"tensor_slice_writer.h\",\n        \"transform_output_iterator.h\",\n        \"use_cudnn.h\",\n        \"util.h\",\n        \"work_sharder.h\",\n        \"xla_config_registry.h\",\n    ],\n)\n\nfilegroup(\n    name = \"framework_internal_public_hdrs\",\n    srcs = [\n        \"command_line_flags.h\",\n        \"equal_graph_def.h\",\n        \"presized_cuckoo_map.h\",\n        \"tensor_slice_set.h\",\n        \"tensor_slice_util.h\",\n        \"xla_config_registry.h\",\n    ],\n)\n\nfilegroup(\n    name = \"framework_internal_impl_srcs\",\n    srcs = [\n        \"activation_mode.cc\",\n        \"batch_util.cc\",\n        \"bcast.cc\",\n        \"command_line_flags.cc\",\n        \"debug_events_writer.cc\",\n        \"device_name_utils.cc\",\n        \"dump_graph.cc\",\n        \"equal_graph_def.cc\",\n        \"events_writer.cc\",\n        \"example_proto_fast_parsing.cc\",\n        \"example_proto_helper.cc\",\n        \"guarded_philox_random.cc\",\n        \"matmul_autotune.cc\",\n        \"mirror_pad_mode.cc\",\n        \"saved_tensor_slice_util.cc\",\n        \"stat_summarizer.cc\",\n        \"strided_slice_op.cc\",\n        \"tensor_slice_reader.cc\",\n        \"tensor_slice_reader_cache.cc\",\n        \"tensor_slice_set.cc\",\n        \"tensor_slice_writer.cc\",\n        \"use_cudnn.cc\",\n        \"util.cc\",\n        \"work_sharder.cc\",\n        \"xla_config_registry.cc\",\n    ],\n)\n\nfilegroup(\n    name = \"lib_internal_public_hdrs\",\n    srcs = [\n        \"env_var.h\",\n        \"use_cudnn.h\",\n    ],\n    visibility = [\"//tensorflow/core:__pkg__\"],\n)\n\nfilegroup(\n    name = \"lib_hdrs\",\n    srcs = [\n        \"gpu_cuda_alias.h\",\n    ],\n    visibility = [\"//tensorflow/core:__pkg__\"],\n)\n\nfilegroup(\n    name = \"memmapped_file_system_hdrs\",\n    srcs = [\n        \"memmapped_file_system.h\",\n        \"memmapped_file_system_writer.h\",\n    ],\n)\n\nfilegroup(\n    name = \"memmapped_file_system_srcs\",\n    srcs = [\n        \"memmapped_file_system.cc\",\n        \"memmapped_file_system_writer.cc\",\n    ],\n)\n\nfilegroup(\n    name = \"port_hdrs\",\n    srcs = [\n        \"port.h\",\n    ],\n    visibility = [\n        \"//tensorflow/core:__pkg__\",\n        \"//tensorflow/python:__pkg__\",\n        \"//tensorflow/python/util:__pkg__\",\n    ],\n)\n\nfilegroup(\n    name = \"test_hdrs\",\n    testonly = 1,\n    srcs = [\n        \"reporter.h\",\n    ],\n    visibility = [\"//tensorflow/core:__pkg__\"],\n)\n\nfilegroup(\n    name = \"mkl_util_hdrs\",\n    srcs = [\n        \"mkl_threadpool.h\",\n        \"mkl_util.h\",\n        \"onednn_env_vars.h\",\n    ],\n    visibility = [\"//tensorflow/core:__pkg__\"],\n)\n\nfilegroup(\n    name = \"mkl_util_test_srcs\",\n    testonly = 1,\n    srcs = [\n        \"mkl_util_test.cc\",\n    ],\n    visibility = [\"//tensorflow/core:__pkg__\"],\n)\n\nfilegroup(\n    name = \"android_test_hdrs\",\n    testonly = 1,\n    srcs = [\n        \"reporter.h\",\n    ],\n    visibility = [\"//tensorflow/core:__pkg__\"],\n)\n\nfilegroup(\n    name = \"android_test_srcs\",\n    testonly = 1,\n    srcs = [\n        \"reporter.cc\",\n        \":android_test_hdrs\",\n    ],\n    visibility = [\"//tensorflow/core:__pkg__\"],\n)\n\nfilegroup(\n    name = \"framework_srcs\",\n    srcs = [\n        \"activation_mode.h\",\n        \"batch_util.h\",\n        \"bcast.h\",\n        \"debug_events_writer.h\",\n        \"device_name_utils.h\",\n        \"dump_graph.h\",\n        \"einsum_op_util.h\",\n        \"events_writer.h\",\n        \"example_proto_fast_parsing.h\",\n        \"example_proto_helper.h\",\n        \"gpu_kernel_helper.h\",\n        \"guarded_philox_random.h\",\n        \"managed_stack_trace.h\",\n        \"matmul_autotune.h\",\n        \"matmul_bcast.h\",\n        \"mirror_pad_mode.h\",\n        \"padding.h\",\n        \"port.h\",\n        \"ptr_util.h\",\n        \"reffed_status_callback.h\",\n        \"saved_tensor_slice_util.h\",\n        \"stat_summarizer.h\",\n        \"stat_summarizer_options.h\",\n        \"stream_executor_util.h\",\n        \"strided_slice_op.h\",\n        \"tensor_format.h\",\n        \"tensor_ops_util.h\",\n        \"tensor_slice_reader.h\",\n        \"tensor_slice_reader_cache.h\",\n        \"tensor_slice_writer.h\",\n        \"use_cudnn.h\",\n        \"util.h\",\n        \"work_sharder.h\",\n    ],\n)\n\n# Version info generation needs to be generated in the same package where it\n# is written.\ntf_version_info_genrule(\n    name = \"version_info_gen\",\n    out = \"version_info.h\",\n    compatible_with = get_compatible_with_portable(),\n)\n\ncc_library(\n    name = \"version_info\",\n    hdrs = [\"version_info.h\"],\n    visibility = [\"//visibility:public\"],\n)\n\ncc_library(\n    name = \"stats_calculator_portable\",\n    srcs = [\n        \"stat_summarizer_options.h\",\n        \"stats_calculator.cc\",\n    ],\n    hdrs = [\n        \"stats_calculator.h\",\n    ],\n    copts = tf_copts(),\n    visibility = [\n        \"//tensorflow:internal\",\n    ],\n)\n\ntf_mkl_kernel_library(\n    name = \"onednn_env_vars\",\n    srcs = [\"onednn_env_vars.cc\"],\n    hdrs = [\"onednn_env_vars.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//tensorflow/core/kernels:ops_util\",\n    ],\n)\n\ncc_library(\n    name = \"ragged_to_dense_util_common\",\n    hdrs = [\n        \"ragged_to_dense_util_common.h\",\n    ],\n    visibility = [\n        \"//visibility:public\",\n    ],\n)\n\ncc_library(\n    name = \"ragged_to_dense_util\",\n    srcs = [\n        \"ragged_to_dense_util.cc\",\n    ],\n    hdrs = [\n        \"ragged_to_dense_util.h\",\n    ],\n    deps = [\n        \":ragged_to_dense_util_common\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ntf_cc_test(\n    name = \"ragged_to_dense_util_test\",\n    srcs = [\n        \"ragged_to_dense_util_test.cc\",\n    ],\n    deps = [\n        \":ragged_to_dense_util\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:testlib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\ntf_cc_test(\n    name = \"stats_calculator_test\",\n    srcs = [\"stats_calculator_test.cc\"],\n    deps = [\n        \":stats_calculator_portable\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ncc_library(\n    name = \"reporter\",\n    srcs = [\"reporter.cc\"],\n    hdrs = [\"reporter.h\"],\n    visibility = [\"//tensorflow/core:__subpackages__\"],\n    deps = [\n        \":test_log_proto_impl_cc\",\n        \"//tensorflow/core/platform:env\",\n        \"//tensorflow/core/platform:env_impl\",\n        \"//tensorflow/core/platform:errors\",\n        \"//tensorflow/core/platform:macros\",\n        \"//tensorflow/core/platform:mutex\",\n        \"//tensorflow/core/platform:str_util\",\n        \"//tensorflow/core/platform:types\",\n    ],\n)\n\ncc_library(\n    name = \"port\",\n    srcs = [\"port.cc\"],\n    hdrs = [\"port.h\"],\n    copts = tf_copts(),\n    visibility = [\n        \"//tensorflow/core:__pkg__\",\n        \"//tensorflow/python:__pkg__\",\n        \"//tensorflow/python/util:__pkg__\",\n    ],\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"managed_stack_trace\",\n    hdrs = [\"managed_stack_trace.h\"],\n    visibility = [\n        \"//tensorflow/c/eager:__pkg__\",\n        \"//tensorflow/compiler/mlir/tensorflow:__pkg__\",\n        \"//tensorflow/core:__pkg__\",\n        \"//tensorflow/core/common_runtime/eager:__pkg__\",\n        \"//tensorflow/core/framework:__pkg__\",\n        \"//tensorflow/core/platform:__pkg__\",\n        \"//tensorflow/python:__pkg__\",\n        \"//tensorflow/python/eager:__pkg__\",\n        \"//tensorflow/python/util:__pkg__\",\n    ],\n    deps = [\n        \"//tensorflow/core/platform:stack_frame\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:optional\",\n    ],\n)\n\ntf_cuda_library(\n    name = \"gpu_cuda_alias\",\n    hdrs = [\"gpu_cuda_alias.h\"],\n)\n\ntf_cuda_library(\n    name = \"gpu_device_functions\",\n    hdrs = [\"gpu_device_functions.h\"],\n    deps = [\n        \":gpu_cuda_alias\",\n        \"//tensorflow/core/platform:types\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"overflow\",\n    hdrs = [\"overflow.h\"],\n    visibility = [\n        \"//tensorflow:internal\",\n    ],\n    deps = [\n        \"//tensorflow/core/platform:logging\",\n        \"//tensorflow/core/platform:macros\",\n        \"//tensorflow/core/platform:types\",\n    ],\n)\n\ncc_library(\n    name = \"exec_on_stall\",\n    hdrs = [\"exec_on_stall.h\"],\n    deps = [\n        \"//tensorflow/core/platform:env\",\n        \"//tensorflow/core/platform:mutex\",\n    ],\n)\n\ncc_library(\n    name = \"ptr_util\",\n    hdrs = [\"ptr_util.h\"],\n)\n\ncc_library(\n    name = \"tensor_format\",\n    srcs = [\"tensor_format.cc\"],\n    hdrs = [\"tensor_format.h\"],\n    deps = [\n        \"//tensorflow/core/framework:tensor\",\n        \"//tensorflow/core/lib/gtl:array_slice\",\n        \"//tensorflow/core/lib/gtl:inlined_vector\",\n        \"//tensorflow/core/platform:types\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"padding\",\n    srcs = [\"padding.cc\"],\n    hdrs = [\"padding.h\"],\n    deps = [\n        \":tensor_format\",\n        \"//tensorflow/core/framework:attr_value_proto_cc\",\n        \"//tensorflow/core/lib/core:errors\",\n        \"//tensorflow/core/lib/core:status\",\n    ],\n)\n\ncc_library(\n    name = \"einsum_op_util\",\n    srcs = [\"einsum_op_util.cc\"],\n    hdrs = [\"einsum_op_util.h\"],\n    deps = [\n        \"//tensorflow/core/lib/core:errors\",\n        \"//tensorflow/core/lib/core:status\",\n        \"//tensorflow/core/lib/gtl:inlined_vector\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"env_var\",\n    srcs = [\"env_var.cc\"],\n    hdrs = [\"env_var.h\"],\n    deps = [\n        \"//tensorflow/core/platform:errors\",\n        \"//tensorflow/core/platform:logging\",\n        \"//tensorflow/core/platform:numbers\",\n        \"//tensorflow/core/platform:status\",\n        \"//tensorflow/core/platform:str_util\",\n        \"//tensorflow/core/platform:strcat\",\n        \"//tensorflow/core/platform:stringpiece\",\n        \"//tensorflow/core/platform:types\",\n    ],\n)\n\ncc_library(\n    name = \"incremental_barrier\",\n    srcs = [\"incremental_barrier.cc\"],\n    hdrs = [\"incremental_barrier.h\"],\n    visibility = default_package_visibility + [\"//tensorflow_serving:__subpackages__\"],\n    deps = [\n        \"//tensorflow/core:lib\",\n        \"@com_google_absl//absl/functional:bind_front\",\n    ],\n)\n\n# Note: This rule should not be used as a dependency for kernels. Use the\n# \"determinism_for_kernels\" rule below instead.\ncc_library(\n    name = \"determinism\",\n    srcs = [\"determinism.cc\"],\n    hdrs = [\"determinism.h\"],\n    copts = tf_copts(),\n    visibility = [\"//tensorflow:__subpackages__\"],\n    deps = [\n        \"//tensorflow/core/platform:mutex\",\n        \"//tensorflow/core/util:env_var\",\n    ],\n    alwayslink = 1,\n)\n\nfilegroup(\n    name = \"determinism_hdr\",\n    srcs = [\"determinism.h\"],\n    compatible_with = get_compatible_with_portable(),\n    visibility = [\"//tensorflow:__subpackages__\"],\n)\n\ncc_library(\n    name = \"determinism_hdr_lib\",\n    hdrs = [\":determinism_hdr\"],\n    compatible_with = get_compatible_with_portable(),\n    visibility = [\"//visibility:private\"],\n)\n\n# This alias should be used as a dependency for kernels which use determinism,\n# as well any other rules which are in the same shared library as the kernels.\n# This rule does not include the determinism.cc file for nonstatic builds. The\n# reason is that for nonstatic builds, the shared object which contains the\n# kernels (e.g. _pywrap_tensorflow_internal.so) must not contain the global\n# variable in determinism.cc, since the global variable is already in\n# libtensorflow_framework.so.\nalias(\n    name = \"determinism_for_kernels\",\n    actual = if_static(\":determinism\", \":determinism_hdr_lib\"),\n    visibility = [\"//tensorflow:__subpackages__\"],\n)\n\ncc_library(\n    name = \"determinism_test_util\",\n    hdrs = [\":determinism_test_util.h\"],\n    deps = [\":determinism\"],\n)\n\ntf_kernel_library(\n    name = \"cuda_solvers\",\n    srcs = [\"cuda_solvers.cc\"],\n    hdrs = [\"gpu_solvers.h\"],\n    compatible_with = [],\n    # @local_config_cuda//cuda:cusolver_static, //third_party/eigen3:blas,\n    # and //third_party/libf2c all contain various parts of BLAS, LAPACK,\n    # and f2c helper functions in global namespace. Tell the compiler to\n    # allow multiple definitions when linking this.\n    linkopts = select({\n        \"//tensorflow:macos\": [],\n        \"//tensorflow:windows\": [],\n        \"//conditions:default\": [\"-Wl,-z,muldefs\"],\n    }),\n    visibility = [\"//tensorflow/core/kernels:friends\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/platform/default/build_config:cublas_plugin\",\n        \"//tensorflow/stream_executor/cuda:cublas_lib\",\n        \"//tensorflow/stream_executor/cuda:cusolver_lib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"rocm_solvers\",\n    srcs = [\"rocm_solvers.cc\"],\n    hdrs = [\"gpu_solvers.h\"],\n    compatible_with = [],\n    visibility = [\"//tensorflow/core/kernels:friends\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/stream_executor/lib\",\n        \"//tensorflow/stream_executor/platform:dso_loader\",\n        \"//tensorflow/stream_executor/rocm:rocblas_plugin\",\n        \"//tensorflow/stream_executor/rocm:rocblas_wrapper\",\n        \"//tensorflow/stream_executor/rocm:rocm_gpu_executor\",\n        \"//tensorflow/stream_executor/rocm:rocsolver_wrapper\",\n    ] + if_rocm([\n        \"@local_config_rocm//rocm:rocprim\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"cuda_sparse\",\n    srcs = if_cuda([\"cuda_sparse.cc\"]) + if_rocm([\"rocm_sparse.cc\"]),\n    hdrs = [\n        \"cuda_sparse.h\",\n        \"gpu_solvers.h\",\n    ],\n    compatible_with = [],\n    deps = [\n        \":cuda_solvers\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ] + if_cuda([\n        \"//tensorflow/stream_executor/cuda:cusparse_lib\",\n        \"@local_config_cuda//cuda:cub_headers\",\n    ]) + if_rocm([\n        \"//tensorflow/stream_executor/rocm:rocsolver_wrapper\",\n        \"//tensorflow/stream_executor/rocm:hipsparse_wrapper\",\n    ]),\n)\n\ncc_library(\n    name = \"image_resizer_state\",\n    hdrs = [\"image_resizer_state.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//third_party/eigen3\",\n    ],\n)\n\n# Tests.\ntf_cc_test(\n    name = \"overflow_test\",\n    size = \"small\",\n    srcs = [\"overflow_test.cc\"],\n    deps = [\n        \":overflow\",\n        \"//tensorflow/core:framework_lite\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ntf_cc_test(\n    name = \"exec_on_stall_test\",\n    size = \"small\",\n    srcs = [\"exec_on_stall_test.cc\"],\n    deps = [\n        \":exec_on_stall\",\n        \"//tensorflow/core:framework_lite\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ntf_cuda_only_cc_test(\n    name = \"gpu_kernel_helper_test\",\n    srcs = [\n        \"gpu_kernel_helper_test.cu.cc\",\n    ],\n    tags = [\n        \"no_cuda_asan\",  # TODO(b/171342366): re-enable.\n    ],\n    deps = [\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_cc_tests(\n    name = \"higher_level_tests\",\n    size = \"small\",\n    srcs = [\n        \"bcast_test.cc\",\n        \"command_line_flags_test.cc\",\n        \"device_name_utils_test.cc\",\n        \"dump_graph_test.cc\",\n        \"equal_graph_def_test.cc\",\n        \"events_writer_test.cc\",\n        \"example_proto_fast_parsing_test.cc\",\n        \"example_proto_helper_test.cc\",\n        \"matmul_bcast_test.cc\",\n        \"memmapped_file_system_test.cc\",\n        \"presized_cuckoo_map_test.cc\",\n        \"reffed_status_callback_test.cc\",\n        \"reporter_test.cc\",\n        \"saved_tensor_slice_util_test.cc\",\n        \"semver_test.cc\",\n        \"stat_summarizer_test.cc\",\n        \"tensor_format_test.cc\",\n        \"tensor_slice_reader_test.cc\",\n        \"tensor_slice_set_test.cc\",\n        \"tensor_slice_util_test.cc\",\n        \"tensor_slice_writer_test.cc\",\n        \"work_sharder_test.cc\",\n    ],\n    linkopts = select({\n        \"//tensorflow:macos\": [\"-headerpad_max_install_names\"],\n        \"//conditions:default\": [],\n    }),\n    linkstatic = tf_kernel_tests_linkstatic(),\n    visibility = [\n        \"//tensorflow/core:__pkg__\",\n    ],\n    deps = [\n        \":protos_test_cc\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:cc_ops_internal\",\n        \"//tensorflow/cc:function_ops\",\n        \"//tensorflow/cc:ops\",\n        \"//tensorflow/cc:scope\",\n        \"//tensorflow/cc:sendrecv_ops\",\n        \"//tensorflow/cc:while_loop\",\n        \"//tensorflow/core\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:ops\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/common_runtime:direct_session_internal\",\n        \"//tensorflow/core/kernels:ops_util\",\n        \"//tensorflow/core/platform:regexp\",\n        \"//third_party/eigen3\",\n        \"@com_google_absl//absl/base\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_cc_test(\n    name = \"debug_events_writer_test\",\n    size = \"small\",\n    srcs = [\"debug_events_writer_test.cc\"],\n    linkopts = select({\n        \"//tensorflow:macos\": [\"-headerpad_max_install_names\"],\n        \"//conditions:default\": [],\n    }),\n    linkstatic = tf_kernel_tests_linkstatic(),\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:ops\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n    ],\n)\n\ntf_cc_test(\n    name = \"incremental_barrier_test\",\n    srcs = [\"incremental_barrier_test.cc\"],\n    deps = [\n        \":incremental_barrier\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/platform\",\n        \"@com_google_absl//absl/functional:bind_front\",\n        \"@com_google_absl//absl/time\",\n    ],\n)\n\n# Proto libraries.\ntf_proto_library(\n    name = \"test_log_proto_impl\",\n    srcs = [\"test_log.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    # Not to be used outside of tensorflow/core.\n    visibility = [\"//tensorflow/core:__pkg__\"],\n)\n\ntf_proto_library(\n    name = \"protos_test\",\n    srcs = [\"example_proto_fast_parsing_test.proto\"],\n    cc_api_version = 2,\n    protodeps = [\"//tensorflow/core:protos_all\"],\n    visibility = [\"//visibility:public\"],\n)\n\ntf_proto_library(\n    name = \"event_proto\",\n    srcs = [\"event.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \"//tensorflow/core/framework:summary_proto\",\n        \"//tensorflow/core/framework:resource_handle_proto\",\n        \"//tensorflow/core/framework:tensor_proto\",\n        \"//tensorflow/core/framework:tensor_shape_proto\",\n        \"//tensorflow/core/framework:types_proto\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n\ntf_proto_library(\n    name = \"saved_tensor_slice_proto\",\n    srcs = [\"saved_tensor_slice.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \"//tensorflow/core/framework:resource_handle_proto\",\n        \"//tensorflow/core/framework:tensor_proto\",\n        \"//tensorflow/core/framework:tensor_shape_proto\",\n        \"//tensorflow/core/framework:tensor_slice_proto\",\n        \"//tensorflow/core/framework:types_proto\",\n        \"//tensorflow/core/framework:versions_proto\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n\ntf_proto_library(\n    name = \"memmapped_file_system_proto\",\n    srcs = [\"memmapped_file_system.proto\"],\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    visibility = [\"//visibility:public\"],\n)\n\ntf_proto_library(\n    name = \"protos_all\",\n    cc_api_version = 2,\n    make_default_target_header_only = True,\n    protodeps = [\n        \":event_proto\",\n        \":saved_tensor_slice_proto\",\n        \":memmapped_file_system_proto\",\n    ],\n    tags = [\n        \"alt_dep=//third_party/tensorflow/core:protos_all\",\n    ],\n)"