"load(\"//tensorflow/core/platform:rules_cc.bzl\", \"cc_library\")\nload(\"@bazel_skylib//rules:build_test.bzl\", \"build_test\")\nload(\n    \"//tensorflow:tensorflow.bzl\",\n    \"if_android\",\n    \"if_cuda_or_rocm\",\n    \"if_google\",\n    \"if_mobile\",\n    \"if_not_windows\",\n    \"if_oss\",\n    \"tf_cc_binary\",\n    \"tf_cc_test\",\n    \"tf_cc_tests\",\n    \"tf_copts\",\n    \"tf_cuda_library\",\n    \"tf_opts_nortti_if_lite_protos\",\n)\nload(\n    \"//tensorflow/core/kernels/mlir_generated:build_defs.bzl\",\n    \"if_mlir_generated_cpu_kernels_enabled\",\n    \"if_mlir_generated_experimental_kernels_enabled\",\n    \"if_mlir_generated_gpu_kernels_enabled\",\n)\nload(\n    \"//tensorflow/core/platform:build_config.bzl\",\n    \"tf_fingerprint_deps\",\n    \"tf_kernel_tests_linkstatic\",\n)\nload(\n    \"//third_party/mkl:build_defs.bzl\",\n    \"if_mkl\",\n)\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"cc_header_only_library\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"get_compatible_with_portable\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"tf_kernel_library\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"if_nccl\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"tf_disable_ptxas_warning_flags\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"tf_cuda_cc_test\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"tf_cuda_only_cc_test\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"tf_cuda_cc_tests\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"filegroup\")\nload(\n    \"//tensorflow/core/platform:build_config_root.bzl\",\n    \"tf_cuda_tests_tags\",\n)\nload(\n    \"//third_party/mkl:build_defs.bzl\",\n    \"mkl_deps\",\n)\nload(\"@local_config_cuda//cuda:build_defs.bzl\", \"if_cuda\")\nload(\n    \"@local_config_rocm//rocm:build_defs.bzl\",\n    \"if_rocm\",\n)\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"tf_cc_shared_library\")\n\n# Description:\n# Op kernel implementations for TensorFlow.\n#\n# Note: Any test that uses GPU support and which we would like to\n# benchmark should be linked statically so that it can be executed\n# from a py_binary or cuda_py_test test logger.  For such a test,\n# append \"_gpu\" to the test name to invoke the GPU benchmarks.  Example:\n#\n#   # for CPU tests\n#   $ bazel test --config opt //third_party/tensorflow/core/kernels:my_op_test\n#   # for GPU benchmarks\n#   $ bazel run --config opt --config=cuda //third_party/tensorflow/core/kernels:my_op_test_gpu -- --benchmark_filter=..\n#\npackage(\n    default_visibility = [\"//visibility:public\"],\n    features = if_google(\n        [\n            \"-layering_check\",\n            \"-parse_headers\",\n        ],\n        [\"-layering_check\"],\n    ),\n    licenses = [\"notice\"],\n)\n\npackage_group(\n    name = \"friends\",\n    packages = [\n        \"//tensorflow/...\",\n        \"//tensorflow_text/...\",\n    ],\n)\n\npackage_group(\n    name = \"optimizer_helper_friends\",\n    packages = [\n        \"//learning/brain/research/lather/...\",\n        \"//learning/clair/alise/...\",\n    ],\n)\n\nconfig_setting(\n    # Add \"--define tensorflow_xsmm=1\" to your build command to use libxsmm for\n    # sparse matrix multiplications. You will also need appropriate -mavx*\n    # options, as required by specific op you use.\n    name = \"xsmm\",\n    define_values = {\n        \"tensorflow_xsmm\": \"1\",\n    },\n)\n\nconfig_setting(\n    # Add \"--define tensorflow_xsmm_convolutions=1\" to your build command to\n    # use libxsmm for forward convolutions. You will also need appropriate\n    # -mavx* # options, as required by specific op you use.\n    name = \"xsmm_convolutions\",\n    define_values = {\n        \"tensorflow_xsmm_convolutions\": \"1\",\n    },\n)\n\nconfig_setting(\n    # Add \"--define tensorflow_xsmm_convolutions=1 --define\n    # tensorflow_xsmm_backward_convolutions=1\" to your build command to use libxsmm for\n    # backward convolutions (and possibly more in the future). You will also\n    # need appropriate -mavx* options, as required by specific op you use.\n    name = \"xsmm_backward_convolutions\",\n    define_values = {\n        \"tensorflow_xsmm_backward_convolutions\": \"1\",\n    },\n)\n\nconfig_setting(\n    # Add \"--define tensorflow_mkldnn_contraction_kernel=0\" to your build command to disable mkldnn\n    # sgemm in Eigen tensor contractions (matrix multiplications and convolutions). The mkldnn\n    # kernels are generated at runtime and use avx/avx2/fma/avx512 based on cpu status registers\n    # (https://en.wikipedia.org/wiki/CPUID). Default Eigen contraction kernel is\n    # Eigen::internal::gebp_kernel (general block-panel kernel).\n    name = \"no_mkldnn_contraction_kernel\",\n    define_values = {\n        \"tensorflow_mkldnn_contraction_kernel\": \"0\",\n    },\n)\n\n# Public support libraries ----------------------------------------------------\n\ncc_library(\n    name = \"assign_op\",\n    hdrs = [\"assign_op.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"strided_slice_op\",\n    srcs = [\n        \"strided_slice_op.cc\",\n        \"strided_slice_op_inst_0.cc\",\n        \"strided_slice_op_inst_1.cc\",\n        \"strided_slice_op_inst_2.cc\",\n        \"strided_slice_op_inst_3.cc\",\n        \"strided_slice_op_inst_4.cc\",\n        \"strided_slice_op_inst_5.cc\",\n        \"strided_slice_op_inst_6.cc\",\n        \"strided_slice_op_inst_7.cc\",\n        \"strided_slice_op_inst_8.cc\",\n    ],\n    hdrs = [\n        \"slice_op.h\",\n        \"strided_slice_op.h\",\n        \"strided_slice_op_impl.h\",\n    ],\n    gpu_srcs = [\n        \"slice_op.h\",\n        \"strided_slice_op.h\",\n        \"strided_slice_op_impl.h\",\n        \"strided_slice_op_gpu_impl.h\",\n        \"strided_slice_op_gpu_int.cu.cc\",\n        \"strided_slice_op_gpu_complex.cu.cc\",\n        \"strided_slice_op_gpu_bool.cu.cc\",\n        \"strided_slice_op_gpu_number_types.cu.cc\",\n    ],\n    deps = [\n        \":dense_update_functor\",\n        \":inplace_ops\",\n        \":ops_util\",\n        \":training_op_helpers\",\n        \":variable_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"clustering_ops\",\n    prefix = \"clustering_ops\",\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_headers_lib\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"clustering_ops_test\",\n    srcs = [\"clustering_ops_test.cc\"],\n    deps = [\n        \":clustering_ops\",\n        \"//tensorflow/core:clustering_ops_op_lib\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"collective_ops\",\n    srcs = if_nccl([\n        \"collective_nccl.h\",\n        \"collective_nccl.cc\",\n        \"collective_nccl_broadcaster.h\",\n        \"collective_nccl_broadcaster.cc\",\n        \"collective_nccl_gatherer.h\",\n        \"collective_nccl_gatherer.cc\",\n        \"collective_nccl_reducer.h\",\n        \"collective_nccl_reducer.cc\",\n    ]),\n    prefix = \"collective_ops\",\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core/profiler/lib:traceme\",\n    ] + if_nccl([\n        \"//tensorflow/core/nccl:collective_communicator\",\n    ]),\n)\n\ntf_cuda_cc_test(\n    name = \"collective_nccl_test\",\n    size = \"small\",\n    srcs = [\"collective_nccl_test.cc\"],\n    tags = tf_cuda_tests_tags() + [\n        \"guitar\",\n        \"multi_gpu\",\n        \"no_oss\",\n    ],\n    deps = [\n        \"//tensorflow/core:all_kernels\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/nccl:collective_communicator\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"concat_lib\",\n    srcs = [\n        \"concat_lib_cpu.cc\",\n        \"concat_lib_gpu.cc\",\n    ],\n    hdrs = [\n        \"concat_lib.h\",\n        \"concat_lib_cpu.h\",\n    ],\n    gpu_copts = if_not_windows([\n        \"-Wno-pass-failed\",  # clang misses #pragma loop optimizations\n    ]),\n    gpu_srcs = [\n        \"concat_lib_gpu_impl.cu.cc\",\n        \"concat_lib.h\",\n        \"concat_lib_gpu.h\",\n        \"gpu_device_array.h\",\n        \"gpu_device_array_gpu.h\",\n    ],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//third_party/eigen3\",\n    ],\n    alwayslink = 0,\n)\n\ncc_library(\n    name = \"concat_lib_hdrs\",\n    hdrs = [\n        \"concat_lib.h\",\n        \"concat_lib_cpu.h\",\n    ],\n    deps = [\"//third_party/eigen3\"],\n)\n\ntf_kernel_library(\n    name = \"conv_2d\",\n    hdrs = [\"conv_2d.h\"],\n    gpu_copts = if_not_windows([\n        \"-Wno-pass-failed\",  # clang misses #pragma loop optimizations\n    ]),\n    gpu_srcs = [\n        \"conv_2d.h\",\n        \"conv_2d_gpu.h\",\n        \"conv_2d_gpu_double.cu.cc\",\n        \"conv_2d_gpu_float.cu.cc\",\n        \"conv_2d_gpu_half.cu.cc\",\n        \"conv_2d_gpu_int.cu.cc\",\n        \"conv_2d_gpu_int_spatial_convolution.cu.cc\",\n        \"conv_2d_gpu_int_spatial_convolution_backward.cu.cc\",\n        \"conv_2d_gpu_uint16.cu.cc\",\n        \"conv_2d_gpu_uint32.cu.cc\",\n        \"conv_2d_gpu_uint64.cu.cc\",\n        \"conv_2d_gpu_uint8.cu.cc\",\n    ],\n    deps = [\n        \":eigen_helpers\",\n        \":fill_functor\",\n        \":ops_util\",\n        \"//third_party/eigen3\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n    ] + if_cuda_or_rocm([\":gpu_utils\"]),\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"conv_2d_hdrs\",\n    hdrs = [\"conv_2d.h\"],\n    deps = [\n        \":eigen_helpers\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"conv_3d\",\n    hdrs = [\"conv_3d.h\"],\n    deps = [\n        \":eigen_helpers\",\n        \"//tensorflow/core:framework\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"fill_functor\",\n    prefix = \"fill_functor\",\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"initializable_lookup_table\",\n    srcs = [\"initializable_lookup_table.cc\"],\n    hdrs = [\"initializable_lookup_table.h\"],\n    deps = [\n        \"//tensorflow/core:core_cpu_base\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ncc_library(\n    name = \"lookup_util\",\n    srcs = [\"lookup_util.cc\"],\n    hdrs = [\"lookup_util.h\"],\n    deps = [\n        \":initializable_lookup_table\",\n        \"//tensorflow/core:core_cpu_base\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/framework:op_requires\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"nccl_kernels\",\n    srcs = if_cuda_or_rocm([\n        \"nccl_ops.cc\",\n    ]),\n    deps = if_cuda([\n        \"@local_config_nccl//:nccl\",\n    ]) + if_rocm([\n        \"@local_config_rocm//rocm:rccl\",\n    ]) + if_cuda_or_rocm([\n        \"//tensorflow/core/nccl:nccl_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:gpu_headers_lib\",\n    ]),\n)\n\ncc_library(\n    name = \"sparse_utils\",\n    srcs = [\n        \"sparse_utils.cc\",\n    ],\n    hdrs = [\"sparse_utils.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_lite\",\n        \"//tensorflow/core:lib_internal\",\n    ],\n)\n\ntf_cc_test(\n    name = \"sparse_utils_test\",\n    srcs = [\"sparse_utils_test.cc\"],\n    deps = [\n        \":sparse_utils\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_lite\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"@com_google_absl//absl/base:core_headers\",\n    ],\n)\n\ncc_library(\n    name = \"tensor_flag_utils\",\n    srcs = [\n        \"tensor_flag_utils.cc\",\n    ],\n    hdrs = [\"tensor_flag_utils.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_lite\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_cc_test(\n    name = \"tensor_flag_utils_test\",\n    srcs = [\"tensor_flag_utils_test.cc\"],\n    deps = [\n        \":tensor_flag_utils\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_lite\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"@com_google_absl//absl/base:core_headers\",\n    ],\n)\n\ntf_cuda_library(\n    name = \"ops_testutil\",\n    testonly = 1,\n    srcs = [\"ops_testutil.cc\"],\n    hdrs = [\"ops_testutil.h\"],\n    cuda_deps = [\n        \"//tensorflow/core:gpu_lib\",\n        \"//tensorflow/core:gpu_runtime\",\n    ],\n    deps = [\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core/framework:tensor_testutil\",\n    ],\n)\n\ncc_library(\n    name = \"ops_util\",\n    hdrs = [\"ops_util.h\"],\n    copts = if_not_windows([\"-Wno-sign-compare\"]),\n    deps = [\n        \"//tensorflow/core:framework\",\n    ],\n)\n\ncc_library(\n    name = \"ops_util_hdrs\",\n    hdrs = [\"ops_util.h\"],\n    deps = [\"//third_party/eigen3\"],\n)\n\ncc_library(\n    name = \"gpu_prim_hdrs\",\n    hdrs = [\"gpu_prim.h\"],\n    deps = if_cuda([\n        \"@local_config_cuda//cuda:cub_headers\",\n    ]) + if_rocm([\n        \"@local_config_rocm//rocm:rocprim\",\n    ]),\n)\n\ncc_library(\n    name = \"gpu_prim_helpers\",\n    hdrs = [\"gpu_prim_helpers.h\"],\n    deps = if_cuda_or_rocm([\n        \":gpu_prim_hdrs\",\n    ]),\n)\n\ntf_cuda_only_cc_test(\n    name = \"gpu_prim_helpers_test\",\n    srcs = [\"gpu_prim_helpers_test.cu.cc\"],\n    tags = [\"no_cuda_asan\"],  # TODO(b/183963619)\n    deps = [\n        \":gpu_prim_helpers\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ncc_library(\n    name = \"conv_ops_gpu_hdrs\",\n    hdrs = [\"conv_ops_gpu.h\"],\n)\n\n# We keep this target only because some contrib/ targets depend on it. The\n# reason why the contrib/ targets can't depend on gpu_utils is that, some\n# of the targets are tf_custom_op_library. tf_custom_op_library forbids the\n# dependency to tensorflow/core:lib, which gpu_utils certainly depends on.\ncc_library(\n    name = \"gpu_util_hdrs\",\n    hdrs = [\n        \"gpu_utils.h\",\n        # See the exports_files declaration for a description of why this\n        # silliness is here.\n        #\n        # TODO(b/202546057) get rid of this once fused_conv is moved out of\n        # contrib.\n        \"//tensorflow/stream_executor:lazy_op_runner.h\",\n    ],\n)\n\ntf_cuda_library(\n    name = \"gpu_utils\",\n    srcs = if_cuda_or_rocm([\"gpu_utils.cc\"]),\n    hdrs = [\"gpu_utils.h\"],\n    deps = [\n        \":gpu_util_hdrs\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/platform:stream_executor\",\n        \"//tensorflow/core/protobuf:autotuning_proto_cc\",\n        \"//tensorflow/core/protobuf:conv_autotuning_proto_cc\",\n        \"//tensorflow/core/util:env_var\",\n        \"//tensorflow/core/util/proto:proto_utils\",\n        \"//tensorflow/stream_executor:lazy_op_runner\",\n        \"//tensorflow/stream_executor/gpu:asm_compiler\",\n        \"//tensorflow/stream_executor/gpu:redzone_allocator\",\n        \"@com_google_absl//absl/algorithm:container\",\n        \"@com_google_absl//absl/base\",\n        \"@com_google_absl//absl/types:span\",\n        \"@com_google_absl//absl/strings:str_format\",\n        \"//tensorflow/core/util:determinism_for_kernels\",\n        \"//tensorflow/core/util/autotune_maps:conv_parameters\",\n    ] + if_cuda([\n        \"@local_config_cuda//cuda:cudnn_header\",\n        \"//tensorflow/stream_executor:tf_allocator_adapter\",\n    ]),\n)\n\ntf_cc_test(\n    name = \"ops_util_test\",\n    size = \"small\",\n    srcs = [\"ops_util_test.cc\"],\n    deps = [\n        \":ops_util\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"reshape_util\",\n    srcs = [\"reshape_util.cc\"],\n    hdrs = [\"reshape_util.h\"],\n    gpu_srcs = [\n        \"reshape_util_gpu.cu.cc\",\n        \"reshape_util.h\",\n    ],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ntf_cc_test(\n    name = \"variable_ops_test\",\n    size = \"small\",\n    srcs = [\"variable_ops_test.cc\"],\n    deps = [\n        \"//tensorflow/core:all_kernels\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/common_runtime:direct_session_internal\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"stage_op\",\n    srcs = [\"stage_op.cc\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"map_stage_op\",\n    srcs = [\"map_stage_op.cc\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ncc_library(\n    name = \"queue_base\",\n    srcs = [\"queue_base.cc\"],\n    hdrs = [\"queue_base.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ncc_library(\n    name = \"queue_op\",\n    srcs = [\"queue_op.cc\"],\n    hdrs = [\"queue_op.h\"],\n    deps = [\n        \":queue_base\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ncc_library(\n    name = \"priority_queue\",\n    srcs = [\"priority_queue.cc\"],\n    hdrs = [\"priority_queue.h\"],\n    deps = [\n        \":queue_base\",\n        \":typed_queue\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ncc_library(\n    name = \"batch_kernels\",\n    srcs = [\"batch_kernels.cc\"],\n    hdrs = [\"batch_kernels.h\"],\n    deps = [\n        \":ops_util_hdrs\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/kernels/batching_util:adaptive_shared_batch_scheduler\",\n        \"//tensorflow/core/kernels/batching_util:batch_resource_base\",\n        \"//tensorflow/core/kernels/batching_util:bounded_executor\",\n        \"//tensorflow/core/kernels/batching_util:concat_split_util\",\n        \"//tensorflow/core/kernels/batching_util:periodic_function_dynamic\",\n        \"//tensorflow/core/platform:numbers\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:optional\",\n    ],\n    alwayslink = 1,\n)\n\ntf_kernel_library(\n    name = \"record_input_op\",\n    srcs = [\n        \"record_input_op.cc\",\n        \"record_yielder.cc\",\n        \"record_yielder.h\",\n    ],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ncc_library(\n    name = \"save_restore_tensor\",\n    srcs = [\"save_restore_tensor.cc\"],\n    hdrs = [\"save_restore_tensor.h\"],\n    copts = if_not_windows([\"-Wno-sign-compare\"]),\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//tensorflow/core/util/tensor_bundle\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"split_lib\",\n    srcs = [\"split_lib_cpu.cc\"],\n    hdrs = [\"split_lib.h\"],\n    gpu_srcs = [\n        \"split_lib_gpu.cu.cc\",\n        \"split_lib.h\",\n        \"split_lib_gpu.h\",\n    ],\n    deps = [\n        \":gpu_device_array\",\n        \"//tensorflow/core:framework\",\n        \"//third_party/eigen3\",\n    ],\n    alwayslink = 0,\n)\n\ncc_library(\n    name = \"split_lib_hdrs\",\n    hdrs = [\"split_lib.h\"],\n    deps = [\n        \"//tensorflow/core:framework_lite\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"typed_queue\",\n    hdrs = [\"typed_queue.h\"],\n    deps = [\n        \":queue_base\",\n        \"//tensorflow/core:framework\",\n    ],\n)\n\ncc_library(\n    name = \"training_op_helpers\",\n    srcs = [\"training_op_helpers.cc\"],\n    hdrs = [\"training_op_helpers.h\"],\n    visibility = [\n        \":friends\",\n        \":optimizer_helper_friends\",\n    ],\n    deps = [\n        \":dense_update_functor\",\n        \":variable_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\n# Private support libraries ---------------------------------------------------\n\ncc_library(\n    name = \"gpu_device_array\",\n    hdrs = [\n        \"gpu_device_array.h\",\n        \"gpu_device_array_gpu.h\",\n    ],\n    visibility = [\"//tensorflow:__subpackages__\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:gpu_headers_lib\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\n# Depending on a build configuration this target provides custom kernel for Eigen\n# tensor contractions (small matrix multiplication kernel used to multiple together\n# blocks of the original tensors).\n#\n# 1) Default:\n#    Use Mkldnn single threaded sgemm. The mkldnn kernels are generated at runtime and\n#    use avx/avx2/fma/avx512 based on cpu status registers (https://en.wikipedia.org/wiki/CPUID).\n#\n# 2) Eigen: --define tensorflow_mkldnn_contraction_kernel=0 (disable mkldnn)\n#    Use Eigen contraction kernel: Eigen::internal::gebp_kernel.\n#\n# If you use `tensor.contract(other_tensor)` in your code, you must include additional header\n# to get the benefit of custom contraction kernel:\n#\n#   #if defined(TENSORFLOW_USE_CUSTOM_CONTRACTION_KERNEL)\n#   #include \"third_party/tensorflow/core/kernels/eigen_contraction_kernel.h\"\n#   #endif\n#\n# We define a two-level target because if we just add\n#   \":no_mkldnn_contraction_kernel\": []\n# in the same select list with //third_party/tensorflow:{android,arm,ios,ppc},\n# there can be more than one match, e.g., when building for android and MKL-DNN\n# contraction kernel is disabled. Bazel doesn't allow multiple matches.\n# See more details in\n#   https://github.com/tensorflow/tensorflow/issues/24414\ncc_library(\n    name = \"eigen_contraction_kernel\",\n    hdrs = [\"eigen_contraction_kernel.h\"],\n    compatible_with = get_compatible_with_portable(),\n    deps = select({\n        \":no_mkldnn_contraction_kernel\": [\":eigen_contraction_kernel_no_mkl\"],\n        \"//conditions:default\": [\":eigen_contraction_kernel_with_mkl\"],\n    }) + [\"@com_google_absl//absl/base\"],\n)\n\ncc_library(\n    name = \"eigen_contraction_kernel_with_mkl\",\n    srcs = [\"eigen_contraction_kernel.cc\"],\n    hdrs = [\"eigen_contraction_kernel.h\"],\n    defines = select({\n        \"//tensorflow:android_x86\": [],\n        \"//tensorflow:arm_any\": [],\n        \"//tensorflow:fuchsia_x86_64\": [],\n        \"//tensorflow:ios\": [],\n        \"//tensorflow:linux_ppc64le\": [],\n        \"//tensorflow:linux_s390x\": [],\n        \"//tensorflow:macos_arm64\": [],\n        \"//conditions:default\": [\n            \"TENSORFLOW_USE_CUSTOM_CONTRACTION_KERNEL\",\n            \"TENSORFLOW_USE_MKLDNN_CONTRACTION_KERNEL\",\n        ],\n    }),\n    deps = [\n        \"@com_google_absl//absl/base\",\n        \"//third_party/eigen3\",\n        \"//tensorflow/core/platform:dynamic_annotations\",\n    ] + select({\n        \"//tensorflow:android_x86\": [],\n        \"//tensorflow:arm_any\": [],\n        \"//tensorflow:fuchsia_x86_64\": [],\n        \"//tensorflow:ios\": [],\n        \"//tensorflow:linux_ppc64le\": [],\n        \"//tensorflow:linux_s390x\": [],\n        \"//tensorflow:macos_arm64\": [],\n        \"//conditions:default\": [\"@mkl_dnn_v1//:mkl_dnn\"],\n    }),\n)\n\ncc_library(\n    name = \"eigen_contraction_kernel_no_mkl\",\n    srcs = [\"eigen_contraction_kernel.cc\"],\n    hdrs = [\"eigen_contraction_kernel.h\"],\n    compatible_with = get_compatible_with_portable(),\n    deps = [\n        \"//tensorflow/core/platform:dynamic_annotations\",\n        \"//third_party/eigen3\",\n        \"@com_google_absl//absl/base\",\n    ],\n)\n\nfilegroup(\n    name = \"xla_cpu_runtime_hdrs\",\n    srcs = [\n        \"eigen_contraction_kernel.h\",\n        \"eigen_convolution_helpers.h\",\n        \"eigen_spatial_convolutions.h\",\n        \"eigen_spatial_convolutions-inl.h\",\n    ],\n)\n\nfilegroup(\n    name = \"xla_cpu_runtime_srcs\",\n    srcs = [\n        \"eigen_contraction_kernel.cc\",\n    ],\n)\n\ncc_library(\n    name = \"redux_functor\",\n    hdrs = [\"redux_functor.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"fused_eigen_output_kernels\",\n    srcs = [\"fused_eigen_output_kernels.cc\"],\n    hdrs = [\"fused_eigen_output_kernels.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//third_party/eigen3\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"eigen_helpers\",\n    hdrs = [\n        \"eigen_activations.h\",\n        \"eigen_attention.h\",\n        \"eigen_backward_cuboid_convolutions.h\",\n        \"eigen_backward_spatial_convolutions.h\",\n        \"eigen_cuboid_convolution.h\",\n        \"eigen_pooling.h\",\n        \"eigen_spatial_convolutions.h\",\n    ],\n    compatible_with = get_compatible_with_portable(),\n    deps = [\n        \":eigen_contraction_kernel\",\n        \":eigen_convolution_helpers\",\n        \":eigen_spatial_convolutions-inl\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"eigen_helpers_no_mkl\",\n    hdrs = [\n        \"eigen_activations.h\",\n        \"eigen_attention.h\",\n        \"eigen_backward_cuboid_convolutions.h\",\n        \"eigen_backward_spatial_convolutions.h\",\n        \"eigen_cuboid_convolution.h\",\n        \"eigen_pooling.h\",\n        \"eigen_spatial_convolutions.h\",\n    ],\n    deps = [\n        \":eigen_convolution_helpers\",\n        \":eigen_spatial_convolutions-inl\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"eigen_spatial_convolutions-inl\",\n    hdrs = [\n        \"eigen_spatial_convolutions-inl.h\",\n    ],\n    compatible_with = get_compatible_with_portable(),\n    deps = [\n        \":eigen_convolution_helpers\",\n    ],\n)\n\ncc_library(\n    name = \"eigen_convolution_helpers\",\n    hdrs = [\n        \"eigen_convolution_helpers.h\",\n    ],\n    compatible_with = get_compatible_with_portable(),\n    defines = [\n        \"EIGEN_ALTIVEC_USE_CUSTOM_PACK=0\",\n    ],\n)\n\n# OpKernel libraries ----------------------------------------------------------\n\nARRAY_DEPS = [\n    \":concat_lib\",\n    \":fill_functor\",\n    \":gather_functor\",\n    \":ops_util\",\n    \":transpose_functor\",\n    \"//tensorflow/core:array_grad\",\n    \"//tensorflow/core:core_cpu\",\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:lib_internal\",\n    \"//tensorflow/core:protos_all_cc\",\n    \"//tensorflow/core/framework:bounds_check\",\n    \"//tensorflow/core/profiler/lib:scoped_memory_debug_annotation\",\n    \"//third_party/eigen3\",\n]\n\ntf_kernel_library(\n    name = \"immutable_constant_op\",\n    prefix = \"immutable_constant_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"set_kernels\",\n    prefix = \"set_kernels\",\n    deps = [\n        \"//tensorflow/core:framework_headers_lib\",\n        \"//tensorflow/core:lib\",\n        \"//third_party/eigen3\",\n        \"@com_google_absl//absl/container:btree\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"debug_ops\",\n    prefix = \"debug_ops\",\n    deps = ARRAY_DEPS + [\n        \"//tensorflow/core:gpu_runtime\",\n        \"//tensorflow/core/debug:debug_io_utils\",\n    ],\n)\n\ncc_library(\n    name = \"array\",\n    deps = [\n        \":batch_space_ops\",\n        \":bcast_ops\",\n        \":broadcast_to_op\",\n        \":concat_op\",\n        \":constant_op\",\n        \":depth_space_ops\",\n        \":diag_op\",\n        \":edit_distance_op\",\n        \":fingerprint_op\",\n        \":gather_nd_op\",\n        \":gather_op\",\n        \":guarantee_const_op\",\n        \":host_constant_op\",\n        \":identity_n_op\",\n        \":identity_op\",\n        \":immutable_constant_op\",\n        \":inplace_ops\",\n        \":listdiff_op\",\n        \":one_hot_op\",\n        \":pack_op\",\n        \":pad_op\",\n        \":quantize_and_dequantize_op\",\n        \":reshape_op\",\n        \":reverse_op\",\n        \":reverse_sequence_op\",\n        \":searchsorted_op\",\n        \":shape_ops\",\n        \":slice_op\",\n        \":snapshot_op\",\n        \":split_op\",\n        \":split_v_op\",\n        \":strided_slice_op\",\n        \":tile_ops\",\n        \":transpose_op\",\n        \":unique_op\",\n        \":unpack_op\",\n        \":unravel_index_op\",\n        \":where_op\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"bcast_ops\",\n    prefix = \"bcast_ops\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"bitcast_op\",\n    deprecation = \"use //third_party/tensorflow/c/kernels:bitcast_op instead\",\n    deps = [\"//tensorflow/c/kernels:bitcast_op\"],\n)\n\ntf_kernel_library(\n    name = \"broadcast_to_op\",\n    prefix = \"broadcast_to_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"concat_op\",\n    prefix = \"concat_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"guarantee_const_op\",\n    prefix = \"guarantee_const_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"constant_op\",\n    copts = if_mlir_generated_gpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_GPU_KERNELS_ENABLED\"],\n    ),\n    # *.cu.cc sources are compiled with gpu_copts instead of copts.\n    gpu_copts = if_mlir_generated_gpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_GPU_KERNELS_ENABLED\"],\n    ),\n    prefix = \"constant_op\",\n    deps = ARRAY_DEPS + [\n        \"//tensorflow/core/kernels/mlir_generated:constant_op\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"host_constant_op\",\n    prefix = \"host_constant_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"diag_op\",\n    prefix = \"diag_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"edit_distance_op\",\n    prefix = \"edit_distance_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"fingerprint_op\",\n    prefix = \"fingerprint_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_cc_test(\n    name = \"fingerprint_op_test\",\n    size = \"small\",\n    srcs = [\"fingerprint_op_test.cc\"],\n    deps = [\n        \":fingerprint_op\",\n        \":ops_testutil\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"gather_nd_op\",\n    prefix = \"gather_nd_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"gather_op\",\n    prefix = \"gather_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"identity_op\",\n    prefix = \"identity_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"identity_n_op\",\n    prefix = \"identity_n_op\",\n    deps = ARRAY_DEPS + [\n        \"//tensorflow/core:core_cpu_internal\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"listdiff_op\",\n    prefix = \"listdiff_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"one_hot_op\",\n    prefix = \"one_hot_op\",\n    deps = ARRAY_DEPS + [\"//tensorflow/core/util:overflow\"],\n)\n\ntf_kernel_library(\n    name = \"pack_op\",\n    prefix = \"pack_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"pad_op\",\n    prefix = \"pad_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"quantize_and_dequantize_op\",\n    gpu_copts = tf_disable_ptxas_warning_flags(),\n    prefix = \"quantize_and_dequantize_op\",\n    deps = ARRAY_DEPS + [\":cwise_op\"],\n)\n\ntf_kernel_library(\n    name = \"reshape_op\",\n    prefix = \"reshape_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"reverse_op\",\n    prefix = \"reverse_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"reverse_sequence_op\",\n    prefix = \"reverse_sequence_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"shape_ops\",\n    prefix = \"shape_ops\",\n    deps = ARRAY_DEPS + [\"//tensorflow/core/common_runtime:dma_helper\"],\n)\n\ntf_kernel_library(\n    name = \"slice_op\",\n    prefix = \"slice_op\",\n    deps = ARRAY_DEPS + [\":strided_slice_op\"],\n)\n\ntf_kernel_library(\n    name = \"snapshot_op\",\n    prefix = \"snapshot_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"split_op\",\n    gpu_srcs = [\"gpu_device_array.h\"],\n    prefix = \"split_op\",\n    deps = ARRAY_DEPS + [\":split_lib\"],\n)\n\ntf_kernel_library(\n    name = \"split_v_op\",\n    gpu_srcs = [\"gpu_device_array.h\"],\n    prefix = \"split_v_op\",\n    deps = ARRAY_DEPS + [\":split_lib\"],\n)\n\ntf_kernel_library(\n    name = \"searchsorted_op\",\n    prefix = \"searchsorted_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"inplace_ops\",\n    prefix = \"inplace_ops\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"tile_ops\",\n    srcs = [\n        \"tile_functor_cpu.h\",\n        \"tile_functor_cpu_bfloat16.cc\",\n        \"tile_functor_cpu_bool.cc\",\n        \"tile_functor_cpu_complex128.cc\",\n        \"tile_functor_cpu_complex64.cc\",\n        \"tile_functor_cpu_double.cc\",\n        \"tile_functor_cpu_float.cc\",\n        \"tile_functor_cpu_half.cc\",\n        \"tile_functor_cpu_int16.cc\",\n        \"tile_functor_cpu_int32.cc\",\n        \"tile_functor_cpu_int64.cc\",\n        \"tile_functor_cpu_int8.cc\",\n        \"tile_functor_cpu_tstring.cc\",\n        \"tile_functor_cpu_uint32.cc\",\n        \"tile_functor_cpu_uint64.cc\",\n        \"tile_functor_cpu_uint8.cc\",\n        \"tile_functor_cpu_variant.cc\",\n    ],\n    hdrs = [\"tile_functor.h\"],\n    gpu_copts = tf_disable_ptxas_warning_flags(),\n    gpu_srcs = [\n        \"tile_functor.h\",\n        \"tile_functor_gpu.h\",\n        \"tile_functor_gpu_bool.cu.cc\",\n        \"tile_functor_gpu_complex64.cu.cc\",\n        \"tile_functor_gpu_complex128.cu.cc\",\n        \"tile_functor_gpu_double.cu.cc\",\n        \"tile_functor_gpu_float.cu.cc\",\n        \"tile_functor_gpu_half.cu.cc\",\n        \"tile_functor_gpu_int16.cu.cc\",\n        \"tile_functor_gpu_int32.cu.cc\",\n        \"tile_functor_gpu_int64.cu.cc\",\n    ],\n    prefix = \"tile_ops\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"transpose_op\",\n    srcs = [\n        \"transpose_op.cc\",\n    ],\n    hdrs = [\"transpose_op.h\"],\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"unique_op\",\n    prefix = \"unique_op\",\n    deps = ARRAY_DEPS + [\n        \"@com_google_absl//absl/container:flat_hash_map\",\n    ] + if_cuda_or_rocm([\n        \":gpu_prim_hdrs\",\n        \":gpu_prim_helpers\",\n    ]) + if_cuda([\n        \"//tensorflow/core/util:cuda_solvers\",\n    ]) + if_rocm([\n        \"//tensorflow/core/util:rocm_solvers\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"unpack_op\",\n    prefix = \"unpack_op\",\n    deps = ARRAY_DEPS + [\":split_lib\"],\n)\n\ntf_kernel_library(\n    name = \"unravel_index_op\",\n    prefix = \"unravel_index_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"where_op\",\n    srcs = [\"where_op.cc\"],\n    hdrs = [\"where_op.h\"],\n    gpu_srcs = [\n        \"where_op.h\",\n        \"where_op_gpu.cu.h\",\n        \"where_op_gpu_impl_1.cu.cc\",\n        \"where_op_gpu_impl_2.cu.cc\",\n        \"where_op_gpu_impl_3.cu.cc\",\n        \"where_op_gpu_impl_4.cu.cc\",\n        \"where_op_gpu_impl_5.cu.cc\",\n        \"where_op_gpu_impl_6.cu.cc\",\n        \"where_op_gpu_impl_7.cu.cc\",\n        \"where_op_gpu_impl_8.cu.cc\",\n    ],\n    deps = if_cuda([\n               \"//tensorflow/core/util:cuda_solvers\",\n           ]) + if_rocm([\n               \"//tensorflow/core/util:rocm_solvers\",\n           ]) + [\":gpu_prim_hdrs\"] +\n           ARRAY_DEPS,\n)\n\ncc_library(\n    name = \"composite_tensor_variant\",\n    srcs = [\"composite_tensor_variant.cc\"],\n    hdrs = [\"composite_tensor_variant.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)\n\ntf_cc_test(\n    name = \"composite_tensor_variant_test\",\n    size = \"small\",\n    srcs = [\"composite_tensor_variant_test.cc\"],\n    deps = [\n        \":composite_tensor_variant\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"composite_tensor_ops\",\n    srcs = [\"composite_tensor_ops.cc\"],\n    deps = [\n        \":composite_tensor_variant\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ncc_library(\n    name = \"ragged_ops\",\n    deps = [\n        \":ragged_cross_op\",\n        \":ragged_gather_op\",\n        \":ragged_range_op\",\n        \":ragged_tensor_from_variant_op\",\n        \":ragged_tensor_to_sparse_kernel\",\n        \":ragged_tensor_to_tensor_op\",\n        \":ragged_tensor_to_variant_op\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"ragged_gather_op\",\n    srcs = [\"ragged_gather_op.cc\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n    ],\n)\n\ntf_cc_test(\n    name = \"ragged_gather_op_test\",\n    size = \"small\",\n    srcs = [\"ragged_gather_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ragged_gather_op\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"ragged_range_op\",\n    srcs = [\"ragged_range_op.cc\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n    ],\n)\n\ntf_cc_test(\n    name = \"ragged_range_op_test\",\n    srcs = [\"ragged_range_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ragged_range_op\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"ragged_tensor_to_sparse_kernel\",\n    srcs = [\"ragged_tensor_to_sparse_kernel.cc\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n    ],\n)\n\ntf_cc_test(\n    name = \"ragged_tensor_to_tensor_op_test\",\n    size = \"small\",\n    srcs = [\"ragged_tensor_to_tensor_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ragged_tensor_to_tensor_op\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"ragged_tensor_to_tensor_op\",\n    srcs = [\"ragged_tensor_to_tensor_op.cc\"],\n    deps = [\n        \":broadcast_to_op\",\n        \":list_kernels\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_lite\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/util:ragged_to_dense_util\",\n    ],\n)\n\ntf_cc_test(\n    name = \"ragged_tensor_to_sparse_kernel_test\",\n    size = \"small\",\n    srcs = [\"ragged_tensor_to_sparse_kernel_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ragged_tensor_to_sparse_kernel\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ncc_library(\n    name = \"ragged_tensor_variant\",\n    srcs = [\"ragged_tensor_variant.cc\"],\n    hdrs = [\"ragged_tensor_variant.h\"],\n    deps = [\n        \":cwise_op\",\n        \"//tensorflow/core:framework\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"ragged_tensor_to_variant_op\",\n    srcs = [\"ragged_tensor_to_variant_op.cc\"],\n    deps = [\n        \":concat_lib\",\n        \":ragged_tensor_variant\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"ragged_tensor_from_variant_op\",\n    srcs = [\"ragged_tensor_from_variant_op.cc\"],\n    deps = [\n        \":ragged_tensor_variant\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"ragged_tensor_to_variant_op_test\",\n    size = \"small\",\n    srcs = [\"ragged_tensor_to_variant_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ragged_tensor_to_variant_op\",\n        \":ragged_tensor_variant\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_cc_test(\n    name = \"ragged_tensor_from_variant_op_test\",\n    size = \"small\",\n    srcs = [\"ragged_tensor_from_variant_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ragged_tensor_from_variant_op\",\n        \":ragged_tensor_variant\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"ragged_cross_op\",\n    srcs = [\"ragged_cross_op.cc\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"rnn_ops\",\n    deps = [\n        \"//tensorflow/core/kernels/rnn:gru_ops\",\n        \"//tensorflow/core/kernels/rnn:lstm_ops\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"cudnn_rnn_kernels\",\n    srcs = [\"cudnn_rnn_ops.cc\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":gpu_utils\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//tensorflow/core/platform:stream_executor\",\n        \"//tensorflow/core/profiler/lib:scoped_annotation\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_cc_test(\n    name = \"batch_norm_op_test\",\n    size = \"small\",\n    srcs = [\"batch_norm_op_test.cc\"],\n    tags = [\n        \"no_oss\",  # b/189866692\n    ],\n    deps = [\n        \":batch_norm_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ncc_library(\n    name = \"batch_kernel_test_util\",\n    testonly = 1,\n    srcs = [\"batch_kernel_test_util.cc\"],\n    hdrs = [\"batch_kernel_test_util.h\"],\n    deps = [\n        \":batch_kernels\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"batch_kernels_test\",\n    size = \"small\",\n    srcs = [\"batch_kernels_test.cc\"],\n    deps = [\n        \":batch_kernel_test_util\",\n        \":batch_kernels\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"batch_kernels_env_test\",\n    size = \"small\",\n    srcs = [\"batch_kernels_env_test.cc\"],\n    deps = [\n        \":batch_kernel_test_util\",\n        \":batch_kernels\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/platform:status_matchers\",\n    ],\n)\n\ntf_cc_test(\n    name = \"ops_testutil_test\",\n    size = \"small\",\n    srcs = [\"ops_testutil_test.cc\"],\n    deps = [\n        \":identity_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":variable_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"concat_op_test\",\n    size = \"small\",\n    srcs = [\"concat_op_test.cc\"],\n    deps = [\n        \":concat_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"bincount_op_test\",\n    size = \"small\",\n    srcs = [\"bincount_op_test.cc\"],\n    deps = [\n        \":bincount_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"broadcast_to_op_test\",\n    size = \"small\",\n    srcs = [\"broadcast_to_op_test.cc\"],\n    deps = [\n        \":broadcast_to_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"constant_op_test\",\n    size = \"small\",\n    srcs = [\"constant_op_test.cc\"],\n    tags = [\"no_cuda_on_cpu_tap\"],\n    deps = [\n        \":constant_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"deep_conv2d_test\",\n    size = \"small\",\n    srcs = [\"deep_conv2d_test.cc\"],\n    deps = [\n        \":conv_ops\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ntf_cc_test(\n    name = \"xsmm_conv2d_test\",\n    size = \"small\",\n    srcs = select({\n        \":xsmm_convolutions\": [\"xsmm_conv2d_test.cc\"],\n        \"//conditions:default\": [],\n    }),\n    deps = [\n        \":conv_ops\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ] + select({\n        \":xsmm_convolutions\": [\n            \"@libxsmm_archive//:xsmm_avx\",\n        ],\n        \"//conditions:default\": [],\n    }),\n)\n\ntf_cuda_cc_test(\n    name = \"conv_ops_test\",\n    size = \"medium\",\n    srcs = [\"conv_ops_test.cc\"],\n    tags = [\n        \"no_cuda_asan\",  # TODO(b/171342275): re-enable.\n    ],\n    deps = [\n        \":conv_ops\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:cc_ops_internal\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:tensorflow\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/kernels/image\",\n        \"//tensorflow/core/platform:tensor_float_32_utils\",\n        \"@com_google_absl//absl/algorithm:container\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"conv_ops_benchmark_test\",\n    size = \"medium\",\n    srcs = [\"conv_ops_benchmark_test.cc\"],\n    tags = [\n        \"nomac\",  # b/132448918\n        \"nomsan\",  # b/141643254\n    ],\n    deps = [\n        \":bias_op\",\n        \":conv_ops\",\n        \":fused_batch_norm_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":relu_op\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/stream_executor/cuda:cudnn_plugin\",\n    ] + if_mkl([\"//tensorflow/core/kernels/mkl:mkl_conv_op\"]),\n)\n\ntf_cuda_cc_test(\n    name = \"conv_grad_filter_ops_benchmark_test\",\n    size = \"medium\",\n    srcs = [\"conv_grad_filter_ops_benchmark_test.cc\"],\n    tags = [\"nomsan\"],  # b/141643254\n    deps = [\n        \":conv_ops\",\n        \":host_constant_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/stream_executor/cuda:cudnn_plugin\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"conv_grad_input_ops_benchmark_test\",\n    size = \"medium\",\n    srcs = [\"conv_grad_input_ops_benchmark_test.cc\"],\n    tags = [\"nomsan\"],  # b/141643254\n    deps = [\n        \":conv_ops\",\n        \":host_constant_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/stream_executor/cuda:cudnn_plugin\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"depthwise_conv_ops_test\",\n    size = \"small\",\n    srcs = [\"depthwise_conv_ops_test.cc\"],\n    tags = tf_cuda_tests_tags() + [\n        \"no_gpu\",  # TODO(b/194100358): re-enable after flakiness resolved.\n        \"no_cuda_asan\",  # TODO(b/171342266): re-enable.\n    ],\n    deps = [\n        \":conv_ops\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:tensorflow\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/kernels/image\",\n    ],\n)\n\ntf_cc_test(\n    name = \"example_parsing_ops_test\",\n    size = \"medium\",\n    srcs = [\"example_parsing_ops_test.cc\"],\n    shard_count = 4,\n    tags = [\"optonly\"],\n    deps = [\n        \":example_parsing_ops\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"@com_google_absl//absl/base\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"fake_quant_ops_test\",\n    size = \"small\",\n    srcs = [\"fake_quant_ops_test.cc\"],\n    tags = tf_cuda_tests_tags(),\n    deps = [\n        \":fake_quant_ops\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"fused_batch_norm_op_test\",\n    size = \"small\",\n    srcs = [\"fused_batch_norm_op_test.cc\"],\n    tags = [\n        \"nomsan\",  # TODO(b/181135145), use-of-uninitialized-value in initializedLoggingWithEnvVariables\n    ],\n    deps = [\n        \":fused_batch_norm_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/stream_executor/cuda:cudnn_plugin\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"fused_batch_norm_ex_op_test\",\n    size = \"small\",\n    srcs = [\"fused_batch_norm_ex_op_test.cc\"],\n    tags = [\n        \"no_cuda_on_cpu_tap\",\n        \"nomsan\",  # b/141643254\n    ],\n    deps = [\n        \":cwise_op\",\n        \":fused_batch_norm_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":relu_op\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:cc_ops_internal\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:direct_session\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/stream_executor/cuda:cudnn_plugin\",\n        \"@com_google_absl//absl/algorithm:container\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_cc_test(\n    name = \"in_topk_op_test\",\n    size = \"small\",\n    srcs = [\"in_topk_op_test.cc\"],\n    tags = [\"nomsan\"],  # b/141643254\n    deps = [\n        \":in_topk_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/stream_executor/cuda:cudnn_plugin\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"gather_functor\",\n    prefix = \"gather_functor\",\n    visibility = [\":friends\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//third_party/eigen3\",\n    ],\n)\n\n# Unlike gather_functor library, this does not include the CUDA code and deps.\ncc_library(\n    name = \"gather_functor_hdr\",\n    hdrs = [\n        \"gather_functor.h\",\n        \"gather_functor_batched.h\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"dense_update_functor\",\n    srcs = [\"dense_update_functor.cc\"],\n    hdrs = [\"dense_update_functor.h\"],\n    gpu_srcs = [\n        \"dense_update_functor.h\",\n        \"dense_update_functor_gpu.cu.cc\",\n    ],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//third_party/eigen3\",\n    ],\n    alwayslink = 0,\n)\n\ntf_cuda_cc_test(\n    name = \"gather_op_test\",\n    size = \"small\",\n    srcs = [\"gather_op_test.cc\"],\n    deps = [\n        \":gather_op\",\n        \":host_constant_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"gather_nd_op_test\",\n    size = \"small\",\n    srcs = [\"gather_nd_op_test.cc\"],\n    deps = [\n        \":gather_nd_op\",\n        \":host_constant_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"guarantee_const_op_test\",\n    size = \"small\",\n    srcs = [\"guarantee_const_op_test.cc\"],\n    deps = [\n        \":guarantee_const_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":variable_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"identity_op_test\",\n    size = \"small\",\n    srcs = [\"identity_op_test.cc\"],\n    deps = [\n        \":identity_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"identity_n_op_test\",\n    size = \"small\",\n    srcs = [\"identity_n_op_test.cc\"],\n    deps = [\n        \":identity_n_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"debug_ops_test\",\n    size = \"small\",\n    srcs = [\"debug_ops_test.cc\"],\n    deps = [\n        \":debug_ops\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:debug_ops_op_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/debug:debug_io_utils\",\n        \"//tensorflow/core/debug:debug_node_key\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"quantize_and_dequantize_op_test\",\n    size = \"small\",\n    srcs = [\"quantize_and_dequantize_op_test.cc\"],\n    tags = [\n        \"no_windows\",  # test uses rand_r which does not exist on Windows\n    ],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantize_and_dequantize_op\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"dequantize_op_test\",\n    size = \"small\",\n    srcs = [\"dequantize_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantized_ops\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"one_hot_op_test\",\n    size = \"small\",\n    srcs = [\"one_hot_op_test.cc\"],\n    tags = [\"nomsan\"],  # b/141643254\n    deps = [\n        \":one_hot_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/stream_executor/cuda:cudnn_plugin\",\n    ],\n)\n\ntf_cc_test(\n    name = \"reverse_op_test\",\n    size = \"small\",\n    srcs = [\"reverse_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":reverse_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"scatter_functor\",\n    prefix = \"scatter_functor\",\n    visibility = [\":friends\"],\n    deps = [\n        \":dense_update_functor\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//tensorflow/core/util:determinism_for_kernels\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_cc_test(\n    name = \"shape_ops_test\",\n    size = \"small\",\n    srcs = [\"shape_ops_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":shape_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"slice_op_test\",\n    size = \"small\",\n    srcs = [\"slice_op_test.cc\"],\n    linkopts = select({\n        \"//tensorflow:macos\": [\"-headerpad_max_install_names\"],\n        \"//conditions:default\": [],\n    }),\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":slice_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"strided_slice_op_test\",\n    size = \"small\",\n    srcs = [\"strided_slice_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":slice_op\",\n        \":strided_slice_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"unique_op_test\",\n    size = \"small\",\n    srcs = [\"unique_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":unique_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"transpose_functor\",\n    srcs = [\"transpose_functor_cpu.cc\"],\n    hdrs = [\"transpose_functor.h\"],\n    gpu_srcs = [\n        \"transpose_functor_gpu.cu.cc\",\n        \"transpose_functor.h\",\n    ],\n    visibility = [\":friends\"],\n    deps = [\n        \":conv_2d\",\n        \":ops_util\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/eigen3\",\n    ],\n    alwayslink = 1,\n)\n\ntf_cc_test(\n    name = \"transpose_util_test\",\n    size = \"small\",\n    srcs = [\"transpose_util_test.cc\"],\n    deps = [\n        \":transpose_functor\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/framework:tensor_testutil\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"candidate_sampler_ops\",\n    prefix = \"candidate_sampler_ops\",\n    deps = [\n        \":range_sampler\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ncc_library(\n    name = \"range_sampler\",\n    srcs = [\"range_sampler.cc\"],\n    hdrs = [\"range_sampler.h\"],\n    visibility = [\"//visibility:private\"],\n    deps = [\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n    ],\n)\n\ntf_cc_test(\n    name = \"range_sampler_test\",\n    size = \"small\",\n    srcs = [\"range_sampler_test.cc\"],\n    deps = [\n        \":range_sampler\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"control_flow_ops\",\n    prefix = \"control_flow_ops\",\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"while_op_test\",\n    srcs = [\"while_op_test.cc\"],\n    tags = [\n        \"no_windows\",\n    ],  # TODO(b/208697533): Re-enable after fixing.\n    deps = [\n        \":control_flow_ops\",\n        \"//tensorflow/c/experimental/stream_executor\",\n        \"//tensorflow/c/experimental/stream_executor:stream_executor_test_util\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/common_runtime:direct_session_internal\",\n        \"//tensorflow/core/common_runtime/pluggable_device:pluggable_device_runtime_impl\",\n        \"//tensorflow/core/framework:function_testlib\",\n        \"//tensorflow/core/kernels:cast_op\",\n        \"//tensorflow/core/kernels:constant_op\",\n        \"//tensorflow/core/kernels:cwise_op\",\n        \"//tensorflow/core/kernels:functional_ops\",\n        \"//tensorflow/core/kernels:identity_op\",\n        \"//tensorflow/core/kernels:ops_testutil\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"ctc_ops\",\n    prefix = \"ctc\",\n    deps = [\n        \"//tensorflow/core/framework:bounds_check\",\n        \":ops_util\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/util/ctc:ctc_beam_search_lib\",\n        \"//tensorflow/core/util/ctc:ctc_loss_calculator_lib\",\n    ] + if_cuda_or_rocm([\n        \":gpu_utils\",\n        \":conv_ops_gpu_hdrs\",\n    ]) + if_cuda([\n        \"@local_config_cuda//cuda:cudnn_header\",\n    ]),\n)\n\ntf_cc_test(\n    name = \"control_flow_ops_test\",\n    size = \"small\",\n    srcs = [\"control_flow_ops_test.cc\"],\n    deps = [\n        \":control_flow_ops\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/common_runtime:forward_type_inference\",\n    ],\n)\n\ncc_library(\n    name = \"data_flow\",\n    deps = [\n        \":barrier_ops\",\n        \":conditional_accumulator_base_op\",\n        \":conditional_accumulator_op\",\n        \":dynamic_partition_op\",\n        \":dynamic_stitch_op\",\n        \":fifo_queue_op\",\n        \":lookup_table_init_op\",\n        \":lookup_table_op\",\n        \":map_stage_op\",\n        \":padding_fifo_queue_op\",\n        \":priority_queue_op\",\n        \":queue_ops\",\n        \":random_shuffle_queue_op\",\n        \":record_input_op\",\n        \":session_ops\",\n        \":sparse_conditional_accumulator_op\",\n        \":stack_ops\",\n        \":stage_op\",\n        \":tensor_array_ops\",\n    ],\n)\n\ncc_library(\n    name = \"lookup\",\n    deps = [\n        \":lookup_table_init_op\",\n        \":lookup_table_op\",\n    ],\n)\n\ncc_header_only_library(\n    name = \"lookup_headers_lib\",\n    deps = [\":lookup\"],\n)\n\nDATA_FLOW_DEPS = [\n    \":concat_lib\",\n    \":conditional_accumulator\",\n    \":conditional_accumulator_base\",\n    \":fifo_queue\",\n    \":initializable_lookup_table\",\n    \":lookup_util\",\n    \":padding_fifo_queue\",\n    \":priority_queue\",\n    \":queue_base\",\n    \":queue_op\",\n    \":sparse_conditional_accumulator\",\n    \":split_lib\",\n    \":tensor_array\",\n    \":typed_conditional_accumulator_base\",\n    \":typed_queue\",\n    \"//third_party/eigen3\",\n    \"//tensorflow/core:core_cpu\",\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:lib_internal\",\n    \"//tensorflow/core/framework:bounds_check\",\n]\n\ntf_kernel_library(\n    name = \"conditional_accumulator_base_op\",\n    prefix = \"conditional_accumulator_base_op\",\n    deps = DATA_FLOW_DEPS,\n)\n\ntf_kernel_library(\n    name = \"conditional_accumulator_op\",\n    prefix = \"conditional_accumulator_op\",\n    deps = DATA_FLOW_DEPS,\n)\n\ntf_kernel_library(\n    name = \"barrier_ops\",\n    prefix = \"barrier_ops\",\n    deps = DATA_FLOW_DEPS,\n)\n\ntf_kernel_library(\n    name = \"fifo_queue_op\",\n    prefix = \"fifo_queue_op\",\n    deps = DATA_FLOW_DEPS,\n)\n\ntf_kernel_library(\n    name = \"padding_fifo_queue_op\",\n    prefix = \"padding_fifo_queue_op\",\n    deps = DATA_FLOW_DEPS,\n)\n\ntf_kernel_library(\n    name = \"priority_queue_op\",\n    prefix = \"priority_queue_op\",\n    deps = DATA_FLOW_DEPS,\n)\n\ntf_kernel_library(\n    name = \"queue_ops\",\n    prefix = \"queue_ops\",\n    deps = DATA_FLOW_DEPS,\n)\n\ntf_kernel_library(\n    name = \"random_shuffle_queue_op\",\n    prefix = \"random_shuffle_queue_op\",\n    deps = DATA_FLOW_DEPS + [\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"scoped_allocator_ops\",\n    prefix = \"scoped_allocator_ops\",\n    deps = [\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"scoped_allocator_ops_test\",\n    srcs = [\"scoped_allocator_ops_test.cc\"],\n    linkstatic = tf_kernel_tests_linkstatic(),  #Required for benchmarking\n    deps = [\n        \":cwise_op\",\n        \":dense_update_ops\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":scoped_allocator_ops\",\n        \":variable_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"session_ops\",\n    prefix = \"session_ops\",\n    deps = DATA_FLOW_DEPS,\n)\n\ntf_kernel_library(\n    name = \"sparse_conditional_accumulator_op\",\n    prefix = \"sparse_conditional_accumulator_op\",\n    deps = DATA_FLOW_DEPS,\n)\n\ncc_library(\n    name = \"stack\",\n    srcs = [\"stack.cc\"],\n    hdrs = [\"stack.h\"],\n    deps = [\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"stack_ops\",\n    prefix = \"stack_ops\",\n    deps = DATA_FLOW_DEPS + [\":stack\"],\n)\n\ntf_kernel_library(\n    name = \"tensor_array_ops\",\n    prefix = \"tensor_array_ops\",\n    deps = DATA_FLOW_DEPS,\n)\n\nDYNAMIC_DEPS = [\n    \"//tensorflow/core/framework:bounds_check\",\n    \"//tensorflow/core:core_cpu\",\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:lib_internal\",\n]\n\ntf_kernel_library(\n    name = \"dynamic_partition_op\",\n    prefix = \"dynamic_partition_op\",\n    deps = DYNAMIC_DEPS + [\n        \":fill_functor\",\n        \":gather_functor\",\n        \":gpu_prim_hdrs\",\n        \"//tensorflow/core:framework_internal\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"dynamic_stitch_op\",\n    gpu_srcs = [\n        \"gpu_device_array.h\",\n        \"gpu_device_array_gpu.h\",\n    ],\n    prefix = \"dynamic_stitch_op\",\n    deps = DYNAMIC_DEPS,\n)\n\ncc_library(\n    name = \"tensor_cord\",\n    srcs = [\"tensor_cord.cc\"],\n    hdrs = [\"tensor_cord.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)\n\ntf_cc_test(\n    name = \"tensor_cord_test\",\n    srcs = [\"tensor_cord_test.cc\"],\n    deps = [\n        \":tensor_cord\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/platform:cord\",\n    ],\n)\n\nLOOKUP_DEPS = [\n    \":initializable_lookup_table\",\n    \":lookup_util\",\n    \"@com_google_absl//absl/container:flat_hash_map\",\n    \"//tensorflow/core:core_cpu\",\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:lib_internal\",\n    \"//tensorflow/core/framework:bounds_check\",\n]\n\ntf_kernel_library(\n    name = \"lookup_table_init_op\",\n    prefix = \"lookup_table_init_op\",\n    deps = LOOKUP_DEPS,\n)\n\ntf_kernel_library(\n    name = \"lookup_table_op\",\n    prefix = \"lookup_table_op\",\n    deps = LOOKUP_DEPS,\n)\n\ncc_library(\n    name = \"checkpoint_ops\",\n    deps = [\n        \":generate_vocab_remapping_op\",\n        \":load_and_remap_matrix_op\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"generate_vocab_remapping_op\",\n    srcs = [\"generate_vocab_remapping_op.cc\"],\n    deps = [\n        \":lookup_table_init_op\",\n        \":lookup_table_op\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"load_and_remap_matrix_op\",\n    srcs = [\"load_and_remap_matrix_op.cc\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/util/tensor_bundle\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_cuda_cc_tests(\n    name = \"dynamic_op_test\",\n    size = \"small\",\n    srcs = [\n        \"dynamic_partition_op_test.cc\",\n        \"dynamic_stitch_op_test.cc\",\n    ],\n    deps = [\n        \":data_flow\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ncc_library(\n    name = \"fifo_queue\",\n    srcs = [\"fifo_queue.cc\"],\n    hdrs = [\"fifo_queue.h\"],\n    visibility = [\":friends\"],\n    deps = [\n        \":queue_base\",\n        \":queue_op\",\n        \":typed_queue\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ncc_library(\n    name = \"padding_fifo_queue\",\n    srcs = [\"padding_fifo_queue.cc\"],\n    hdrs = [\"padding_fifo_queue.h\"],\n    visibility = [\"//visibility:private\"],\n    deps = [\n        \":fifo_queue\",\n        \":queue_base\",\n        \":typed_queue\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ncc_library(\n    name = \"conditional_accumulator_base\",\n    srcs = [\"conditional_accumulator_base.cc\"],\n    hdrs = [\n        \"conditional_accumulator_base.h\",\n    ],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"typed_conditional_accumulator_base\",\n    hdrs = [\"typed_conditional_accumulator_base.h\"],\n    deps = [\n        \":conditional_accumulator_base\",\n    ],\n)\n\ncc_library(\n    name = \"conditional_accumulator\",\n    hdrs = [\n        \"conditional_accumulator.h\",\n        \"conditional_accumulator_base_op.h\",\n    ],\n    deps = [\n        \":conditional_accumulator_base\",\n        \":fill_functor\",\n        \":typed_conditional_accumulator_base\",\n    ],\n)\n\ncc_library(\n    name = \"sparse_conditional_accumulator\",\n    hdrs = [\"sparse_conditional_accumulator.h\"],\n    deps = [\n        \":typed_conditional_accumulator_base\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"tensor_array\",\n    srcs = [\"tensor_array.cc\"],\n    hdrs = [\"tensor_array.h\"],\n    visibility = [\"//visibility:private\"],\n    deps = [\n        \":aggregate_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"resource_variable_ops\",\n    srcs = [\"resource_variable_ops.cc\"],\n    hdrs = [\"resource_variable_ops.h\"],\n    deps = [\n        \":dense_update_functor\",\n        \":gather_functor\",\n        \":gather_nd_op\",\n        \":resource_variable_util\",\n        \":scatter_functor\",\n        \":training_op_helpers\",\n        \":variable_ops\",\n        \"//tensorflow/core:core_cpu_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//tensorflow/core/util:determinism_for_kernels\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"resource_variable_util\",\n    srcs = [\"resource_variable_util.cc\"],\n    hdrs = [\"resource_variable_util.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n    ],\n)\n\ncc_library(\n    name = \"tensor_list\",\n    srcs = [\"tensor_list.cc\"],\n    hdrs = [\"tensor_list.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/framework:tensor_shape_proto_cc\",\n        \"//tensorflow/core/lib/core:refcount\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"list_kernels\",\n    srcs = [\"list_kernels.cc\"],\n    hdrs = [\"list_kernels.h\"],\n    gpu_srcs = [\n        \"list_kernels.cu.cc\",\n        \"list_kernels.h\",\n    ],\n    deps = [\n        \":concat_lib\",\n        \":fill_functor\",\n        \":tensor_list\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/stream_executor\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"tensor_map\",\n    srcs = [\"tensor_map.cc\"],\n    hdrs = [\"tensor_map.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/framework:tensor_shape_proto_cc\",\n        \"//tensorflow/core/lib/core:refcount\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"map_kernels\",\n    srcs = [\"map_kernels.cc\"],\n    hdrs = [\"map_kernels.h\"],\n    deps = [\n        \":concat_lib\",\n        \":fill_functor\",\n        \":tensor_map\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_cc_tests(\n    name = \"tensor_map_test\",\n    size = \"small\",\n    srcs = [\n        \"tensor_map_test.cc\",\n    ],\n    tags = [\"nomsan\"],  # b/163222155\n    deps = [\n        \":tensor_map\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/framework:tensor_testutil\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"fact_op\",\n    prefix = \"fact_op\",\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"function_ops\",\n    prefix = \"function_ops\",\n    deps = [\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/profiler/lib:traceme\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"functional_ops\",\n    prefix = \"functional_ops\",\n    deps = [\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/profiler/lib:traceme\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"partitioned_function_ops\",\n    prefix = \"partitioned_function_ops\",\n    deps = [\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/grappler:grappler_item\",\n        \"//tensorflow/core/grappler/clusters:virtual_cluster\",\n        \"//tensorflow/core/grappler/optimizers:meta_optimizer\",\n        \"//tensorflow/core/grappler/utils:functions\",\n        \"//tensorflow/core/profiler/lib:traceme\",\n        \"//tensorflow/stream_executor:stream\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_cc_tests(\n    name = \"eigen_test\",\n    size = \"small\",\n    srcs = [\n        \"eigen_activations_test.cc\",\n        \"eigen_attention_test.cc\",\n        \"eigen_backward_cuboid_convolutions_test.cc\",\n        \"eigen_backward_spatial_convolutions_test.cc\",\n        \"eigen_pooling_test.cc\",\n        \"eigen_spatial_convolutions_test.cc\",\n    ],\n    deps = [\n        \":eigen_helpers\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\n# Conditional test target generation is not supported by the \"tf_cc_tests\" macro\n# (can't add 'select' to the srcs field, type 'select' is not iterable).\ntf_cc_test(\n    name = \"eigen_mkldnn_contraction_kernel_test\",\n    size = \"small\",\n    srcs = select({\n        \"//tensorflow:android_x86\": [],\n        \"//tensorflow:arm_any\": [],\n        \"//tensorflow:fuchsia_x86_64\": [],\n        \"//tensorflow:ios\": [],\n        \"//tensorflow:linux_ppc64le\": [],\n        \"//tensorflow:linux_s390x\": [],\n        \":no_mkldnn_contraction_kernel\": [],\n        \"//conditions:default\": [\"eigen_mkldnn_contraction_kernel_test.cc\"],\n    }),\n    tags = [\"mkldnn_contraction_kernel\"],\n    deps = [\n        \":eigen_contraction_kernel\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"eigen_benchmark\",\n    testonly = 1,\n    hdrs = [\n        \"eigen_benchmark.h\",\n        \":eigen_helpers\",\n    ],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_cc_test(\n    name = \"eigen_benchmark_cpu_test\",\n    srcs = [\"eigen_benchmark_cpu_test.cc\"],\n    deps = [\n        \":eigen_benchmark\",\n        \":eigen_helpers\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_cc_tests(\n    name = \"basic_ops_benchmark_test\",\n    size = \"small\",\n    srcs = [\n        \"basic_ops_benchmark_test.cc\",\n    ],\n    deps = [\n        \":math\",\n        \":ops_util\",\n        \":state\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ncc_library(\n    name = \"io\",\n    deps = [\n        \":fixed_length_record_reader_op\",\n        \":identity_reader_op\",\n        \":matching_files_op\",\n        \":reader_ops\",\n        \":restore_op\",\n        \":save_op\",\n        \":save_restore_v2_ops\",\n        \":text_line_reader_op\",\n        \":tf_record_reader_op\",\n        \":whole_file_read_ops\",\n    ] + select({\n        \"//tensorflow:fuchsia\": [],\n        \"//conditions:default\": [\":lmdb_reader_op\"],\n    }),\n)\n\nIO_DEPS = [\n    \":ops_util\",\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:lib_internal\",\n    \"//tensorflow/core:protos_all_cc\",\n    \"//tensorflow/core:reader_base\",\n    \"//tensorflow/core/util/tensor_bundle\",\n]\n\ntf_kernel_library(\n    name = \"fixed_length_record_reader_op\",\n    prefix = \"fixed_length_record_reader_op\",\n    deps = IO_DEPS,\n)\n\ntf_kernel_library(\n    name = \"identity_reader_op\",\n    prefix = \"identity_reader_op\",\n    deps = IO_DEPS + [\"@com_google_absl//absl/strings\"],\n)\n\ntf_kernel_library(\n    name = \"lmdb_reader_op\",\n    prefix = \"lmdb_reader_op\",\n    deps = IO_DEPS + [\n        \"@lmdb\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"matching_files_op\",\n    prefix = \"matching_files_op\",\n    deps = IO_DEPS,\n)\n\ntf_kernel_library(\n    name = \"reader_ops\",\n    prefix = \"reader_ops\",\n    deps = IO_DEPS,\n)\n\nSAVE_RESTORE_DEPS = [\n    \":checkpoint_callback_manager\",\n    \":save_restore_tensor\",\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:lib_internal\",\n    \"//tensorflow/core:protos_all_cc\",\n    \"//tensorflow/core/framework:bounds_check\",\n    \"//tensorflow/core/util/tensor_bundle\",\n]\n\ntf_kernel_library(\n    name = \"restore_op\",\n    prefix = \"restore_op\",\n    deps = SAVE_RESTORE_DEPS,\n)\n\ntf_kernel_library(\n    name = \"save_op\",\n    prefix = \"save_op\",\n    deps = SAVE_RESTORE_DEPS,\n)\n\ntf_kernel_library(\n    name = \"checkpoint_callback_manager\",\n    srcs = [\n        \"checkpoint_callback_manager.cc\",\n    ],\n    hdrs = [\n        \"checkpoint_callback_manager.h\",\n    ],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core/platform:regexp\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_cc_tests(\n    name = \"checkpoint_callback_manager_test\",\n    size = \"small\",\n    srcs = [\"checkpoint_callback_manager_test.cc\"],\n    deps = [\n        \":checkpoint_callback_manager\",\n        \":io\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"save_restore_v2_ops\",\n    prefix = \"save_restore_v2_ops\",\n    deps = SAVE_RESTORE_DEPS,\n)\n\ntf_kernel_library(\n    name = \"text_line_reader_op\",\n    prefix = \"text_line_reader_op\",\n    deps = IO_DEPS,\n)\n\ntf_kernel_library(\n    name = \"tf_record_reader_op\",\n    prefix = \"tf_record_reader_op\",\n    deps = IO_DEPS,\n)\n\ntf_kernel_library(\n    name = \"whole_file_read_ops\",\n    prefix = \"whole_file_read_ops\",\n    deps = IO_DEPS + [\"@com_google_absl//absl/strings\"],\n)\n\ntf_cc_tests(\n    name = \"bonus2_tests\",\n    size = \"small\",\n    srcs = [\n        \"merge_v2_checkpoints_op_test.cc\",\n        \"restore_op_test.cc\",\n        \"restore_v2_op_test.cc\",\n        \"save_op_test.cc\",\n        \"save_v2_op_test.cc\",\n    ],\n    deps = [\n        \":io\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/util/tensor_bundle\",\n    ],\n)\n\ncc_library(\n    name = \"logging\",\n    deps = [\n        \":logging_ops\",\n        \":summary_audio_op\",\n        \":summary_image_op\",\n        \":summary_tensor_op\",\n    ],\n)\n\nLOGGING_DEPS = [\n    \"@com_google_absl//absl/strings\",\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:lib_internal\",\n    \"//tensorflow/core:protos_all_cc\",\n    # TODO(b/162630222): remove this dependency.\n    \"//tensorflow/c/kernels:histogram_summary_op\",\n    \"//tensorflow/c/kernels:merge_summary_op\",\n    \"//tensorflow/c/kernels:summary_op\",\n    \"//tensorflow/core/util:determinism_for_kernels\",\n]\n\ntf_kernel_library(\n    name = \"logging_ops\",\n    prefix = \"logging_ops\",\n    deps = LOGGING_DEPS,\n)\n\ntf_kernel_library(\n    name = \"summary_audio_op\",\n    prefix = \"summary_audio_op\",\n    deps = LOGGING_DEPS,\n)\n\ntf_kernel_library(\n    name = \"summary_image_op\",\n    prefix = \"summary_image_op\",\n    deps = LOGGING_DEPS + [\"//tensorflow/core/lib/png:png_io\"],\n)\n\n# TODO(b/162630222): remove this target\ncc_library(\n    name = \"summary_op\",\n    deps = [\n        \"//tensorflow/c/kernels:histogram_summary_op\",\n        \"//tensorflow/c/kernels:merge_summary_op\",\n        \"//tensorflow/c/kernels:summary_op\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"summary_tensor_op\",\n    prefix = \"summary_tensor_op\",\n    deps = LOGGING_DEPS,\n)\n\ntf_cc_tests(\n    name = \"bonus3_tests\",\n    size = \"small\",\n    srcs = [\n        \"logging_ops_test.cc\",\n        \"summary_audio_op_test.cc\",\n        \"summary_image_op_test.cc\",\n        \"summary_op_test.cc\",\n        \"summary_tensor_op_test.cc\",\n    ],\n    deps = [\n        \":logging\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/platform:status_matchers\",\n        \"//tensorflow/core/util:determinism_test_util\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"manip\",\n    deps = [\n        \":roll_op\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"roll_op\",\n    srcs = [\"roll_op.cc\"],\n    hdrs = [\"roll_op.h\"],\n    gpu_srcs = [\n        \"roll_op_gpu.cu.cc\",\n        \"roll_op.h\",\n    ],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_cc_test(\n    name = \"roll_op_test\",\n    size = \"small\",\n    srcs = [\"roll_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":roll_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"resource_ops_test\",\n    size = \"small\",\n    srcs = [\"resource_ops_test.cc\"],\n    deps = [\n        \":dense_update_functor\",\n        \":ops_testutil\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"lookup_ops_test\",\n    size = \"small\",\n    srcs = [\"lookup_ops_test.cc\"],\n    deps = [\n        \":lookup_table_op\",\n        \":ops_testutil\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\nMATH_DEPS = [\n    \":fill_functor\",\n    \"//tensorflow/core:core_cpu\",\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:lib_internal\",\n    \"//tensorflow/core:math_grad\",\n    \"//tensorflow/core/framework:bounds_check\",\n    \"//tensorflow/core/framework:op_requires\",\n    \"//third_party/eigen3\",\n]\n\ntf_kernel_library(\n    name = \"sparse_matmul_op\",\n    defines = select({\n        \":xsmm\": [\"TENSORFLOW_USE_LIBXSMM\"],\n        \"//conditions:default\": [],\n    }),\n    prefix = \"sparse_matmul_op\",\n    deps = MATH_DEPS + [\":eigen_contraction_kernel\"] + select({\n        \":xsmm\": [\n            \"@libxsmm_archive//:xsmm_avx\",\n        ],\n        \"//conditions:default\": [],\n    }),\n)\n\ncc_library(\n    name = \"math\",\n    deps = [\n        \":aggregate_ops\",\n        \":argmax_op\",\n        \":betainc_op\",\n        \":bincount_op\",\n        \":bucketize_op\",\n        \":cast_op\",\n        \":check_numerics_op\",\n        \":cross_op\",\n        \":cwise_op\",\n        \":fft_ops\",\n        \":histogram_op\",\n        \":matmul_op\",\n        \":nextafter_op\",\n        \":population_count_op\",\n        \":reduction_ops\",\n        \":scan_ops\",\n        \":segment_reduction_ops\",\n        \":sequence_ops\",\n        \":sparse_matmul_op\",\n        \"//tensorflow/core/kernels/special_math:special_math_op\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"aggregate_ops\",\n    prefix = \"aggregate_ops\",\n    deps = MATH_DEPS,\n)\n\ntf_kernel_library(\n    name = \"argmax_op\",\n    prefix = \"argmax_op\",\n    deps = MATH_DEPS,\n)\n\ntf_kernel_library(\n    name = \"batch_matmul_op\",\n    deps = [\":matmul_op\"],\n)\n\ntf_kernel_library(\n    name = \"matmul_op\",\n    # <prefix>*impl.h are excluded by default from the CPU build, add explicitly.\n    hdrs = [\"matmul_op_impl.h\"],\n    defines = select({\n        \":xsmm\": [\"TENSORFLOW_USE_LIBXSMM\"],\n        \"//conditions:default\": [],\n    }),\n    prefix = \"matmul_op\",\n    deps = MATH_DEPS + [\n        \":eigen_contraction_kernel\",\n        \":fused_eigen_output_kernels\",\n    ] + select({\n        \":xsmm\": [\"@libxsmm_archive//:xsmm_avx\"],\n        \"//conditions:default\": [],\n    }) + mkl_deps() + if_cuda([\n        \"//tensorflow/core/platform/default/build_config:cublas_plugin\",\n    ]) + if_cuda_or_rocm([\":gpu_utils\"]),\n)\n\ntf_kernel_library(\n    name = \"betainc_op\",\n    prefix = \"betainc_op\",\n    deps = MATH_DEPS,\n)\n\ntf_kernel_library(\n    name = \"bucketize_op\",\n    gpu_srcs = [\"gpu_device_array.h\"],\n    prefix = \"bucketize_op\",\n    deps = ARRAY_DEPS,\n)\n\ntf_kernel_library(\n    name = \"cast_op\",\n    copts = if_mlir_generated_gpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_GPU_KERNELS_ENABLED\"],\n    ),\n    # *.cu.cc sources are compiled with gpu_copts instead of copts.\n    gpu_copts = if_mlir_generated_gpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_GPU_KERNELS_ENABLED\"],\n    ),\n    prefix = \"cast_op\",\n    deps = MATH_DEPS + [\n        \"//tensorflow/core/kernels/mlir_generated:cast_op\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"check_numerics_op\",\n    prefix = \"check_numerics_op\",\n    deps = MATH_DEPS + [\"//tensorflow/core:framework_internal\"],\n)\n\ntf_kernel_library(\n    name = \"cross_op\",\n    prefix = \"cross_op\",\n    deps = MATH_DEPS,\n)\n\ntf_kernel_library(\n    name = \"cwise_op\",\n    copts = if_mlir_generated_cpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_CPU_KERNELS_ENABLED\"],\n    ) + if_mlir_generated_experimental_kernels_enabled([\n        \"-DMLIR_GENERATED_EXPERIMENTAL_KERNELS_ENABLED\",\n    ]) + if_mlir_generated_gpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_GPU_KERNELS_ENABLED\"],\n    ),\n    # *.cu.cc sources are compiled with gpu_copts instead of copts.\n    gpu_copts = if_mlir_generated_cpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_CPU_KERNELS_ENABLED\"],\n    ) + if_mlir_generated_experimental_kernels_enabled([\n        \"-DMLIR_GENERATED_EXPERIMENTAL_KERNELS_ENABLED\",\n    ]) + if_mlir_generated_gpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_GPU_KERNELS_ENABLED\"],\n    ),\n    prefix = \"cwise_op\",\n    deps = MATH_DEPS + [\n        \"//tensorflow/core/kernels/mlir_generated:cwise_op\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"nextafter_op\",\n    copts = if_mlir_generated_gpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_GPU_KERNELS_ENABLED\"],\n    ),\n    # *.cu.cc sources are compiled with gpu_copts instead of copts.\n    gpu_copts = if_mlir_generated_gpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_GPU_KERNELS_ENABLED\"],\n    ),\n    prefix = \"nextafter_op\",\n    deps = MATH_DEPS + [\n        \":cwise_op\",\n        \"//tensorflow/core/kernels/mlir_generated:nextafter_op\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"population_count_op\",\n    prefix = \"population_count_op\",\n    deps = MATH_DEPS,\n)\n\ntf_kernel_library(\n    name = \"fft_ops\",\n    prefix = \"fft_ops\",\n    deps = MATH_DEPS + [\n    ] + if_cuda([\n        \"//tensorflow/core/platform/default/build_config:cufft_plugin\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"reduction_ops\",\n    gpu_srcs = [\"reduction_gpu_kernels.cu.h\"],\n    prefix = \"reduction_ops\",\n    deps = MATH_DEPS + [\n        \":gpu_prim_hdrs\",\n        \":transpose_functor\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"segment_reduction_ops\",\n    prefix = \"segment_reduction_ops\",\n    deps = MATH_DEPS + [\n        \"//tensorflow/core/util:determinism_for_kernels\",\n    ] + if_cuda_or_rocm([\n        \":gpu_prim_helpers\",\n    ]) + if_cuda([\n        \"//tensorflow/core/util:cuda_solvers\",\n    ]) + if_rocm([\n        \"//tensorflow/core/util:rocm_solvers\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"scan_ops\",\n    srcs = [\"scan_ops.cc\"],\n    hdrs = [\"scan_ops.h\"],\n    gpu_srcs = [\n        \"scan_ops.h\",\n        \"scan_ops_gpu.h\",\n        \"scan_ops_gpu_double.cu.cc\",\n        \"scan_ops_gpu_float.cu.cc\",\n        \"scan_ops_gpu_half.cu.cc\",\n        \"scan_ops_gpu_int.cu.cc\",\n    ],\n    deps = MATH_DEPS + [\":gpu_prim_hdrs\"],\n)\n\ntf_kernel_library(\n    name = \"sequence_ops\",\n    prefix = \"sequence_ops\",\n    deps = MATH_DEPS,\n)\n\ntf_kernel_library(\n    name = \"unary_ops_composition\",\n    prefix = \"unary_ops_composition\",\n    deps = MATH_DEPS + [\n        \":cwise_op\",\n        \":relu_op\",\n    ],\n)\n\ntf_cc_test(\n    name = \"sequence_ops_test\",\n    size = \"small\",\n    srcs = [\"sequence_ops_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":sequence_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"cast_op_test\",\n    size = \"small\",\n    srcs = [\"cast_op_test.cc\"],\n    deps = [\n        \":cast_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"cross_op_test\",\n    size = \"small\",\n    srcs = [\"cross_op_test.cc\"],\n    deps = [\n        \":cross_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_tests(\n    name = \"sparse_tests\",\n    size = \"small\",\n    srcs = [\n        \"sparse_add_op_test.cc\",\n        \"sparse_dense_binary_op_shared_test.cc\",\n        \"sparse_reduce_sum_op_test.cc\",\n    ],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":sparse_add_op\",\n        \":sparse_dense_binary_op_shared\",\n        \":sparse_reduce_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"cwise_ops_test\",\n    size = \"small\",\n    srcs = [\"cwise_ops_test.cc\"],\n    deps = [\n        \":cwise_op\",\n        \":nn\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//tensorflow/core/framework:bounds_check\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"unary_ops_composition_test\",\n    size = \"small\",\n    srcs = [\"unary_ops_composition_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":unary_ops_composition\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:tensorflow\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"matmul_op_test\",\n    size = \"small\",\n    srcs = [\"matmul_op_test.cc\"],\n    deps = [\n        \":matmul_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantized_ops\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:cc_ops_internal\",\n        \"//tensorflow/cc:client_session\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:tensorflow\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"@com_google_absl//absl/algorithm:container\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"scan_ops_test\",\n    size = \"small\",\n    srcs = [\"scan_ops_test.cc\"],\n    linkopts = select({\n        \"//tensorflow:macos\": [\"-headerpad_max_install_names\"],\n        \"//conditions:default\": [],\n    }),\n    deps = [\n        \":host_constant_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":scan_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"reduction_ops_test\",\n    size = \"small\",\n    srcs = [\"reduction_ops_test.cc\"],\n    linkopts = select({\n        \"//tensorflow:macos\": [\"-headerpad_max_install_names\"],\n        \"//conditions:default\": [],\n    }),\n    deps = [\n        \":host_constant_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":reduction_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"segment_reduction_ops_test\",\n    size = \"small\",\n    srcs = [\"segment_reduction_ops_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":segment_reduction_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"immutable_constant_op_test\",\n    srcs = [\"immutable_constant_op_test.cc\"],\n    deps = [\n        \":array\",\n        \":immutable_constant_op\",\n        \":matmul_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":random_shuffle_op\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:direct_session\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:ops\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"sparse_matmul_op_test\",\n    size = \"small\",\n    srcs = [\"sparse_matmul_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":sparse_matmul_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"split_op_test\",\n    size = \"small\",\n    srcs = [\"split_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":split_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"split_v_op_test\",\n    size = \"small\",\n    srcs = [\"split_v_op_test.cc\"],\n    tags = [\n        \"no_windows\",  # split_v_op uses lrand48 which does not exist on Windows\n    ],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":split_v_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"diag_op_test\",\n    size = \"small\",\n    srcs = [\"diag_op_test.cc\"],\n    deps = [\n        \":diag_op\",\n        \":host_constant_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\n# conv_grad_ops currently has to be built with conv_ops*.\n# TODO(josh11b, zhengxq): put these a separate libraries in \":nn\" below once\n# conv_ops_gpu.h has be separated into its own library.\ntf_kernel_library(\n    name = \"conv_ops\",\n    srcs = [\n        \"conv_grad_filter_ops.cc\",\n        \"conv_grad_input_ops_double.cc\",\n        \"conv_grad_input_ops_float.cc\",\n        \"conv_grad_input_ops_half.cc\",\n        \"conv_grad_input_ops_int32.cc\",\n        \"conv_grad_input_ops.cc\",\n        \"conv_grad_ops_3d.cc\",\n        \"deep_conv2d.cc\",\n    ] + select({\n        \":xsmm_convolutions\": [\"xsmm_conv2d.cc\"],\n        \"//conditions:default\": [],\n    }),\n    hdrs = [\n        \"fill_functor.h\",\n        \"conv_grad_ops.h\",\n        \"conv_grad_input_ops.h\",\n        \"deep_conv2d.h\",\n        \"gemm_functors.h\",\n        \"winograd_transform.h\",\n        \"conv_ops_fused_impl.h\",\n    ] + select({\n        \":xsmm_convolutions\": [\"xsmm_conv2d.h\"],\n        \"//conditions:default\": [],\n    }),\n    defines = select({\n        \":xsmm_convolutions\": [\"TENSORFLOW_USE_LIBXSMM_CONVOLUTIONS\"],\n        \"//conditions:default\": [],\n    }) + select({\n        \":xsmm_backward_convolutions\": [\"TENSORFLOW_USE_LIBXSMM_BACKWARD_CONVOLUTIONS\"],\n        \"//conditions:default\": [],\n    }),\n    prefix = \"conv_ops\",\n    deps = [\n        \":conv_grad_shape_utils\",\n        \":conv_2d\",\n        \":conv_3d\",\n        \":eigen_contraction_kernel\",\n        \":fill_functor\",\n        \":fused_eigen_output_kernels\",\n        \":ops_util\",\n        \"@com_google_absl//absl/base:dynamic_annotations\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/synchronization\",\n        \"//third_party/eigen3\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/profiler/lib:scoped_annotation\",\n        \"//tensorflow/core/protobuf:autotuning_proto_cc\",\n        \"//tensorflow/core/util:image_resizer_state\",\n        \"//tensorflow/core/util/proto:proto_utils\",\n    ] + select({\n        \":xsmm_convolutions\": [\n            \"@libxsmm_archive//:xsmm_avx\",\n        ],\n        \"//conditions:default\": [],\n    }) + if_cuda([\n        \"//tensorflow/stream_executor/gpu:gpu_asm_opts\",\n        \"//tensorflow/core/platform/default/build_config:cublas_plugin\",\n        \"//tensorflow/core/platform/default/build_config:cudnn_plugin\",\n        \"//tensorflow/stream_executor:tf_allocator_adapter\",\n        \"//tensorflow/stream_executor:stream_executor_headers\",\n        \"//tensorflow/core/platform:stream_executor\",\n    ]) + if_cuda_or_rocm([\n        \":gpu_utils\",\n        \"//tensorflow/stream_executor/gpu:redzone_allocator\",\n        \"//tensorflow/core/util/autotune_maps:conv_parameters\",\n        \"//tensorflow/core/util/autotune_maps:conv_autotune_maps\",\n    ]),\n)\n\ncc_library(\n    name = \"conv_grad_shape_utils\",\n    srcs = [\n        \"conv_grad_shape_utils.cc\",\n    ],\n    hdrs = [\n        \"conv_grad_shape_utils.h\",\n    ],\n    deps = [\n        \":ops_util\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core/lib/core:errors\",\n        \"//tensorflow/core/lib/core:stringpiece\",\n        \"//tensorflow/core/platform:logging\",\n        \"//tensorflow/core/platform:macros\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"depthwise_conv_op\",\n    srcs = [\"depthwise_conv_op.cc\"],\n    hdrs = [\"depthwise_conv_op.h\"],\n    gpu_copts = if_not_windows([\n        \"-Wno-pass-failed\",  # clang misses #pragma loop optimizations\n    ]),\n    gpu_srcs = [\n        \"depthwise_conv_op.h\",\n        \"depthwise_conv_op_gpu.h\",\n        \"depthwise_conv_op_gpu_double.cu.cc\",\n        \"depthwise_conv_op_gpu_float.cu.cc\",\n        \"depthwise_conv_op_gpu_half.cu.cc\",\n    ],\n    deps = [\n        \":conv_ops\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//tensorflow/core/util:determinism_for_kernels\",\n    ] + if_cuda([\n        \"@local_config_cuda//cuda:cub_headers\",\n        \"@local_config_cuda//cuda:cudnn_header\",\n    ]) + if_rocm([\n        \"@local_config_rocm//rocm:rocprim\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"depthwise_conv_grad_op\",\n    hdrs = [\n        \"depthwise_conv_op.h\",\n    ],\n    prefix = \"depthwise_conv_grad_op\",\n    deps = [\n        \":cast_op\",\n        \":conv_ops\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//tensorflow/core/util:determinism_for_kernels\",\n    ] + if_cuda([\n        \"@local_config_cuda//cuda:cudnn_header\",\n    ]),\n)\n\ncc_library(\n    name = \"nn\",\n    deps = [\n        \":batch_norm_op\",\n        \":bias_op\",\n        \":conv_ops\",\n        \":data_format_ops\",\n        \":depthwise_conv_grad_op\",\n        \":depthwise_conv_op\",\n        \":dilation_ops\",\n        \":fused_batch_norm_op\",\n        \":in_topk_op\",\n        \":l2loss_op\",\n        \":lrn_op\",\n        \":nth_element_op\",\n        \":relu_op\",\n        \":softmax_op\",\n        \":softplus_op\",\n        \":softsign_op\",\n        \":topk_op\",\n        \":xent_op\",\n    ],\n)\n\n# Kernels for the nodes intented to be added to the graph by the Grappler optimizers.\ncc_library(\n    name = \"grappler\",\n    deps = [\n        \":unary_ops_composition\",\n    ],\n)\n\nNN_DEPS = if_cuda_or_rocm([\":conv_2d\"]) + [\n    \":eigen_contraction_kernel\",\n    \":ops_util\",\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:lib_internal\",\n    \"//tensorflow/core:nn_grad\",\n    \"//tensorflow/core/framework:bounds_check\",\n    \"//third_party/eigen3\",\n]\n\ntf_kernel_library(\n    name = \"batch_norm_op\",\n    prefix = \"batch_norm_op\",\n    deps = NN_DEPS,\n)\n\ntf_kernel_library(\n    name = \"data_format_ops\",\n    prefix = \"data_format_ops\",\n    deps = NN_DEPS,\n)\n\ntf_kernel_library(\n    name = \"bias_op\",\n    prefix = \"bias_op\",\n    deps = NN_DEPS + [\n        \":redux_functor\",\n        \"//tensorflow/core/profiler/lib:scoped_annotation\",\n        \"//tensorflow/core/util:determinism_for_kernels\",\n    ] + if_cuda_or_rocm([\n        \":reduction_ops\",\n    ]) + if_cuda([\n        \"@local_config_cuda//cuda:cub_headers\",\n        \"//tensorflow/core/platform:stream_executor\",\n        \"//tensorflow/stream_executor/cuda:cuda_stream\",\n    ]) + if_rocm([\n        \"@local_config_rocm//rocm:rocprim\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"fused_batch_norm_op\",\n    prefix = \"fused_batch_norm_op\",\n    deps = NN_DEPS + [\n        \":fill_functor\",\n        \":redux_functor\",\n        \":transpose_functor\",\n        \"//tensorflow/core/util:determinism_for_kernels\",\n    ] + if_cuda([\n        \"//tensorflow/core/platform:stream_executor\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"in_topk_op\",\n    prefix = \"in_topk_op\",\n    deps = NN_DEPS + [\":reduction_ops\"],\n)\n\ntf_kernel_library(\n    name = \"lrn_op\",\n    prefix = \"lrn_op\",\n    deps = NN_DEPS + if_rocm([\":conv_ops_gpu_hdrs\"]),\n)\n\ntf_kernel_library(\n    name = \"relu_op\",\n    copts = if_mlir_generated_experimental_kernels_enabled(\n        [\"-DMLIR_GENERATED_EXPERIMENTAL_KERNELS_ENABLED\"],\n    ) + if_mlir_generated_gpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_GPU_KERNELS_ENABLED\"],\n    ),\n    # *.cu.cc sources are compiled with gpu_copts instead of copts.\n    gpu_copts = if_mlir_generated_experimental_kernels_enabled(\n        [\"-DMLIR_GENERATED_EXPERIMENTAL_KERNELS_ENABLED\"],\n    ) + if_mlir_generated_gpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_GPU_KERNELS_ENABLED\"],\n    ),\n    prefix = \"relu_op\",\n    deps = NN_DEPS + [\n        \"//tensorflow/core/kernels/mlir_generated:relu_op\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"softmax_op\",\n    prefix = \"softmax_op\",\n    deps = NN_DEPS + if_cuda_or_rocm([\n        \":reduction_ops\",\n    ]) + [\":gpu_prim_hdrs\"],\n)\n\ntf_kernel_library(\n    name = \"softplus_op\",\n    copts = if_mlir_generated_gpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_GPU_KERNELS_ENABLED\"],\n    ),\n    # *.cu.cc sources are compiled with gpu_copts instead of copts.\n    gpu_copts = if_mlir_generated_gpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_GPU_KERNELS_ENABLED\"],\n    ),\n    prefix = \"softplus_op\",\n    deps = NN_DEPS + [\n        \"//tensorflow/core/kernels/mlir_generated:softplus_op\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"softsign_op\",\n    copts = if_mlir_generated_gpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_GPU_KERNELS_ENABLED\"],\n    ),\n    # *.cu.cc sources are compiled with gpu_copts instead of copts.\n    gpu_copts = if_mlir_generated_gpu_kernels_enabled(\n        [\"-DMLIR_GENERATED_GPU_KERNELS_ENABLED\"],\n    ),\n    prefix = \"softsign_op\",\n    deps = NN_DEPS + [\n        \"//tensorflow/core/kernels/mlir_generated:softsign_op\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"topk_op\",\n    srcs = [\"topk_op.cc\"],\n    hdrs = [\"topk_op.h\"],\n    gpu_srcs = [\n        \"topk_op.h\",\n        \"topk_op_gpu.h\",\n        \"topk_op_gpu_double.cu.cc\",\n        \"topk_op_gpu_float.cu.cc\",\n        \"topk_op_gpu_half.cu.cc\",\n        \"topk_op_gpu_uint64.cu.cc\",\n        \"topk_op_gpu_int64.cu.cc\",\n        \"topk_op_gpu_uint32.cu.cc\",\n        \"topk_op_gpu_int32.cu.cc\",\n        \"topk_op_gpu_int16.cu.cc\",\n        \"topk_op_gpu_uint16.cu.cc\",\n        \"topk_op_gpu_int8.cu.cc\",\n        \"topk_op_gpu_uint8.cu.cc\",\n    ],\n    deps = NN_DEPS + [\":gpu_prim_hdrs\"],\n)\n\ntf_kernel_library(\n    name = \"nth_element_op\",\n    prefix = \"nth_element_op\",\n    deps = NN_DEPS,\n)\n\ntf_kernel_library(\n    name = \"xent_op\",\n    gpu_copts = tf_disable_ptxas_warning_flags(),\n    prefix = \"xent_op\",\n    deps = NN_DEPS + [\"//tensorflow/core/util:determinism_for_kernels\"],\n)\n\ntf_kernel_library(\n    name = \"bincount_op\",\n    prefix = \"bincount_op\",\n    deps = [\n        \":fill_functor\",\n        \":gpu_prim_hdrs\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"histogram_op\",\n    prefix = \"histogram_op\",\n    deps = [\n        \":gpu_prim_hdrs\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"l2loss_op\",\n    prefix = \"l2loss_op\",\n    deps = [\n        \":gpu_prim_hdrs\",\n        \":reduction_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:nn_grad\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"lrn_op_test\",\n    srcs = [\"lrn_op_test.cc\"],\n    deps = [\n        \":nn\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":xent_op\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"xent_op_test\",\n    srcs = [\"xent_op_test.cc\"],\n    deps = [\n        \":nn\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":xent_op\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"nn_ops_test\",\n    srcs = [\"nn_ops_test.cc\"],\n    deps = [\n        \":host_constant_op\",\n        \":nn\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":pooling_ops\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:cc_ops_internal\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"pooling_ops\",\n    srcs = [\n        \"avgpooling_op.cc\",\n        \"cudnn_pooling_gpu.cc\",\n        \"fractional_avg_pool_op.cc\",\n        \"fractional_max_pool_op.cc\",\n        \"fractional_pool_common.cc\",\n        \"maxpooling_op.cc\",\n        \"pooling_ops_3d.cc\",\n        \"pooling_ops_common.cc\",\n    ],\n    hdrs = [\n        \"avgpooling_op.h\",\n        \"cudnn_pooling_gpu.h\",\n        \"fractional_pool_common.h\",\n        \"maxpooling_op.h\",\n        \"pooling_ops_3d.h\",\n        \"pooling_ops_common.h\",\n    ],\n    gpu_srcs = [\n        \"avgpooling_op.h\",\n        \"avgpooling_op_gpu.cu.cc\",\n        \"maxpooling_op.h\",\n        \"maxpooling_op_gpu.cu.cc\",\n        \"maxpooling_op_gpu.h\",\n        \"pooling_ops_common.h\",\n        \"pooling_ops_common_gpu.h\",\n        \"pooling_ops_3d_gpu.h\",\n        \"pooling_ops_3d_gpu.cu.cc\",\n    ],\n    deps = [\n        \":conv_2d\",\n        \":conv_3d\",\n        \":conv_ops\",\n        \":eigen_helpers\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//tensorflow/core/platform:stream_executor\",\n        \"//tensorflow/core/util:determinism_for_kernels\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"fake_quant_ops\",\n    srcs = [\"fake_quant_ops.cc\"],\n    hdrs = [\"fake_quant_ops_functor.h\"],\n    gpu_copts = tf_disable_ptxas_warning_flags(),\n    gpu_srcs = [\n        \"fake_quant_ops_gpu.cu.cc\",\n        \"fake_quant_ops_functor.h\",\n    ],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/util:determinism_for_kernels\",\n        \"//third_party/eigen3\",\n    ],\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"pooling_ops_hdrs\",\n    hdrs = [\n        \"avgpooling_op.h\",\n        \"maxpooling_op.h\",\n        \"pooling_ops_common.h\",\n    ],\n    deps = [\n        \":eigen_helpers\",\n        \":ops_util_hdrs\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"dilation_ops\",\n    prefix = \"dilation_ops\",\n    deps = [\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/util:determinism_for_kernels\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"batch_space_ops\",\n    srcs = [\n        \"batchtospace_op.cc\",\n        \"spacetobatch_functor.cc\",\n        \"spacetobatch_functor.h\",\n        \"spacetobatch_op.cc\",\n    ],\n    gpu_srcs = [\n        \"spacetobatch_functor.h\",\n        \"spacetobatch_functor_gpu.cu.cc\",\n    ],\n    visibility = [\":friends\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"spacetobatch_benchmark_test\",\n    srcs = [\"spacetobatch_benchmark_test.cc\"],\n    deps = [\n        \":batch_space_ops\",\n        \":host_constant_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"depth_space_ops\",\n    srcs = [\n        \"depthtospace_op.cc\",\n        \"spacetodepth_op.cc\",\n    ],\n    hdrs = [\n        \"depthtospace_op.h\",\n        \"spacetodepth_op.h\",\n    ],\n    gpu_srcs = [\n        \"depthtospace_op.h\",\n        \"depthtospace_op_gpu.cu.cc\",\n        \"spacetodepth_op.h\",\n        \"spacetodepth_op_gpu.cu.cc\",\n    ],\n    visibility = [\":friends\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"parsing\",\n    deps = [\n        \":decode_compressed_op\",\n        \":decode_csv_op\",\n        \":decode_padded_raw_op\",\n        \":decode_raw_op\",\n        \":example_parsing_ops\",\n        \":parse_tensor_op\",\n        \":string_to_number_op\",\n    ],\n)\n\nPARSING_DEPS = [\n    \"@com_google_absl//absl/base\",\n    \"//tensorflow/core:core_cpu_internal\",\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:protos_all_cc\",\n]\n\ntf_kernel_library(\n    name = \"decode_csv_op\",\n    prefix = \"decode_csv_op\",\n    deps = PARSING_DEPS,\n)\n\ntf_kernel_library(\n    name = \"decode_raw_op\",\n    prefix = \"decode_raw_op\",\n    deps = PARSING_DEPS,\n)\n\ntf_kernel_library(\n    name = \"decode_padded_raw_op\",\n    prefix = \"decode_padded_raw_op\",\n    deps = PARSING_DEPS,\n)\n\ntf_kernel_library(\n    name = \"decode_compressed_op\",\n    prefix = \"decode_compressed_op\",\n    deps = [\n        \"//tensorflow/core:lib_internal\",\n    ] + PARSING_DEPS,\n)\n\ntf_kernel_library(\n    name = \"example_parsing_ops\",\n    prefix = \"example_parsing_ops\",\n    deps = PARSING_DEPS,\n)\n\ntf_kernel_library(\n    name = \"parse_tensor_op\",\n    prefix = \"parse_tensor_op\",\n    deps = PARSING_DEPS,\n)\n\ntf_cc_test(\n    name = \"parse_tensor_test\",\n    srcs = [\"parse_tensor_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":parse_tensor_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"string_to_number_op\",\n    prefix = \"string_to_number_op\",\n    deps = PARSING_DEPS,\n)\n\ncc_library(\n    name = \"random_ops\",\n    deps = [\n        \":random_op\",\n        \":random_shuffle_op\",\n    ],\n)\n\nRANDOM_OPS_DEPS = [\n    \"//tensorflow/core:core_cpu\",\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:lib_internal\",\n]\n\ntf_kernel_library(\n    name = \"random_op\",\n    prefix = \"random_op\",\n    deps = RANDOM_OPS_DEPS,\n)\n\ntf_kernel_library(\n    name = \"random_shuffle_op\",\n    prefix = \"random_shuffle_op\",\n    deps = RANDOM_OPS_DEPS,\n)\n\ntf_cuda_cc_test(\n    name = \"random_op_test\",\n    size = \"small\",\n    srcs = [\"random_op_test.cc\"],\n    deps = [\n        \":host_constant_op\",\n        \":random_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ncc_library(\n    name = \"stateful_random_ops_header\",\n    hdrs = [\"stateful_random_ops.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ncc_library(\n    name = \"stateless_random_ops_v2_header\",\n    hdrs = [\"stateless_random_ops_v2.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"stateful_random_ops\",\n    prefix = \"stateful_random_ops\",\n    deps = [\n        \":dense_update_functor\",\n        \":fill_functor\",\n        \":gather_functor\",\n        \":mutex_ops\",\n        \":random_op\",\n        \":resource_variable_ops\",\n        \":scatter_functor\",\n        \":state\",\n        \":stateful_random_ops_header\",\n        \":training_op_helpers\",\n        \":variable_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:variant\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"stateless_random_gamma_op\",\n    prefix = \"stateless_random_gamma_op\",\n    deps = [\n        \":stateless_random_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"stateless_random_ops\",\n    prefix = \"stateless_random_ops\",\n    deps = [\n        \":random_op\",\n        \":random_poisson_op\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/framework:bounds_check\",\n    ],\n)\n\ncc_library(\n    name = \"random_index_shuffle\",\n    srcs = [\"random_index_shuffle.cc\"],\n    hdrs = [\"random_index_shuffle.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"random_index_shuffle_test\",\n    srcs = [\"random_index_shuffle_test.cc\"],\n    deps = [\n        \":random_index_shuffle\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"random_index_shuffle_ops\",\n    prefix = \"random_index_shuffle_ops\",\n    deps = [\n        \":random_index_shuffle\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//tensorflow/core/profiler/lib:traceme\",\n    ],\n)\n\ncc_library(\n    name = \"required\",\n    deps = [\n        \":no_op\",\n        \":sendrecv_ops\",\n    ],\n)\n\nREQUIRED_DEPS = [\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:protos_all_cc\",\n]\n\ntf_kernel_library(\n    name = \"no_op\",\n    prefix = \"no_op\",\n    deps = REQUIRED_DEPS,\n)\n\ntf_kernel_library(\n    name = \"sendrecv_ops\",\n    prefix = \"sendrecv_ops\",\n    deps = REQUIRED_DEPS + [\n        \"//tensorflow/core/profiler/lib:traceme\",\n    ],\n)\n\ntf_cc_test(\n    name = \"sendrecv_ops_test\",\n    srcs = [\"sendrecv_ops_test.cc\"],\n    linkstatic = tf_kernel_tests_linkstatic(),  # Required for benchmarking\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":sendrecv_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ncc_library(\n    name = \"sparse\",\n    deps = [\n        \":deserialize_sparse_string_op\",\n        \":deserialize_sparse_variant_op\",\n        \":serialize_sparse_op\",\n        \":sparse_add_grad_op\",\n        \":sparse_add_op\",\n        \":sparse_concat_op\",\n        \":sparse_cross_op\",\n        \":sparse_dense_binary_op_shared\",\n        \":sparse_fill_empty_rows_op\",\n        \":sparse_reduce_op\",\n        \":sparse_reorder_op\",\n        \":sparse_reshape_op\",\n        \":sparse_slice_grad_op\",\n        \":sparse_slice_op\",\n        \":sparse_softmax\",\n        \":sparse_sparse_binary_op_shared\",\n        \":sparse_split_op\",\n        \":sparse_tensor_dense_add_op\",\n        \":sparse_tensor_dense_matmul_op\",\n        \":sparse_tensors_map_ops\",\n        \":sparse_to_dense_op\",\n        \":sparse_xent_op\",\n    ],\n)\n\nSPARSE_DEPS = [\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n]\n\ntf_kernel_library(\n    name = \"sparse_add_grad_op\",\n    prefix = \"sparse_add_grad_op\",\n    deps = SPARSE_DEPS,\n)\n\ntf_kernel_library(\n    name = \"sparse_add_op\",\n    prefix = \"sparse_add_op\",\n    deps = SPARSE_DEPS,\n)\n\ntf_kernel_library(\n    name = \"sparse_concat_op\",\n    prefix = \"sparse_concat_op\",\n    deps = SPARSE_DEPS + if_cuda_or_rocm([\n        \":gpu_device_array\",\n        \":gpu_prim_helpers\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"sparse_fill_empty_rows_op\",\n    prefix = \"sparse_fill_empty_rows_op\",\n    deps = SPARSE_DEPS + [\":gpu_prim_hdrs\"] + if_cuda_or_rocm([\n        \":gpu_prim_helpers\",\n    ]) + if_cuda([\n        \"//tensorflow/core/util:cuda_solvers\",\n    ]) + if_rocm([\n        \"//tensorflow/core/util:rocm_solvers\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"sparse_cross_op\",\n    prefix = \"sparse_cross_op\",\n    deps = SPARSE_DEPS + [\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"sparse_reduce_op\",\n    prefix = \"sparse_reduce_op\",\n    deps = SPARSE_DEPS,\n)\n\ntf_kernel_library(\n    name = \"sparse_dense_binary_op_shared\",\n    prefix = \"sparse_dense_binary_op_shared\",\n    deps = SPARSE_DEPS + [\n        \":cwise_op\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"sparse_sparse_binary_op_shared\",\n    prefix = \"sparse_sparse_binary_op_shared\",\n    deps = SPARSE_DEPS + [\n        \":cwise_op\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"sparse_reorder_op\",\n    prefix = \"sparse_reorder_op\",\n    deps = SPARSE_DEPS + if_cuda_or_rocm([\n        \":gpu_prim_hdrs\",\n        \":gpu_prim_helpers\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"sparse_reshape_op\",\n    prefix = \"sparse_reshape_op\",\n    deps = SPARSE_DEPS + [\n        \":reshape_util\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"sparse_slice_grad_op\",\n    prefix = \"sparse_slice_grad_op\",\n    deps = SPARSE_DEPS + if_cuda_or_rocm([\n        \":gpu_prim_hdrs\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"sparse_slice_op\",\n    prefix = \"sparse_slice_op\",\n    deps = SPARSE_DEPS + if_cuda_or_rocm([\n        \":gpu_device_array\",\n        \":gpu_prim_helpers\",\n    ]) + if_cuda([\n        \"//tensorflow/core/util:cuda_solvers\",\n    ]) + if_rocm([\n        \"//tensorflow/core/util:rocm_solvers\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"sparse_softmax\",\n    prefix = \"sparse_softmax\",\n    deps = SPARSE_DEPS + [\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"sparse_split_op\",\n    prefix = \"sparse_split_op\",\n    deps = SPARSE_DEPS + if_cuda_or_rocm([\n        \":gpu_device_array\",\n        \":gpu_prim_helpers\",\n    ]) + if_cuda([\n        \"//tensorflow/core/util:cuda_solvers\",\n    ]) + if_rocm([\n        \"//tensorflow/core/util:rocm_solvers\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"sparse_tensor_dense_add_op\",\n    prefix = \"sparse_tensor_dense_add_op\",\n    deps = SPARSE_DEPS + [\n        \":scatter_functor\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"sparse_tensor_dense_matmul_op\",\n    prefix = \"sparse_tensor_dense_matmul_op\",\n    deps = SPARSE_DEPS + [\n        \":fill_functor\",\n        \"//third_party/eigen3\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//tensorflow/core/util:determinism_for_kernels\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"sparse_to_dense_op\",\n    prefix = \"sparse_to_dense_op\",\n    deps = SPARSE_DEPS + [\n        \"//third_party/eigen3\",\n    ] + if_cuda_or_rocm([\n        \":gpu_utils\",\n        \"//tensorflow/core/platform:stream_executor\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"sparse_xent_op\",\n    gpu_copts = tf_disable_ptxas_warning_flags(),\n    prefix = \"sparse_xent_op\",\n    deps = SPARSE_DEPS + [\n        \"//third_party/eigen3\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/util:determinism_for_kernels\",\n    ] + if_cuda_or_rocm([\n        \":reduction_ops\",\n    ]) + if_cuda([\n        \"@local_config_cuda//cuda:cub_headers\",\n    ]) + if_rocm([\n        \"@local_config_rocm//rocm:rocprim\",\n    ]),\n)\n\ntf_kernel_library(\n    name = \"serialize_sparse_op\",\n    prefix = \"serialize_sparse_op\",\n    deps = SPARSE_DEPS + [\n        \":reshape_util\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"deserialize_sparse_string_op\",\n    prefix = \"deserialize_sparse_string_op\",\n    deps = SPARSE_DEPS + [\n        \":reshape_util\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"deserialize_sparse_variant_op\",\n    prefix = \"deserialize_sparse_variant_op\",\n    deps = SPARSE_DEPS + [\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"sparse_tensors_map_ops\",\n    prefix = \"sparse_tensors_map_ops\",\n    deps = SPARSE_DEPS,\n)\n\ntf_cuda_cc_tests(\n    name = \"sparse2_tests\",\n    size = \"small\",\n    srcs = [\n        \"sparse_tensor_dense_matmul_op_test.cc\",\n        \"sparse_to_dense_op_test.cc\",\n        \"sparse_xent_op_test.cc\",\n    ],\n    deps = [\n        \":host_constant_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":sparse\",\n        \":xent_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ncc_library(\n    name = \"loss_updaters\",\n    hdrs = [\n        \"hinge-loss.h\",\n        \"logistic-loss.h\",\n        \"loss.h\",\n        \"poisson-loss.h\",\n        \"smooth-hinge-loss.h\",\n        \"squared-loss.h\",\n    ],\n    deps = [\n        \"//tensorflow/core:framework_headers_lib\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"loss_test\",\n    size = \"small\",\n    srcs = [\"loss_test.cc\"],\n    deps = [\n        \":loss_updaters\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ntf_cc_test(\n    name = \"sdca_ops_test\",\n    size = \"small\",\n    srcs = [\"sdca_ops_test.cc\"],\n    linkstatic = tf_kernel_tests_linkstatic(),  # Required for benchmarking\n    deps = [\n        \":ops_util\",\n        \"//tensorflow/core:all_kernels\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"sdca_ops\",\n    prefix = \"sdca_ops\",\n    deps = [\n        \":loss_updaters\",\n        \":sdca_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//third_party/eigen3\",\n        \"@com_google_absl//absl/strings:str_format\",\n    ],\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"sdca_internal\",\n    srcs = [\"sdca_internal.cc\"],\n    hdrs = [\"sdca_internal.h\"],\n    deps = [\n        \":eigen_contraction_kernel\",\n        \":loss_updaters\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"state\",\n    deps = [\n        \":count_up_to_op\",\n        \":dense_update_ops\",\n        \":scatter_nd_op\",\n        \":scatter_op\",\n        \":variable_ops\",\n    ],\n)\n\nSTATE_DEPS = [\n    \":assign_op\",\n    \"//tensorflow/core/framework:bounds_check\",\n    \":fill_functor\",\n    \":scatter_functor\",\n    \"//third_party/eigen3\",\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:lib_internal\",\n]\n\ntf_kernel_library(\n    name = \"count_up_to_op\",\n    prefix = \"count_up_to_op\",\n    deps = STATE_DEPS + [\":variable_ops\"],\n)\n\ntf_kernel_library(\n    name = \"dense_update_ops\",\n    prefix = \"dense_update_ops\",\n    deps = STATE_DEPS + [\":dense_update_functor\"],\n)\n\ntf_kernel_library(\n    name = \"scatter_op\",\n    prefix = \"scatter_op\",\n    deps = STATE_DEPS + [\"//tensorflow/core/util:determinism_for_kernels\"],\n)\n\ntf_kernel_library(\n    name = \"count_ops\",\n    prefix = \"count_ops\",\n    deps = STATE_DEPS + [\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"//tensorflow/core/framework:op_requires\",\n    ],\n)\n\ntf_cc_test(\n    name = \"count_ops_test\",\n    size = \"small\",\n    srcs = [\"count_ops_test.cc\"],\n    deps = [\n        \":count_ops\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ncc_library(\n    name = \"scatter_nd_util\",\n    srcs = [\"scatter_nd_util.cc\"],\n    hdrs = [\"scatter_nd_util.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"scatter_nd_op\",\n    srcs = [\n        \"scatter_nd_op.cc\",\n        \"scatter_nd_op_cpu_impl_0.cc\",\n        \"scatter_nd_op_cpu_impl_1.cc\",\n        \"scatter_nd_op_cpu_impl_2.cc\",\n        \"scatter_nd_op_cpu_impl_3.cc\",\n        \"scatter_nd_op_cpu_impl_4.cc\",\n        \"scatter_nd_op_cpu_impl_5.cc\",\n        \"scatter_nd_op_cpu_impl_6.cc\",\n        \"scatter_nd_op_cpu_impl_7.cc\",\n    ],\n    hdrs = [\n        \"scatter_nd_op.h\",\n        \"scatter_nd_op_cpu_impl.h\",\n    ],\n    gpu_copts = if_not_windows([\n        \"-Wno-pass-failed\",  # clang misses #pragma loop optimizations\n    ]),\n    gpu_srcs = [\n        \"scatter_nd_op.h\",\n        \"scatter_nd_op_gpu.cu.cc\",\n    ],\n    deps = STATE_DEPS + [\n        \":scatter_nd_util\",\n        \":dense_update_functor\",\n        \":training_op_helpers\",\n        \":variable_ops\",\n        \":inplace_ops\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"variable_ops\",\n    prefix = \"variable_ops\",\n    deps = STATE_DEPS,\n)\n\ntf_kernel_library(\n    name = \"mutex_ops\",\n    prefix = \"mutex_ops\",\n    deps = STATE_DEPS + [\":ops_util\"],\n)\n\ntf_cc_test(\n    name = \"scatter_op_test\",\n    size = \"small\",\n    srcs = [\"scatter_op_test.cc\"],\n    deps = [\n        \":fill_functor\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":scatter_op\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"scatter_nd_op_test\",\n    size = \"small\",\n    srcs = [\"scatter_nd_op_test.cc\"],\n    tags = [\"noasan\"],  # http://b/32635055\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":scatter_nd_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ncc_library(\n    name = \"string\",\n    deps = [\n        \":as_string_op\",\n        \":base64_ops\",\n        \":reduce_join_op\",\n        \":regex_full_match_op\",\n        \":regex_replace_op\",\n        \":string_format_op\",\n        \":string_join_op\",\n        \":string_length_op\",\n        \":string_lower_op\",\n        \":string_ngrams_op\",\n        \":string_split_op\",\n        \":string_strip_op\",\n        \":string_to_hash_bucket_op\",\n        \":string_upper_op\",\n        \":substr_op\",\n        \":tensor_to_hash_bucket_op\",\n        \":unicode_ops\",\n        \":unicode_script_op\",\n        \":unsorted_segment_join_op\",\n    ],\n)\n\ncc_library(\n    name = \"string_util\",\n    srcs = [\"string_util.cc\"],\n    hdrs = [\"string_util.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@icu//:common\",\n    ],\n)\n\nSTRING_DEPS = [\n    \"//tensorflow/core/framework:bounds_check\",\n    \":string_util\",\n    \"//third_party/eigen3\",\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:lib_internal\",\n]\n\ntf_kernel_library(\n    name = \"string_to_hash_bucket_op\",\n    srcs = [\n        \"string_to_hash_bucket_fast_op.cc\",\n        \"string_to_hash_bucket_op.cc\",\n    ],\n    hdrs = [\n        \"string_to_hash_bucket_fast_op.h\",\n        \"string_to_hash_bucket_op.h\",\n    ],\n    deps = STRING_DEPS,\n)\n\ntf_kernel_library(\n    name = \"tensor_to_hash_bucket_op\",\n    prefix = \"tensor_to_hash_bucket_op\",\n    deps = STRING_DEPS + if_oss(\n        if_cuda([\"@farmhash_gpu_archive//:farmhash_gpu\"]),\n        tf_fingerprint_deps(),\n    ),\n)\n\ntf_kernel_library(\n    name = \"reduce_join_op\",\n    prefix = \"reduce_join_op\",\n    deps = STRING_DEPS,\n)\n\ntf_kernel_library(\n    name = \"unsorted_segment_join_op\",\n    prefix = \"unsorted_segment_join_op\",\n    deps = STRING_DEPS,\n)\n\ntf_kernel_library(\n    name = \"string_format_op\",\n    prefix = \"string_format_op\",\n    deps = STRING_DEPS + [\"@com_google_absl//absl/strings\"],\n)\n\ntf_cc_test(\n    name = \"string_format_op_test\",\n    size = \"small\",\n    srcs = [\"string_format_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":string_format_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"string_join_op\",\n    prefix = \"string_join_op\",\n    deps = STRING_DEPS,\n)\n\ntf_kernel_library(\n    name = \"string_length_op\",\n    prefix = \"string_length_op\",\n    deps = STRING_DEPS,\n)\n\ntf_kernel_library(\n    name = \"regex_full_match_op\",\n    prefix = \"regex_full_match_op\",\n    deps = STRING_DEPS + [\"@com_googlesource_code_re2//:re2\"],\n)\n\ntf_kernel_library(\n    name = \"regex_replace_op\",\n    prefix = \"regex_replace_op\",\n    deps = STRING_DEPS + [\"@com_googlesource_code_re2//:re2\"],\n)\n\ntf_cc_test(\n    name = \"regex_replace_op_test\",\n    size = \"small\",\n    srcs = [\"regex_replace_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":regex_replace_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"string_split_op\",\n    prefix = \"string_split_op\",\n    deps = STRING_DEPS,\n)\n\ntf_cc_test(\n    name = \"string_split_op_test\",\n    size = \"small\",\n    srcs = [\"string_split_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":string_split_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"string_ngrams_op\",\n    srcs = [\"string_ngrams_op.cc\"],\n    deps = STRING_DEPS + [\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_cc_test(\n    name = \"string_ngrams_op_test\",\n    srcs = [\"string_ngrams_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":string_ngrams_op\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"string_strip_op\",\n    prefix = \"string_strip_op\",\n    deps = STRING_DEPS,\n)\n\ntf_kernel_library(\n    name = \"string_lower_op\",\n    prefix = \"string_lower_op\",\n    deps = STRING_DEPS + [\n        \"@com_google_absl//absl/strings\",\n        \"@icu//:common\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"string_upper_op\",\n    prefix = \"string_upper_op\",\n    deps = STRING_DEPS + [\n        \"@com_google_absl//absl/strings\",\n        \"@icu//:common\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"substr_op\",\n    prefix = \"substr_op\",\n    deps = STRING_DEPS,\n)\n\ntf_cc_test(\n    name = \"substr_op_test\",\n    size = \"small\",\n    srcs = [\"substr_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":substr_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"as_string_op\",\n    prefix = \"as_string_op\",\n    deps = STRING_DEPS,\n)\n\ntf_cc_test(\n    name = \"as_string_op_test\",\n    size = \"small\",\n    srcs = [\"as_string_op_test.cc\"],\n    deps = [\n        \":as_string_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"unicode_ops\",\n    prefix = \"unicode_ops\",\n    deps = [\n        \":string_util\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//third_party/eigen3\",\n        \"//third_party/icu/data:conversion_data\",\n        \"@icu//:common\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"base64_ops\",\n    prefix = \"base64_ops\",\n    deps = STRING_DEPS,\n)\n\ntf_kernel_library(\n    name = \"training_ops\",\n    prefix = \"training_ops\",\n    deps = [\n        \":training_op_helpers\",\n        \":variable_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_cc_test(\n    name = \"training_ops_test\",\n    size = \"small\",\n    srcs = [\"training_ops_test.cc\"],\n    deps = [\n        \":dense_update_ops\",\n        \":ops_util\",\n        \":training_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"multinomial_op\",\n    prefix = \"multinomial_op\",\n    deps = [\n        \":random_op\",\n        \":random_ops\",\n        \":stateless_random_ops\",\n        \":gpu_prim_hdrs\",\n        \"//third_party/eigen3\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n    ] + if_cuda_or_rocm([\n        \":reduction_ops\",\n    ]),\n)\n\ntf_cuda_cc_test(\n    name = \"multinomial_op_test\",\n    size = \"small\",\n    srcs = [\"multinomial_op_test.cc\"],\n    deps = [\n        \":host_constant_op\",\n        \":multinomial_op\",\n        \":ops_util\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"parameterized_truncated_normal_op\",\n    gpu_copts = if_not_windows([\n        \"-Wno-pass-failed\",  # clang misses #pragma loop optimizations\n    ]),\n    prefix = \"parameterized_truncated_normal_op\",\n    deps = [\n        \":stateless_random_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"parameterized_truncated_normal_op_test\",\n    size = \"small\",\n    srcs = [\"parameterized_truncated_normal_op_test.cc\"],\n    deps = [\n        \":host_constant_op\",\n        \":ops_util\",\n        \":parameterized_truncated_normal_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"random_binomial_op\",\n    prefix = \"random_binomial_op\",\n    deps = [\n        \":cwise_op\",\n        \":random_op\",\n        \":resource_variable_ops\",\n        \":stateful_random_ops\",\n        \":stateless_random_ops\",\n        \":training_op_helpers\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:random_ops_op_lib\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"random_binomial_op_test\",\n    size = \"small\",\n    srcs = [\"random_binomial_op_test.cc\"],\n    deps = [\n        \":ops_util\",\n        \":random_binomial_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"random_poisson_op\",\n    prefix = \"random_poisson_op\",\n    deps = [\n        \":random_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n    ],\n)\n\ntf_cuda_cc_test(\n    name = \"random_poisson_op_test\",\n    size = \"small\",\n    srcs = [\"random_poisson_op_test.cc\"],\n    deps = [\n        \":ops_util\",\n        \":random_poisson_op\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"word2vec_kernels\",\n    prefix = \"word2vec_kernels\",\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:word2vec_ops\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"encode_wav_op\",\n    prefix = \"encode_wav_op\",\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/framework:bounds_check\",\n    ],\n)\n\ntf_cc_test(\n    name = \"encode_wav_op_test\",\n    size = \"small\",\n    srcs = [\"encode_wav_op_test.cc\"],\n    deps = [\n        \":decode_wav_op\",\n        \":encode_wav_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:tensorflow\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"decode_wav_op\",\n    prefix = \"decode_wav_op\",\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ntf_cc_test(\n    name = \"decode_wav_op_test\",\n    size = \"small\",\n    srcs = [\"decode_wav_op_test.cc\"],\n    deps = [\n        \":decode_wav_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:tensorflow\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\nalias(\n    name = \"spectrogram_test_data\",\n    actual = \"//tensorflow/core/kernels/spectrogram_test_data:spectrogram_test_data\",\n    visibility = [\"//visibility:public\"],\n)\n\ncc_library(\n    name = \"spectrogram\",\n    srcs = [\"spectrogram.cc\"],\n    hdrs = [\"spectrogram.h\"],\n    copts = tf_copts(),\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//third_party/fft2d:fft2d_headers\",\n        \"@fft2d\",\n    ],\n)\n\ncc_library(\n    name = \"spectrogram_test_utils\",\n    testonly = 1,\n    srcs = [\"spectrogram_test_utils.cc\"],\n    hdrs = [\"spectrogram_test_utils.h\"],\n    copts = tf_copts(),\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n    ],\n)\n\ntf_cc_binary(\n    name = \"spectrogram_convert_test_data\",\n    testonly = 1,\n    srcs = [\"spectrogram_convert_test_data.cc\"],\n    deps = [\n        \":spectrogram_test_utils\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n    ],\n)\n\ntf_cc_test(\n    name = \"spectrogram_test\",\n    size = \"medium\",\n    srcs = [\"spectrogram_test.cc\"],\n    data = [\":spectrogram_test_data\"],\n    deps = [\n        \":spectrogram\",\n        \":spectrogram_test_utils\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:lib_test_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/platform:resource_loader\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"spectrogram_op\",\n    prefix = \"spectrogram_op\",\n    deps = [\n        \":spectrogram\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n    ],\n    alwayslink = 1,\n)\n\ntf_cuda_cc_test(\n    name = \"spectrogram_op_test\",\n    size = \"small\",\n    srcs = [\"spectrogram_op_test.cc\"],\n    deps = [\n        \":ops_util\",\n        \":spectrogram_op\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:tensorflow\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ncc_library(\n    name = \"mfcc_dct\",\n    srcs = [\"mfcc_dct.cc\"],\n    hdrs = [\"mfcc_dct.h\"],\n    copts = tf_copts(),\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"mfcc_dct_test\",\n    size = \"small\",\n    srcs = [\"mfcc_dct_test.cc\"],\n    deps = [\n        \":mfcc_dct\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:lib_test_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"mfcc_mel_filterbank\",\n    srcs = [\"mfcc_mel_filterbank.cc\"],\n    hdrs = [\"mfcc_mel_filterbank.h\"],\n    copts = tf_copts(),\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"mfcc_mel_filterbank_test\",\n    size = \"small\",\n    srcs = [\"mfcc_mel_filterbank_test.cc\"],\n    deps = [\n        \":mfcc_mel_filterbank\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:lib_test_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ncc_library(\n    name = \"mfcc\",\n    srcs = [\"mfcc.cc\"],\n    hdrs = [\"mfcc.h\"],\n    copts = tf_copts(),\n    deps = [\n        \":mfcc_dct\",\n        \":mfcc_mel_filterbank\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"mfcc_test\",\n    size = \"small\",\n    srcs = [\"mfcc_test.cc\"],\n    deps = [\n        \":mfcc\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:lib_test_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"mfcc_op\",\n    prefix = \"mfcc_op\",\n    deps = [\n        \":mfcc\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n    ],\n    alwayslink = 1,\n)\n\ntf_cuda_cc_test(\n    name = \"mfcc_op_test\",\n    size = \"small\",\n    srcs = [\"mfcc_op_test.cc\"],\n    deps = [\n        \":mfcc_op\",\n        \":ops_util\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:tensorflow\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ncc_library(\n    name = \"audio\",\n    deps = [\n        \":decode_wav_op\",\n        \":encode_wav_op\",\n        \":mfcc_op\",\n        \":spectrogram_op\",\n    ],\n)\n\ncc_library(\n    name = \"meta_support\",\n    srcs = [\"meta_support.cc\"],\n    hdrs = [\"meta_support.h\"],\n    deps = [\n        \":quantization_utils\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core/platform:logging\",\n        \"//tensorflow/core/platform:mutex\",\n        \"@gemmlowp\",\n    ],\n)\n\n# Android libraries -----------------------------------------------------------\nfilegroup(\n    name = \"mobile_srcs\",\n    srcs = [\n        \"avgpooling_op.h\",\n        \"batch_util.h\",\n        \"cwise_ops.h\",\n        \"cwise_ops_common.h\",\n        \"cwise_ops_gradients.h\",\n        \"eigen_activations.h\",\n        \"eigen_attention.h\",\n        \"eigen_backward_cuboid_convolutions.h\",\n        \"eigen_backward_spatial_convolutions.h\",\n        \"eigen_convolution_helpers.h\",\n        \"eigen_cuboid_convolution.h\",\n        \"eigen_pooling.h\",\n        \"eigen_spatial_convolutions.h\",\n        \"eigen_spatial_convolutions-inl.h\",\n        \"fifo_queue.h\",\n        \"initializable_lookup_table.cc\",\n        \"initializable_lookup_table.h\",\n        \"lookup_util.cc\",\n        \"lookup_util.h\",\n        \"maxpooling_op.h\",\n        \"ops_util.h\",\n        \"padding_fifo_queue.h\",\n        \"pooling_ops_common.cc\",\n        \"pooling_ops_common.h\",\n        \"queue_base.h\",\n        \"queue_op.h\",\n        \"typed_queue.h\",\n    ],\n)\n\nalias(\n    name = \"android_srcs\",\n    actual = \":mobile_srcs\",\n)\n\n# Core kernels we want on Android. Only a subset of kernels to keep\n# base library small.\nfilegroup(\n    name = \"portable_core_ops\",\n    srcs = [\n        \"aggregate_ops.cc\",\n        \"aggregate_ops.h\",\n        \"aggregate_ops_cpu.h\",\n        \"assign_op.h\",\n        \"bias_op.cc\",\n        \"bias_op.h\",\n        \"cast_op.cc\",\n        \"cast_op.h\",\n        \"cast_op_impl.h\",\n        \"cast_op_impl_bfloat.cc\",\n        \"cast_op_impl_bool.cc\",\n        \"cast_op_impl_complex128.cc\",\n        \"cast_op_impl_complex64.cc\",\n        \"cast_op_impl_double.cc\",\n        \"cast_op_impl_float.cc\",\n        \"cast_op_impl_half.cc\",\n        \"cast_op_impl_int16.cc\",\n        \"cast_op_impl_int32.cc\",\n        \"cast_op_impl_int64.cc\",\n        \"cast_op_impl_int8.cc\",\n        \"cast_op_impl_uint16.cc\",\n        \"cast_op_impl_uint32.cc\",\n        \"cast_op_impl_uint64.cc\",\n        \"cast_op_impl_uint8.cc\",\n        \"concat_lib.h\",\n        \"concat_lib_cpu.cc\",\n        \"concat_lib_cpu.h\",\n        \"concat_op.cc\",\n        \"constant_op.cc\",\n        \"constant_op.h\",\n        \"cwise_ops.h\",\n        \"cwise_ops_common.cc\",\n        \"cwise_ops_common.h\",\n        \"cwise_ops_gradients.h\",\n        \"dense_update_functor.cc\",\n        \"dense_update_functor.h\",\n        \"dense_update_ops.cc\",\n        \"example_parsing_ops.cc\",\n        \"fill_functor.cc\",\n        \"fill_functor.h\",\n        \"function_ops.cc\",\n        \"function_ops.h\",\n        \"gather_functor.h\",\n        \"gather_functor_batched.h\",\n        \"gather_nd_op.cc\",\n        \"gather_nd_op.h\",\n        \"gather_nd_op_cpu_impl_0.cc\",\n        \"gather_nd_op_cpu_impl_1.cc\",\n        \"gather_nd_op_cpu_impl_2.cc\",\n        \"gather_nd_op_cpu_impl_3.cc\",\n        \"gather_nd_op_cpu_impl_4.cc\",\n        \"gather_nd_op_cpu_impl_5.cc\",\n        \"gather_nd_op_cpu_impl_6.cc\",\n        \"gather_nd_op_cpu_impl_7.cc\",\n        \"gather_op.cc\",\n        \"identity_n_op.cc\",\n        \"identity_n_op.h\",\n        \"identity_op.cc\",\n        \"identity_op.h\",\n        \"immutable_constant_op.cc\",\n        \"immutable_constant_op.h\",\n        \"matmul_op_impl.h\",\n        \"matmul_op_real.cc\",\n        \"no_op.cc\",\n        \"no_op.h\",\n        \"one_hot_op.cc\",\n        \"one_hot_op.h\",\n        \"ops_util.h\",\n        \"pack_op.cc\",\n        \"pooling_ops_common.h\",\n        \"redux_functor.h\",\n        \"reshape_op.cc\",\n        \"reshape_op.h\",\n        \"reverse_sequence_op.cc\",\n        \"reverse_sequence_op.h\",\n        \"sendrecv_ops.cc\",\n        \"sendrecv_ops.h\",\n        \"sequence_ops.cc\",\n        \"sequence_ops.h\",\n        \"shape_ops.cc\",\n        \"shape_ops.h\",\n        \"slice_op.cc\",\n        \"slice_op.h\",\n        \"slice_op_cpu_impl_1.cc\",\n        \"slice_op_cpu_impl_2.cc\",\n        \"slice_op_cpu_impl_3.cc\",\n        \"slice_op_cpu_impl_4.cc\",\n        \"slice_op_cpu_impl_5.cc\",\n        \"slice_op_cpu_impl_6.cc\",\n        \"slice_op_cpu_impl_7.cc\",\n        \"slice_op_cpu_impl_8.cc\",\n        \"softmax_op.cc\",\n        \"softmax_op_functor.h\",\n        \"sparse_concat_op.h\",\n        \"sparse_concat_op.cc\",\n        \"split_lib.h\",\n        \"split_lib_cpu.cc\",\n        \"split_op.cc\",\n        \"split_v_op.cc\",\n        \"strided_slice_op.cc\",\n        \"strided_slice_op.h\",\n        \"strided_slice_op_inst_0.cc\",\n        \"strided_slice_op_inst_1.cc\",\n        \"strided_slice_op_inst_2.cc\",\n        \"strided_slice_op_inst_3.cc\",\n        \"strided_slice_op_inst_4.cc\",\n        \"strided_slice_op_inst_5.cc\",\n        \"strided_slice_op_inst_6.cc\",\n        \"strided_slice_op_inst_7.cc\",\n        \"strided_slice_op_inst_8.cc\",\n        \"unpack_op.cc\",\n        \"variable_ops.cc\",\n        \"variable_ops.h\",\n    ] + [\n        \"//tensorflow/c/kernels:portable_all_op_kernels\",\n        \"//tensorflow/core/kernels/image:non_max_suppression_op.cc\",\n        \"//tensorflow/core/kernels/image:non_max_suppression_op.h\",\n    ],\n)\n\n# Other kernels we may want on Android.\n#\n# The kernels can be consumed as a whole or in two groups for\n# supporting separate compilation. Note that the split into groups\n# is entirely for improving compilation time, and not for\n# organizational reasons; you should not depend on any\n# of those groups independently.\nfilegroup(\n    name = \"portable_extended_ops\",\n    srcs = [\n        \":portable_extended_ops_group1\",\n        \":portable_extended_ops_group2\",\n        \":portable_quantized_ops\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n\nfilegroup(\n    name = \"portable_extended_ops_headers\",\n    srcs = [\n        \"argmax_op.h\",\n        \"avgpooling_op.h\",\n        \"batch_norm_op.h\",\n        \"bincount_op.h\",\n        \"broadcast_to_op.h\",\n        \"bucketize_op.h\",\n        \"checkpoint_callback_manager.h\",\n        \"concat_lib.h\",\n        \"control_flow_ops.h\",\n        \"conv_2d.h\",\n        \"conv_3d.h\",\n        \"conv_ops.h\",\n        \"conv_ops_gpu.h\",\n        \"data_format_ops.h\",\n        \"depthtospace_op.h\",\n        \"depthwise_conv_op.h\",\n        \"diag_op.h\",\n        \"dilation_ops.h\",\n        \"fake_quant_ops_functor.h\",\n        \"fused_batch_norm_op.h\",\n        \"inplace_ops.cc\",\n        \"inplace_ops_functor.h\",\n        \"lookup_table_init_op.h\",\n        \"lookup_table_op.h\",\n        \"list_kernels.h\",\n        \"l2loss_op.h\",\n        \"map_kernels.h\",\n        \"maxpooling_op.h\",\n        \"mfcc.h\",\n        \"mfcc_dct.h\",\n        \"mfcc_mel_filterbank.h\",\n        \"multinomial_op.h\",\n        \"pad_op.h\",\n        \"partitioned_function_ops.h\",\n        \"pooling_ops_3d.h\",\n        \"ragged_tensor_variant.h\",\n        \"random_op.h\",\n        \"random_poisson_op.h\",\n        \"random_index_shuffle.h\",\n        \"reduction_ops.h\",\n        \"reduction_ops_common.h\",\n        \"relu_op.h\",\n        \"relu_op_functor.h\",\n        \"reshape_util.h\",\n        \"resource_variable_ops.h\",\n        \"resource_variable_util.h\",\n        \"reverse_op.h\",\n        \"roll_op.h\",\n        \"save_restore_tensor.h\",\n        \"scan_ops.h\",\n        \"scatter_functor.h\",\n        \"scatter_nd_op.h\",\n        \"scatter_nd_util.h\",\n        \"searchsorted_op.h\",\n        \"segment_reduction_ops.h\",\n        \"segment_reduction_ops_impl.h\",\n        \"softplus_op.h\",\n        \"softsign_op.h\",\n        \"spacetobatch_functor.h\",\n        \"spacetodepth_op.h\",\n        \"spectrogram.h\",\n        \"stateless_random_gamma_op.h\",\n        \"stateless_random_ops.h\",\n        \"stateless_random_ops_v2.h\",\n        \"sparse_xent_op.h\",\n        \"sparse_fill_empty_rows_op.h\",\n        \"sparse_reorder_op.h\",\n        \"sparse_slice_op.h\",\n        \"sparse_tensor_dense_matmul_op.h\",\n        \"string_util.h\",\n        \"string_to_hash_bucket_op.h\",\n        \"string_to_hash_bucket_fast_op.h\",\n        \"tensor_array.h\",\n        \"tensor_list.h\",\n        \"tensor_map.h\",\n        \"tile_functor.h\",\n        \"tile_ops_impl.h\",\n        \"topk_op.h\",\n        \"training_op_helpers.h\",\n        \"training_ops.h\",\n        \"transpose_functor.h\",\n        \"transpose_op.h\",\n        \"where_op.h\",\n        \"xent_op.h\",\n    ] + [\n        \"//tensorflow/core/kernels/data:portable_all_op_kernels_headers\",\n        \"//tensorflow/core/kernels/image:adjust_contrast_op.h\",\n        \"//tensorflow/core/kernels/image:adjust_hue_op.h\",\n        \"//tensorflow/core/kernels/image:adjust_saturation_op.h\",\n        \"//tensorflow/core/kernels/image:colorspace_op.h\",\n        \"//tensorflow/core/kernels/image:extract_image_patches_op.h\",\n        \"//tensorflow/core/kernels/image:image_ops.h\",\n        \"//tensorflow/core/kernels/image:mirror_pad_op.h\",\n        \"//tensorflow/core/kernels/image:mirror_pad_op_cpu_impl.h\",\n        \"//tensorflow/core/kernels/image:resize_bilinear_op.h\",\n        \"//tensorflow/core/kernels/image:resize_nearest_neighbor_op.h\",\n        \"//tensorflow/core/kernels/linalg:linalg_ops_common.h\",\n        \"//tensorflow/core/kernels/linalg:matrix_band_part_op.h\",\n        \"//tensorflow/core/kernels/linalg:matrix_diag_op.h\",\n        \"//tensorflow/core/kernels/linalg:matrix_set_diag_op.h\",\n        \"//tensorflow/core/kernels/linalg:matrix_triangular_solve_op_impl.h\",\n        \"//tensorflow/core/kernels/linalg:qr_op_impl.h\",\n        \"//tensorflow/core/util:image_resizer_state.h\",\n    ],\n)\n\nfilegroup(\n    name = \"portable_extended_ops_group1\",\n    srcs = [\n        \":portable_extended_ops_headers\",\n        \"argmax_op.cc\",\n        \"avgpooling_op.cc\",\n        \"batch_norm_op.cc\",\n        \"bcast_ops.cc\",\n        \"check_numerics_op.cc\",\n        \"control_flow_ops.cc\",\n        \"conv_2d.h\",\n        \"conv_grad_filter_ops.cc\",\n        \"conv_grad_input_ops.h\",\n        \"conv_grad_input_ops_double.cc\",\n        \"conv_grad_input_ops_float.cc\",\n        \"conv_grad_input_ops_half.cc\",\n        \"conv_grad_input_ops_int32.cc\",\n        \"conv_grad_input_ops.cc\",\n        \"conv_grad_ops.h\",\n        \"conv_grad_ops_3d.cc\",\n        \"conv_grad_shape_utils.cc\",\n        \"conv_grad_shape_utils.h\",\n        \"conv_ops.cc\",\n        \"conv_ops_3d.cc\",\n        \"conv_ops_fused_double.cc\",\n        \"conv_ops_fused_float.cc\",\n        \"conv_ops_fused_half.cc\",\n        \"conv_ops_fused_image_transform.cc\",\n        \"conv_ops_fused_impl.h\",\n        \"conv_ops_using_gemm.cc\",\n        \"cwise_op_abs.cc\",\n        \"cwise_op_add_1.cc\",\n        \"cwise_op_add_2.cc\",\n        \"cwise_op_arg.cc\",\n        \"cwise_op_atan.cc\",\n        \"cwise_op_atan2.cc\",\n        \"cwise_op_bitwise_and.cc\",\n        \"cwise_op_bitwise_or.cc\",\n        \"cwise_op_bitwise_xor.cc\",\n        \"cwise_op_ceil.cc\",\n        \"cwise_op_complex.cc\",\n        \"cwise_op_conj.cc\",\n        \"cwise_op_cos.cc\",\n        \"cwise_op_cosh.cc\",\n        \"cwise_op_div.cc\",\n        \"cwise_op_equal_to_1.cc\",\n        \"cwise_op_equal_to_2.cc\",\n        \"cwise_op_erf.cc\",\n        \"cwise_op_exp.cc\",\n        \"cwise_op_floor.cc\",\n        \"cwise_op_floor_div.cc\",\n        \"cwise_op_floor_mod.cc\",\n        \"cwise_op_greater.cc\",\n        \"cwise_op_greater_equal.cc\",\n        \"cwise_op_imag.cc\",\n        \"cwise_op_invert.cc\",\n        \"cwise_op_isfinite.cc\",\n        \"cwise_op_isnan.cc\",\n        \"cwise_op_leakyrelu_bf16.cc\",\n        \"cwise_op_left_shift.cc\",\n        \"cwise_op_less.cc\",\n        \"cwise_op_less_equal.cc\",\n        \"cwise_op_log.cc\",\n        \"cwise_op_logical_and.cc\",\n        \"cwise_op_logical_not.cc\",\n        \"cwise_op_logical_or.cc\",\n        \"cwise_op_maximum.cc\",\n        \"cwise_op_minimum.cc\",\n        \"cwise_op_mul_1.cc\",\n        \"cwise_op_mul_2.cc\",\n        \"cwise_op_neg_1.cc\",\n        \"cwise_op_neg_2.cc\",\n        \"cwise_op_not_equal_to_1.cc\",\n        \"cwise_op_not_equal_to_2.cc\",\n        \"cwise_op_pow.cc\",\n        \"cwise_op_real.cc\",\n        \"cwise_op_reciprocal.cc\",\n        \"cwise_op_right_shift.cc\",\n        \"cwise_op_round.cc\",\n        \"cwise_op_rsqrt.cc\",\n        \"cwise_op_select.cc\",\n        \"cwise_op_sigmoid.cc\",\n        \"cwise_op_sign.cc\",\n        \"cwise_op_sin.cc\",\n        \"cwise_op_sinh.cc\",\n        \"cwise_op_sqrt.cc\",\n        \"cwise_op_square.cc\",\n        \"cwise_op_squared_difference.cc\",\n        \"cwise_op_sub.cc\",\n        \"cwise_op_tan.cc\",\n        \"cwise_op_tanh.cc\",\n        \"cwise_op_xdivy.cc\",\n        \"cwise_op_xlog1py.cc\",\n        \"cwise_op_xlogy.cc\",\n        \"data_format_ops.cc\",\n        \"decode_raw_op.cc\",\n        \"decode_wav_op.cc\",\n        \"deep_conv2d.cc\",\n        \"deep_conv2d.h\",\n        \"depthwise_conv_grad_op.cc\",\n        \"depthwise_conv_op.cc\",\n        \"dynamic_partition_op.cc\",\n        \"eigen_contraction_kernel.cc\",\n        \"eigen_contraction_kernel.h\",\n        \"encode_wav_op.cc\",\n        \"fake_quant_ops.cc\",\n        \"fifo_queue.cc\",\n        \"fifo_queue_op.cc\",\n        \"fingerprint_op.cc\",\n        \"fused_batch_norm_op.cc\",\n        \"fused_eigen_output_kernels.cc\",\n        \"fused_eigen_output_kernels.h\",\n        \"listdiff_op.cc\",\n        \"population_count_op.cc\",\n        \"population_count_op.h\",\n        \"winograd_transform.h\",\n    ] + [\n        \"//tensorflow/core/kernels/image:crop_and_resize_op.cc\",\n        \"//tensorflow/core/kernels/image:crop_and_resize_op.h\",\n        \"//tensorflow/core/kernels/linalg:einsum_op_impl_half.cc\",\n        \"//tensorflow/core/kernels/linalg:einsum_op_impl_bfloat16.cc\",\n        \"//tensorflow/core/kernels/linalg:einsum_op_impl_int32.cc\",\n        \"//tensorflow/core/kernels/linalg:einsum_op_impl_int64.cc\",\n        \"//tensorflow/core/kernels/linalg:einsum_op_impl_float.cc\",\n        \"//tensorflow/core/kernels/linalg:einsum_op_impl_double.cc\",\n        \"//tensorflow/core/kernels/linalg:einsum_op_impl_complex64.cc\",\n        \"//tensorflow/core/kernels/linalg:einsum_op_impl_complex128.cc\",\n        \"//tensorflow/core/kernels/linalg:einsum_op_impl.h\",\n        \"//tensorflow/core/kernels/linalg:einsum_op.h\",\n        \"//tensorflow/core/kernels/image:decode_image_op.cc\",\n        \"//tensorflow/core/kernels/image:encode_jpeg_op.cc\",\n        \"//tensorflow/core/kernels/image:encode_png_op.cc\",\n        \"//tensorflow/core/kernels/image:colorspace_op.cc\",\n    ] + select({\n        \":xsmm_convolutions\": [\n            \"xsmm_conv2d.h\",\n            \"xsmm_conv2d.cc\",\n        ],\n        \"//conditions:default\": [],\n    }),\n)\n\nfilegroup(\n    name = \"portable_extended_ops_group2\",\n    srcs = [\n        \":portable_extended_ops_headers\",\n        \"as_string_op.cc\",\n        \"base64_ops.cc\",\n        \"batchtospace_op.cc\",\n        \"bincount_op.cc\",\n        \"broadcast_to_op.cc\",\n        \"bucketize_op.cc\",\n        \"checkpoint_callback_manager.cc\",\n        \"ctc_decoder_ops.cc\",\n        \"decode_padded_raw_op.cc\",\n        \"depthtospace_op.cc\",\n        \"diag_op.cc\",\n        \"dilation_ops.cc\",\n        \"dynamic_stitch_op.cc\",\n        \"fft_ops.cc\",\n        \"functional_ops.cc\",\n        \"in_topk_op.cc\",\n        \"in_topk_op.h\",\n        \"list_kernels.cc\",\n        \"logging_ops.cc\",\n        \"logging_ops.h\",\n        \"lookup_table_init_op.cc\",\n        \"lookup_table_op.cc\",\n        \"lrn_op.cc\",\n        \"l2loss_op.cc\",\n        \"map_kernels.cc\",\n        \"maxpooling_op.cc\",\n        \"mfcc.cc\",\n        \"mfcc_dct.cc\",\n        \"mfcc_mel_filterbank.cc\",\n        \"mfcc_op.cc\",\n        \"multinomial_op.cc\",\n        \"pad_op.cc\",\n        \"padding_fifo_queue.cc\",\n        \"padding_fifo_queue_op.cc\",\n        \"parse_tensor_op.cc\",\n        \"partitioned_function_ops.cc\",\n        \"pooling_ops_3d.cc\",\n        \"queue_base.cc\",\n        \"queue_op.cc\",\n        \"queue_ops.cc\",\n        \"ragged_tensor_variant.cc\",\n        \"ragged_range_op.cc\",\n        \"ragged_gather_op.cc\",\n        \"ragged_tensor_to_sparse_kernel.cc\",\n        \"ragged_tensor_to_tensor_op.cc\",\n        \"ragged_tensor_to_variant_op.cc\",\n        \"ragged_tensor_from_variant_op.cc\",\n        \"random_index_shuffle.h\",\n        \"random_index_shuffle.cc\",\n        \"random_index_shuffle_ops.cc\",\n        \"random_op.cc\",\n        \"random_op_cpu.h\",\n        \"random_ops_util.h\",\n        \"random_poisson_op.cc\",\n        \"random_shuffle_op.cc\",\n        \"reduce_join_op.cc\",\n        \"reduction_ops_all.cc\",\n        \"reduction_ops_any.cc\",\n        \"reduction_ops_common.cc\",\n        \"reduction_ops_max.cc\",\n        \"reduction_ops_mean.cc\",\n        \"reduction_ops_min.cc\",\n        \"reduction_ops_prod.cc\",\n        \"reduction_ops_sum.cc\",\n        \"regex_replace_op.cc\",\n        \"regex_full_match_op.cc\",\n        \"relu_op.cc\",\n        \"reshape_util.cc\",\n        \"resource_variable_ops.cc\",\n        \"resource_variable_util.cc\",\n        \"restore_op.cc\",\n        \"reverse_op.cc\",\n        \"roll_op.cc\",\n        \"save_op.cc\",\n        \"save_restore_tensor.cc\",\n        \"save_restore_v2_ops.cc\",\n        \"scan_ops.cc\",\n        \"scatter_functor.cc\",\n        \"scatter_nd_op.cc\",\n        \"scatter_nd_op_cpu_impl_0.cc\",\n        \"scatter_nd_op_cpu_impl_1.cc\",\n        \"scatter_nd_op_cpu_impl_2.cc\",\n        \"scatter_nd_op_cpu_impl_3.cc\",\n        \"scatter_nd_op_cpu_impl_4.cc\",\n        \"scatter_nd_op_cpu_impl_5.cc\",\n        \"scatter_nd_op_cpu_impl_6.cc\",\n        \"scatter_nd_op_cpu_impl_7.cc\",\n        \"scatter_nd_util.cc\",\n        \"searchsorted_op.cc\",\n        \"segment_reduction_ops_impl_1.cc\",\n        \"segment_reduction_ops_impl_2.cc\",\n        \"segment_reduction_ops_impl_3.cc\",\n        \"segment_reduction_ops_impl_4.cc\",\n        \"segment_reduction_ops_impl_5.cc\",\n        \"session_ops.cc\",\n        \"set_kernels.cc\",\n        \"softplus_op.cc\",\n        \"softsign_op.cc\",\n        \"spacetobatch_functor.cc\",\n        \"spacetobatch_op.cc\",\n        \"spacetodepth_op.cc\",\n        \"sparse_add_op.cc\",\n        \"sparse_cross_op.cc\",\n        \"sparse_reduce_op.cc\",\n        \"sparse_xent_op.cc\",\n        \"sparse_fill_empty_rows_op.cc\",\n        \"sparse_reorder_op.cc\",\n        \"sparse_reshape_op.cc\",\n        \"sparse_slice_op.cc\",\n        \"sparse_tensor_dense_matmul_op.cc\",\n        \"sparse_to_dense_op.cc\",\n        \"spectrogram.cc\",\n        \"spectrogram_op.cc\",\n        \"stack.cc\",\n        \"stack.h\",\n        \"stack_ops.cc\",\n        \"stateless_random_gamma_op.cc\",\n        \"stateless_random_ops.cc\",\n        \"stateless_random_ops_v2.cc\",\n        \"string_format_op.cc\",\n        \"string_join_op.cc\",\n        \"string_length_op.cc\",\n        \"string_lower_op.cc\",\n        \"string_util.cc\",\n        \"string_split_op.cc\",\n        \"string_strip_op.cc\",\n        \"string_to_hash_bucket_op.cc\",\n        \"string_to_hash_bucket_fast_op.cc\",\n        \"string_to_number_op.cc\",\n        \"substr_op.cc\",\n        \"tensor_array.cc\",\n        \"tensor_array_ops.cc\",\n        \"tensor_list.cc\",\n        \"tensor_map.cc\",\n        \"tile_functor_cpu.h\",\n        \"tile_functor_cpu_bfloat16.cc\",\n        \"tile_functor_cpu_bool.cc\",\n        \"tile_functor_cpu_complex128.cc\",\n        \"tile_functor_cpu_complex64.cc\",\n        \"tile_functor_cpu_double.cc\",\n        \"tile_functor_cpu_float.cc\",\n        \"tile_functor_cpu_half.cc\",\n        \"tile_functor_cpu_int16.cc\",\n        \"tile_functor_cpu_int32.cc\",\n        \"tile_functor_cpu_int64.cc\",\n        \"tile_functor_cpu_int8.cc\",\n        \"tile_functor_cpu_tstring.cc\",\n        \"tile_functor_cpu_uint32.cc\",\n        \"tile_functor_cpu_uint64.cc\",\n        \"tile_functor_cpu_uint8.cc\",\n        \"tile_functor_cpu_variant.cc\",\n        \"tile_ops.cc\",\n        \"tile_ops_cpu_impl_1.cc\",\n        \"tile_ops_cpu_impl_2.cc\",\n        \"tile_ops_cpu_impl_3.cc\",\n        \"tile_ops_cpu_impl_4.cc\",\n        \"tile_ops_cpu_impl_5.cc\",\n        \"tile_ops_cpu_impl_6.cc\",\n        \"tile_ops_cpu_impl_7.cc\",\n        \"topk_op.cc\",\n        \"training_op_helpers.cc\",\n        \"training_ops.cc\",\n        \"transpose_functor_cpu.cc\",\n        \"transpose_op.cc\",\n        \"unicode_ops.cc\",\n        \"unique_op.cc\",\n        \"unsorted_segment_join_op.cc\",\n        \"where_op.cc\",\n        \"whole_file_read_ops.cc\",\n        \"xent_op.cc\",\n    ] + [\n        \"//tensorflow/core/kernels/data:portable_all_op_kernels\",\n        \"//tensorflow/core/kernels/image:adjust_contrast_op.cc\",\n        \"//tensorflow/core/kernels/image:adjust_hue_op.cc\",\n        \"//tensorflow/core/kernels/image:adjust_saturation_op.cc\",\n        \"//tensorflow/core/kernels/image:extract_image_patches_op.cc\",\n        \"//tensorflow/core/kernels/image:image_ops.cc\",\n        \"//tensorflow/core/kernels/image:mirror_pad_op.cc\",\n        \"//tensorflow/core/kernels/image:mirror_pad_op_cpu_impl_1.cc\",\n        \"//tensorflow/core/kernels/image:mirror_pad_op_cpu_impl_2.cc\",\n        \"//tensorflow/core/kernels/image:mirror_pad_op_cpu_impl_3.cc\",\n        \"//tensorflow/core/kernels/image:mirror_pad_op_cpu_impl_4.cc\",\n        \"//tensorflow/core/kernels/image:mirror_pad_op_cpu_impl_5.cc\",\n        \"//tensorflow/core/kernels/image:resize_bicubic_op.cc\",\n        \"//tensorflow/core/kernels/image:resize_bilinear_op.cc\",\n        \"//tensorflow/core/kernels/image:resize_nearest_neighbor_op.cc\",\n        \"//tensorflow/core/kernels/image:sample_distorted_bounding_box_op.cc\",\n        \"//tensorflow/core/kernels/linalg:cholesky_op.cc\",\n        \"//tensorflow/core/kernels/linalg:determinant_op.cc\",\n        \"//tensorflow/core/kernels/linalg:linalg_ops_common.cc\",\n        \"//tensorflow/core/kernels/linalg:matrix_band_part_op.cc\",\n        \"//tensorflow/core/kernels/linalg:matrix_diag_op.cc\",\n        \"//tensorflow/core/kernels/linalg:matrix_inverse_op.cc\",\n        \"//tensorflow/core/kernels/linalg:matrix_set_diag_op.cc\",\n        \"//tensorflow/core/kernels/linalg:matrix_triangular_solve_op_complex.cc\",\n        \"//tensorflow/core/kernels/linalg:matrix_triangular_solve_op_real.cc\",\n        \"//tensorflow/core/kernels/linalg:qr_op_complex128.cc\",\n        \"//tensorflow/core/kernels/linalg:qr_op_complex64.cc\",\n        \"//tensorflow/core/kernels/linalg:qr_op_double.cc\",\n        \"//tensorflow/core/kernels/linalg:qr_op_float.cc\",\n    ],\n)\n\nfilegroup(\n    name = \"portable_quantized_ops\",\n    srcs = [\n        \"dequantize_op.cc\",\n        \"meta_support.cc\",\n        \"meta_support.h\",\n        \"quantization_utils.cc\",\n        \"quantization_utils.h\",\n        \"quantize_down_and_shrink_range.cc\",\n        \"quantize_op.cc\",\n        \"quantized_activation_ops.cc\",\n        \"quantized_add_op.cc\",\n        \"quantized_batch_norm_op.cc\",\n        \"quantized_bias_add_op.cc\",\n        \"quantized_concat_op.cc\",\n        \"quantized_conv_ops.cc\",\n        \"quantized_instance_norm.cc\",\n        \"quantized_matmul_op.cc\",\n        \"quantized_mul_op.cc\",\n        \"quantized_pooling_ops.cc\",\n        \"quantized_reshape_op.cc\",\n        \"quantized_resize_bilinear_op.cc\",\n        \"reference_gemm.h\",\n        \"requantization_range_op.cc\",\n        \"requantize.cc\",\n        \"reshape_op.h\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n\nANDROID_TEXTUAL_HDRS = [\n    \"eigen_convolution_helpers.h\",\n    \"eigen_spatial_convolutions-inl.h\",\n    \"gather_nd_op_cpu_impl.h\",\n    \"gemm_functors.h\",\n    \"scatter_nd_op_cpu_impl.h\",\n    \"slice_op_cpu_impl.h\",\n    \"strided_slice_op_impl.h\",\n    \"tile_ops_cpu_impl.h\",\n]\n\n# A file group which contains nearly all available operators which\n# may work on mobile environment. This is intended to be used with selective\n# registration.\nfilegroup(\n    name = \"portable_all_ops\",\n    srcs = [\n        \"//tensorflow/c/kernels:portable_all_op_kernels\",\n        \"//tensorflow/core/kernels/data:portable_all_op_kernels\",\n        \"//tensorflow/core/kernels/image:portable_all_op_kernels\",\n        \"//tensorflow/core/kernels/linalg:portable_all_op_kernels\",\n    ] + glob(\n        [\n            \"*.cc\",\n            \"*.h\",\n        ],\n        exclude = [\n            \"*test.cc\",\n            \"*test_util*\",\n            \"*testutil*\",\n            \"*testlib*\",\n            \"*main.cc\",\n            \"*_gpu*\",\n            \"*_3d*\",\n            \"*.cu.*\",\n            # Helper files for tests\n            \"eigen_benchmark.h\",\n            # Ops already in android_srcs\n            \"pooling_ops_common.cc\",\n            # Ops which we are currently excluding because they are likely\n            # not used on Android. Those ops also do not compile if included,\n            # unless we add the additional deps they need.\n            \"tf_record_reader_op.*\",\n            \"cudnn_rnn_ops.*\",\n            \"lmdb_reader_op.*\",\n            \"string_to_hash_bucket_op.*\",\n            \"sdca_ops.*\",\n            \"sdca_internal.*\",\n            \"sparse_cross_op.*\",\n            \"text_line_reader_op.*\",\n            \"summary_image_op.*\",\n            \"identity_reader_op.*\",\n            \"fixed_length_record_reader_op.*\",\n            \"sample_distorted_bounding_box_op.*\",\n            \"ctc_loss_op.*\",\n            \"summary_interface.*\",\n            \"summary_kernels.*\",\n            \"spectrogram_convert_test_data.cc\",\n            \"decode_proto_op.cc\",\n            \"encode_proto_op.cc\",\n            \"sobol_op.cc\",\n            # Excluded due to experimental status:\n            \"debug_ops.*\",\n            \"mutex_ops.*\",\n            \"batch_kernels.*\",\n            \"regex_replace_op.cc\",\n            \"string_lower_op.cc\",  # Requires ICU for unicode.\n            \"string_upper_op.cc\",  # Requires ICU for unicode.\n            \"unicode_ops.cc\",\n            \"unicode_script_op.cc\",\n            # Ops that are inherently incompatible with Android (e.g. tied to x86 platform).\n            \"xsmm_*\",\n            \"nextafter_op.cc\",\n            \"initializable_lookup_table.*\",\n            \"lookup_util.*\",\n        ] + ANDROID_TEXTUAL_HDRS,\n    ) + [\n        # Referenced by stateful_random_ops.cc but excluded with the *gpu*\n        # rule above. Seems to have only have worked before because of\n        # hdrs_check loose.\n        \"stateful_random_ops_cpu_gpu.h\",\n        # Allows conv_3d ops for android but excluded from *_3d* rule above.\n        \"conv_3d.h\",\n        \"conv_ops_3d.cc\",\n        \"conv_ops_gpu.h\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"android_all_ops\",\n    actual = \":portable_all_ops\",\n)\n\nfilegroup(\n    name = \"portable_all_ops_textual_hdrs\",\n    srcs = ANDROID_TEXTUAL_HDRS + [\n        \"//tensorflow/core/kernels/image:portable_all_ops_textual_hdrs\",\n        \"//tensorflow/core/util:image_resizer_state.h\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n\nalias(\n    name = \"android_all_ops_textual_hdrs\",\n    actual = \"portable_all_ops_textual_hdrs\",\n)\n\ncc_library(\n    name = \"portable_tensorflow_kernels\",\n    srcs = if_mobile([\n        \"//tensorflow/core/kernels:portable_core_ops\",\n        \"//tensorflow/core/kernels:portable_extended_ops\",\n    ]),\n    copts = tf_copts() + tf_opts_nortti_if_lite_protos(),\n    linkopts = if_android([\"-ldl\"]),\n    tags = [\n        \"manual\",\n        \"notap\",\n    ],\n    # These headers are not self-contained, so should be included in textual_hdrs only.\n    textual_hdrs = ANDROID_TEXTUAL_HDRS,\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"//tensorflow/core:portable_gif_internal\",\n        \"//tensorflow/core:portable_jpeg_internal\",\n        \"//tensorflow/core:portable_tensorflow_lib_lite\",\n        \"//tensorflow/core:protos_all_cc_impl\",\n        \"//tensorflow/core/lib/png:png_io\",\n        \"//tensorflow/core/platform:strong_hash\",\n        \"//tensorflow/core/platform:types\",\n        \"//third_party/eigen3\",\n        \"//third_party/fft2d:fft2d_headers\",\n        \"//third_party/icu/data:conversion_data\",\n        \"@com_google_absl//absl/base\",\n        \"@com_google_protobuf//:protobuf\",\n        \"@fft2d\",\n        \"@gemmlowp\",\n        \"@icu//:common\",\n    ],\n    alwayslink = 1,\n)\n\nbuild_test(\n    name = \"portable_tensorflow_kernels_build_test\",\n    targets = [\":portable_tensorflow_kernels\"],\n)\n\ncc_library(\n    name = \"android_whole_file_read_ops\",\n    srcs = if_android([\"whole_file_read_ops.cc\"]),\n    copts = tf_copts(),\n    linkopts = [\"-ldl\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"//tensorflow/core:portable_tensorflow_lib_lite\",\n    ],\n    alwayslink = 1,\n)\n\n#   Quantization-specific OpKernels\n\ntf_kernel_library(\n    name = \"quantized_ops\",\n    srcs = [\n        \"dequantize_op.cc\",\n        \"quantize_down_and_shrink_range.cc\",\n        \"quantize_op.cc\",\n        \"quantized_activation_ops.cc\",\n        \"quantized_add_op.cc\",\n        \"quantized_batch_norm_op.cc\",\n        \"quantized_bias_add_op.cc\",\n        \"quantized_concat_op.cc\",\n        \"quantized_conv_ops.cc\",\n        \"quantized_instance_norm.cc\",\n        \"quantized_matmul_op.cc\",\n        \"quantized_mul_op.cc\",\n        \"quantized_pooling_ops.cc\",\n        \"quantized_reshape_op.cc\",\n        \"quantized_resize_bilinear_op.cc\",\n        \"requantization_range_op.cc\",\n        \"requantize.cc\",\n        \"reshape_op.h\",\n    ],\n    hdrs = [\"reference_gemm.h\"],\n    deps = [\n        \":concat_lib_hdrs\",\n        \":conv_ops\",\n        \":cwise_op\",\n        \":eigen_helpers\",\n        \":meta_support\",\n        \":ops_util\",\n        \":pooling_ops\",\n        \":quantization_utils\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/util:determinism_for_kernels\",\n        \"//tensorflow/core/util:image_resizer_state\",\n        \"//third_party/eigen3\",\n        \"@gemmlowp\",\n    ],\n)\n\ntf_cc_test(\n    name = \"requantization_range_op_test\",\n    size = \"small\",\n    srcs = [\"requantization_range_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantized_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"quantize_down_and_shrink_range_op_test\",\n    size = \"small\",\n    srcs = [\"quantize_down_and_shrink_range_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantized_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"requantize_op_test\",\n    size = \"small\",\n    srcs = [\"requantize_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantized_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"quantization_utils_test\",\n    srcs = [\"quantization_utils_test.cc\"],\n    deps = [\n        \":quantization_utils\",\n        \":quantized_ops\",\n        \"//tensorflow/core:array_ops_op_lib\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:math_ops_op_lib\",\n        \"//tensorflow/core:nn_ops_op_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:testlib\",\n        \"//third_party/eigen3\",\n    ],\n)\n\n# Android-only test for quantization utilities.\ntf_cc_binary(\n    name = \"quantization_utils_test_android_only\",\n    testonly = 1,\n    srcs = [\"quantization_utils_test.cc\"],\n    copts = tf_copts(),\n    linkopts = select({\n        \"//tensorflow:android\": [\n            \"-lm\",\n            \"-llog\",\n            \"-pie\",\n        ],\n        \"//conditions:default\": [],\n    }),\n    linkstatic = 1,\n    tags = [\n        \"manual\",\n        \"notap\",\n    ],\n    deps = [\n    ] + select({\n        \"//tensorflow:android\": [\n            \":portable_tensorflow_kernels\",\n            \"//tensorflow/core:portable_tensorflow_lib\",\n            \"//tensorflow/core:portable_tensorflow_test_lib\",\n        ],\n        \"//conditions:default\": [\n            \":quantized_ops\",\n            \"//third_party/eigen3\",\n            \"//tensorflow/core:core_cpu_internal\",\n            \"//tensorflow/core:lib\",\n            \"//tensorflow/core:test\",\n            \"//tensorflow/cc:cc_ops\",\n            \"//tensorflow/cc:client_session\",\n            \"//tensorflow/core:framework\",\n            \"//tensorflow/core/framework:tensor_testutil\",\n        ],\n    }),\n)\n\ntf_cc_test(\n    name = \"quantized_activation_ops_test\",\n    srcs = [\"quantized_activation_ops_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantization_utils\",\n        \":quantized_ops\",\n        \"//tensorflow/core:array_ops_op_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:math_ops_op_lib\",\n        \"//tensorflow/core:nn_ops_op_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\n# Android-only test for quantized addition.\ncc_binary(\n    name = \"quantized_add_op_test_android_only\",\n    testonly = 1,\n    srcs = [\"quantized_add_op_test.cc\"],\n    copts = tf_copts(),\n    linkopts = select({\n        \"//tensorflow:android\": [\n            \"-lm\",\n            \"-llog\",\n            \"-pie\",\n        ],\n        \"//conditions:default\": [],\n    }),\n    linkstatic = 1,\n    tags = [\n        \"manual\",\n        \"notap\",\n    ],\n    deps = [\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n    ] + select({\n        \"//tensorflow:android\": [\n            \":portable_tensorflow_kernels\",\n            \"//tensorflow/core:portable_tensorflow_lib\",\n            \"//tensorflow/core:portable_tensorflow_test_lib\",\n        ],\n        \"//conditions:default\": [\n            \":ops_util\",\n            \":quantized_ops\",\n            \"//tensorflow/core:framework\",\n            \"//tensorflow/core:protos_all_cc\",\n            \"//tensorflow/core/framework:tensor_testutil\",\n            \"//tensorflow/core:tensorflow\",\n            \"//tensorflow/core:test\",\n        ],\n    }),\n)\n\ntf_cc_test(\n    name = \"quantized_add_op_test\",\n    size = \"small\",\n    srcs = [\"quantized_add_op_test.cc\"],\n    deps = [\n        \":math\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantization_utils\",\n        \":quantized_ops\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n        \"//tensorflow/core:array_ops_op_lib\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:direct_session\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:math_ops_op_lib\",\n        \"//tensorflow/core:nn_ops_op_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"quantized_resize_bilinear_op_test\",\n    size = \"small\",\n    srcs = [\"quantized_resize_bilinear_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantization_utils\",\n        \":quantized_ops\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:direct_session\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:image_ops_op_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\n# Android-only test for quantized resize bilinear.\ncc_binary(\n    name = \"quantized_resize_bilinear_op_test_android_only\",\n    testonly = 1,\n    srcs = [\"quantized_resize_bilinear_op_test.cc\"],\n    copts = tf_copts(),\n    linkopts = select({\n        \"//tensorflow:android\": [\n            \"-lm\",\n            \"-llog\",\n            \"-pie\",\n        ],\n        \"//conditions:default\": [],\n    }),\n    linkstatic = 1,\n    tags = [\n        \"manual\",\n        \"notap\",\n    ],\n    deps = [\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n    ] + select({\n        \"//tensorflow:android\": [\n            \":portable_tensorflow_kernels\",\n            \"//tensorflow/core:portable_tensorflow_lib\",\n            \"//tensorflow/core:portable_tensorflow_test_lib\",\n        ],\n        \"//conditions:default\": [\n            \":ops_testutil\",\n            \":ops_util\",\n            \":quantized_ops\",\n            \"//tensorflow/core:core_cpu\",\n            \"//tensorflow/core:direct_session\",\n            \"//tensorflow/core:framework\",\n            \"//tensorflow/core:image_ops_op_lib\",\n            \"//tensorflow/core:protos_all_cc\",\n            \"//tensorflow/core:test\",\n            \"//tensorflow/core:testlib\",\n        ],\n    }),\n)\n\ntf_cc_test(\n    name = \"quantized_bias_add_op_test\",\n    size = \"small\",\n    srcs = [\"quantized_bias_add_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantization_utils\",\n        \":quantized_ops\",\n        \"//tensorflow/core:array_ops_op_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:math_ops_op_lib\",\n        \"//tensorflow/core:nn_ops_op_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"quantized_conv_ops_test\",\n    size = \"small\",\n    srcs = [\"quantized_conv_ops_test.cc\"],\n    tags = [\"nomsan\"],  # http://b/32242946\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantization_utils\",\n        \":quantized_ops\",\n        \"//tensorflow/core:array_ops_op_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:math_ops_op_lib\",\n        \"//tensorflow/core:nn_ops_op_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"quantize_op_test\",\n    size = \"small\",\n    srcs = [\"quantize_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantized_ops\",\n        \"//tensorflow/core:array_ops_op_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:math_ops_op_lib\",\n        \"//tensorflow/core:nn_ops_op_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"quantized_matmul_op_test\",\n    size = \"small\",\n    srcs = [\"quantized_matmul_op_test.cc\"],\n    tags = [\"nomsan\"],  # http://b/32242946\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantization_utils\",\n        \":quantized_ops\",\n        \"//tensorflow/core:array_ops_op_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:math_ops_op_lib\",\n        \"//tensorflow/core:nn_ops_op_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\n# Android-only test for quantized multiply.\ncc_binary(\n    name = \"quantized_mul_op_test_android_only\",\n    testonly = 1,\n    srcs = [\"quantized_mul_op_test.cc\"],\n    linkopts = select({\n        \"//tensorflow:android\": [\n            \"-pie\",\n        ],\n        \"//conditions:default\": [],\n    }),\n    linkstatic = 1,\n    tags = [\n        \"manual\",\n        \"notap\",\n    ],\n    deps = [\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n    ] + select({\n        \"//tensorflow:android\": [\n            \":portable_tensorflow_kernels\",\n            \"//tensorflow/core:portable_tensorflow_lib\",\n            \"//tensorflow/core:portable_tensorflow_test_lib\",\n        ],\n        \"//conditions:default\": [\n            \":ops_util\",\n            \":quantized_ops\",\n            \"//tensorflow/core:framework\",\n            \"//tensorflow/core/framework:tensor_testutil\",\n            \"//tensorflow/core:protos_all_cc\",\n            \"//tensorflow/core:test\",\n        ],\n    }),\n)\n\ntf_cc_test(\n    name = \"quantized_mul_op_test\",\n    size = \"small\",\n    srcs = [\"quantized_mul_op_test.cc\"],\n    deps = [\n        \":math\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantization_utils\",\n        \":quantized_ops\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n        \"//tensorflow/core:array_ops_op_lib\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:direct_session\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:math_ops_op_lib\",\n        \"//tensorflow/core:nn_ops_op_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"quantized_pooling_ops_test\",\n    size = \"small\",\n    srcs = [\"quantized_pooling_ops_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantization_utils\",\n        \":quantized_ops\",\n        \"//tensorflow/core:array_ops_op_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:math_ops_op_lib\",\n        \"//tensorflow/core:nn_ops_op_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"quantized_reshape_op_test\",\n    size = \"small\",\n    srcs = [\"quantized_reshape_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantized_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"quantized_concat_op_test\",\n    size = \"small\",\n    srcs = [\"quantized_concat_op_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantization_utils\",\n        \":quantized_ops\",\n        \"//tensorflow/core:array_ops_op_lib\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:math_ops_op_lib\",\n        \"//tensorflow/core:nn_ops_op_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"quantized_batch_norm_op_test\",\n    size = \"small\",\n    srcs = [\"quantized_batch_norm_op_test.cc\"],\n    deps = [\n        \":batch_norm_op\",\n        \":ops_testutil\",\n        \":quantization_utils\",\n        \":quantized_ops\",\n        \"//tensorflow/core:array_ops_op_lib\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:math_ops_op_lib\",\n        \"//tensorflow/core:nn_ops_op_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"//third_party/eigen3\",\n    ],\n)\n\n# Android-only test for quantized instance norm.\ncc_binary(\n    name = \"quantized_instance_norm_test_android_only\",\n    testonly = 1,\n    srcs = [\"quantized_instance_norm_test.cc\"],\n    linkopts = select({\n        \"//tensorflow:android\": [\n            \"-pie\",\n        ],\n        \"//conditions:default\": [],\n    }),\n    linkstatic = 1,\n    tags = [\n        \"manual\",\n        \"notap\",\n    ],\n    deps = [\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n    ] + select({\n        \"//tensorflow:android\": [\n            \":portable_tensorflow_kernels\",\n            \"//tensorflow/core:portable_tensorflow_lib\",\n            \"//tensorflow/core:portable_tensorflow_test_lib\",\n        ],\n        \"//conditions:default\": [\n            \"//tensorflow/core:framework\",\n            \"//tensorflow/core/framework:tensor_testutil\",\n        ],\n    }),\n)\n\ntf_cc_test(\n    name = \"quantized_instance_norm_test\",\n    size = \"small\",\n    srcs = [\"quantized_instance_norm_test.cc\"],\n    deps = [\n        \":ops_testutil\",\n        \":ops_util\",\n        \":quantized_ops\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:direct_session\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ncc_library(\n    name = \"quantization_utils\",\n    srcs = [\"quantization_utils.cc\"],\n    hdrs = [\"quantization_utils.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"@gemmlowp\",\n    ],\n)\n\ntf_cc_test(\n    name = \"bias_op_test\",\n    size = \"small\",\n    srcs = [\"bias_op_test.cc\"],\n    deps = [\n        \":bias_op\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\n# NOTE(lespeholt): This rule is deprecated, please use:\n# tensorflow/core/util/batch_util.h\ncc_library(\n    name = \"batch_util\",\n    hdrs = [\"batch_util.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_kernel_library(name = \"boosted_trees_ops\")\n\ntf_kernel_library(\n    name = \"data_service_ops\",\n    deps = [\n        \"//tensorflow/core/kernels/data/experimental:data_service_kernels\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"dataset_ops\",\n    deps = [\n        \"//tensorflow/core/kernels/data\",\n    ],\n)\n\ncc_library(\n    name = \"summary_interface\",\n    hdrs = [\"summary_interface.h\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"summary_kernels\",\n    srcs = [\"summary_kernels.cc\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/lib/db:sqlite\",\n        \"//tensorflow/core/summary:schema\",\n        \"//tensorflow/core/summary:summary_db_writer\",\n        \"//tensorflow/core/summary:summary_file_writer\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"decode_proto_op\",\n    srcs = [\n        \"decode_proto_op.cc\",\n    ],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/util/proto:decode\",\n        \"//tensorflow/core/util/proto:descriptors\",\n        \"//tensorflow/core/util/proto:proto_utils\",\n        \"//third_party/eigen3\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"encode_proto_op\",\n    srcs = [\"encode_proto_op.cc\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/util/proto:descriptors\",\n        \"//tensorflow/core/util/proto:proto_utils\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"unicode_script_op\",\n    srcs = [\"unicode_script_op.cc\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"@icu//:common\",\n    ],\n)\n\n# Library to link with when compiling the cwise_op kernels directly,\n# e.g. for selective registration.\n# should not be linked by projects that also link the cwise_op library.\ncc_library(\n    name = \"cwise_lib\",\n    srcs = [\"cwise_ops_common.cc\"],\n    hdrs = [\n        \"cwise_ops.h\",\n        \"cwise_ops_common.h\",\n        \"cwise_ops_gpu_common.cu.h\",\n        \"cwise_ops_gpu_gradients.cu.h\",\n        \"cwise_ops_gradients.h\",\n        \"fill_functor.h\",\n    ],\n    deps = [\n        \":meta_support\",\n        \":quantization_utils\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"//third_party/eigen3\",\n        \"@gemmlowp\",\n    ],\n)\n\n# Header-only version of cwise_lib for clients that want to use the cwise_ops\n# functionality in their own custom ops.\ncc_header_only_library(\n    name = \"cwise_lib_hdrs\",\n    deps = [\n        \":cwise_lib\",\n    ],\n)\n\n# Library to link with when compiling the quantize and dequantize kernels directly,\n# e.g. for selective registration.\ncc_header_only_library(\n    name = \"quantize_and_dequantize_op_hdrs\",\n    deps = [\n        \":quantize_and_dequantize_op\",\n    ],\n)\n\ncc_library(\n    name = \"kernel_platform_strings\",\n    srcs = [\"kernel_platform_strings.h\"],\n    deps = [\n        \"//tensorflow/core/platform:platform_strings\",\n    ],\n    alwayslink = 1,\n)\n\n# Shared object that links all the kernels TF needs.\ntf_cc_shared_library(\n    name = \"libtfkernel_all_kernels.so\",\n    static_deps = [\n        # TODO(rostam): Remove Copybara transform.\n        # copybara:comment_begin(oss only)\n        \"@bazel_tools//:__subpackages__\",\n        \"@boringssl//:__subpackages__\",\n        \"@com_github_cares_cares//:__subpackages__\",\n        \"@com_github_googlecloudplatform_tensorflow_gcp_tools//:__subpackages__\",\n        \"@com_github_grpc_grpc//:__subpackages__\",\n        \"@com_google_absl//:__subpackages__\",\n        \"@com_google_googleapis//:__subpackages__\",\n        \"@com_google_protobuf//:__subpackages__\",\n        \"@com_googlesource_code_re2//:__subpackages__\",\n        \"@compute_library//:__subpackages__\",\n        \"@curl//:__subpackages__\",\n        \"@double_conversion//:__subpackages__\",\n        \"@eigen_archive//:__subpackages__\",\n        \"@farmhash_archive//:__subpackages__\",\n        \"@farmhash_gpu_archive//:__subpackages__\",\n        \"@fft2d//:__subpackages__\",\n        \"@gemmlowp//:__subpackages__\",\n        \"@gif//:__subpackages__\",\n        \"@highwayhash//:__subpackages__\",\n        \"@hwloc//:__subpackages__\",\n        \"@icu//:__subpackages__\",\n        \"@jsoncpp_git//:__subpackages__\",\n        \"@libjpeg_turbo//:__subpackages__\",\n        \"@libxsmm_archive//:__subpackages__\",\n        \"@llvm_openmp//:__subpackages__\",\n        \"@llvm-project//:__subpackages__\",\n        \"@llvm_terminfo//:__subpackages__\",\n        \"@llvm_zlib//:__subpackages__\",\n        \"@lmdb//:__subpackages__\",\n        \"@local_config_cuda//:__subpackages__\",\n        \"@local_config_git//:__subpackages__\",\n        \"@local_config_nccl//:__subpackages__\",\n        \"@local_config_rocm//:__subpackages__\",\n        \"@local_config_tensorrt//:__subpackages__\",\n        \"@local_execution_config_platform//:__subpackages__\",\n        \"@mkl_dnn_acl_compatible//:__subpackages__\",\n        \"@mkl_dnn_v1//:__subpackages__\",\n        \"@nsync//:__subpackages__\",\n        \"@org_sqlite//:__subpackages__\",\n        \"@platforms//:__subpackages__\",\n        \"@png//:__subpackages__\",\n        \"@snappy//:__subpackages__\",\n        \"//:__subpackages__\",\n        \"@upb//:__subpackages__\",\n        \"@zlib//:__subpackages__\",\n        # copybara:comment_end\n    ],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":kernel_platform_strings\",\n        \"//tensorflow/core:all_kernels_impl\",\n    ],\n)\n\n# Manually curated set of tests that are useful for building and testing against\n# platforms and architecures that don't support CUDA.\n# TODO(b/153737462): Automatically filter tests to create the appropriate\n# portable test list.\ntest_suite(\n    name = \"portable_kernel_tests\",\n    tags = [\n        \"manual\",  # Avoid redundancy when using wildcard test patterns.\n    ],\n    tests = [\n        \":batch_norm_op_test\",\n        \":broadcast_to_op_test_cpu\",\n        \":cast_op_test_cpu\",\n        \":concat_op_test\",\n        \":control_flow_ops_test\",\n        \":cwise_ops_test_cpu\",\n        \":deep_conv2d_test\",\n        \":dequantize_op_test\",\n        \":diag_op_test_cpu\",\n        \":eigen_activations_test\",\n        \":eigen_pooling_test\",\n        \":eigen_spatial_convolutions_test\",\n        \":gather_nd_op_test_cpu\",\n        \":matmul_op_test_cpu\",\n        \":mfcc_test\",\n        \":multinomial_op_test_cpu\",\n        \":nn_ops_test_cpu\",\n        \":quantization_utils_test\",\n        \":quantize_and_dequantize_op_test_cpu\",\n        \":quantize_op_test\",\n        \":quantized_activation_ops_test\",\n        \":quantized_batch_norm_op_test\",\n        \":quantized_conv_ops_test\",\n        \":quantized_matmul_op_test\",\n        \":quantized_pooling_ops_test\",\n        \":random_binomial_op_test_cpu\",\n        \":random_op_test_cpu\",\n        \":random_poisson_op_test_cpu\",\n        \":reduction_ops_test_cpu\",\n        \":requantization_range_op_test\",\n        \":scatter_op_test\",\n        \":segment_reduction_ops_test\",\n        \":slice_op_test\",\n        \":spectrogram_test\",\n        \":split_op_test\",\n        \":split_v_op_test_cpu\",\n        \":strided_slice_op_test\",\n        \":unique_op_test\",\n        \":variable_ops_test\",\n        \"//tensorflow/core/kernels/image:crop_and_resize_op_test\",\n        \"//tensorflow/core/kernels/image:non_max_suppression_op_test\",\n        \"//tensorflow/core/kernels/image:resize_ops_test_cpu\",\n    ],\n)\n\nexports_files([\n    \"cwise_op_abs.cc\",\n    \"cwise_op_add_1.cc\",\n    \"cwise_op_add_2.cc\",\n    \"cwise_op_atan2.cc\",\n    \"cwise_op_ceil.cc\",\n    \"cwise_op_cos.cc\",\n    \"cwise_op_div.cc\",\n    \"cwise_op_equal_to_1.cc\",\n    \"cwise_op_equal_to_2.cc\",\n    \"cwise_op_exp.cc\",\n    \"cwise_op_floor.cc\",\n    \"cwise_op_floor_div.cc\",\n    \"cwise_op_floor_mod.cc\",\n    \"cwise_op_gpu_add.cu.cc\",\n    \"cwise_op_gpu_atan2.cu.cc\",\n    \"cwise_op_gpu_ceil.cu.cc\",\n    \"cwise_op_gpu_cos.cu.cc\",\n    \"cwise_op_gpu_div.cu.cc\",\n    \"cwise_op_gpu_equal_to.cu.cc\",\n    \"cwise_op_gpu_exp.cu.cc\",\n    \"cwise_op_gpu_floor.cu.cc\",\n    \"cwise_op_gpu_floor_div.cu.cc\",\n    \"cwise_op_gpu_greater.cu.cc\",\n    \"cwise_op_gpu_greater_equal.cu.cc\",\n    \"cwise_op_gpu_isinf.cu.cc\",\n    \"cwise_op_gpu_less.cu.cc\",\n    \"cwise_op_gpu_less_equal.cu.cc\",\n    \"cwise_op_gpu_log.cu.cc\",\n    \"cwise_op_gpu_logical_and.cu.cc\",\n    \"cwise_op_gpu_logical_not.cu.cc\",\n    \"cwise_op_gpu_logical_or.cu.cc\",\n    \"cwise_op_gpu_maximum.cu.cc\",\n    \"cwise_op_gpu_minimum.cu.cc\",\n    \"cwise_op_gpu_mod.cu.cc\",\n    \"cwise_op_gpu_mul.cu.cc\",\n    \"cwise_op_gpu_neg.cu.cc\",\n    \"cwise_op_gpu_not_equal_to.cu.cc\",\n    \"cwise_op_gpu_pow.cu.cc\",\n    \"cwise_op_gpu_round.cu.cc\",\n    \"cwise_op_gpu_rsqrt.cu.cc\",\n    \"cwise_op_gpu_select.cu.cc\",\n    \"cwise_op_gpu_sigmoid.cu.cc\",\n    \"cwise_op_gpu_sin.cu.cc\",\n    \"cwise_op_gpu_sqrt.cu.cc\",\n    \"cwise_op_gpu_square.cu.cc\",\n    \"cwise_op_gpu_squared_difference.cu.cc\",\n    \"cwise_op_gpu_sub.cu.cc\",\n    \"cwise_op_gpu_tanh.cu.cc\",\n    \"cwise_op_greater.cc\",\n    \"cwise_op_greater_equal.cc\",\n    \"cwise_op_isinf.cc\",\n    \"cwise_op_leakyrelu_bf16.cc\",\n    \"cwise_op_less.cc\",\n    \"cwise_op_less_equal.cc\",\n    \"cwise_op_log.cc\",\n    \"cwise_op_logical_and.cc\",\n    \"cwise_op_logical_not.cc\",\n    \"cwise_op_logical_or.cc\",\n    \"cwise_op_maximum.cc\",\n    \"cwise_op_minimum.cc\",\n    \"cwise_op_mod.cc\",\n    \"cwise_op_mul_1.cc\",\n    \"cwise_op_mul_2.cc\",\n    \"cwise_op_neg_1.cc\",\n    \"cwise_op_neg_2.cc\",\n    \"cwise_op_not_equal_to_1.cc\",\n    \"cwise_op_not_equal_to_2.cc\",\n    \"cwise_op_pow.cc\",\n    \"cwise_op_round.cc\",\n    \"cwise_op_rsqrt.cc\",\n    \"cwise_op_select.cc\",\n    \"cwise_op_sigmoid.cc\",\n    \"cwise_op_sin.cc\",\n    \"cwise_op_sign.cc\",\n    \"cwise_op_sqrt.cc\",\n    \"cwise_op_square.cc\",\n    \"cwise_op_squared_difference.cc\",\n    \"cwise_op_sub.cc\",\n    \"cwise_op_tanh.cc\",\n    \"dequantize_op.cc\",\n    \"ops_testutil.h\",\n    \"quantize_and_dequantize_op.cc\",\n    \"quantize_op.cc\",\n    \"sparse_cross_op.cc\",\n    \"sparse_fill_empty_rows_op.cc\",\n    \"sparse_reshape_op.cc\",\n    \"unary_ops_composition.cc\",\n])\n\ntf_kernel_library(\n    name = \"sobol_op\",\n    srcs = [\n        \"sobol_op.cc\",\n    ],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//third_party/eigen3\",\n        \"@sobol_data\",\n    ],\n)\n\n# ---- temporary forwarding declaration for libraries in linalg\n# TODO(b/160344057): Remove after updating dependencies.\ntf_kernel_library(\n    name = \"matrix_inverse_op\",\n    deps = [\"//tensorflow/core/kernels/linalg:matrix_inverse_op\"],\n)\n\ntf_kernel_library(\n    name = \"einsum_op\",\n    deps = [\"//tensorflow/core/kernels/linalg:einsum_op\"],\n)\n\ntf_kernel_library(\n    name = \"isotonic_regression_op\",\n    srcs = [\n        \"isotonic_regression_op.cc\",\n    ],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//third_party/eigen3\",\n    ],\n)\n\ntf_cc_test(\n    name = \"isotonic_regression_op_test\",\n    size = \"small\",\n    srcs = [\"isotonic_regression_op_test.cc\"],\n    deps = [\n        \":isotonic_regression_op\",\n        \":ops_testutil\",\n        \":ops_util\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_kernel_library(\n    name = \"filesystem_ops\",\n    srcs = [\"filesystem_ops.cc\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)"