"diff --git a/tensorflow/python/ops/summary_ops_v2.py b/tensorflow/python/ops/summary_ops_v2.py\nindex cc7f3aba23c..6ec42f486b1 100644\n--- a/tensorflow/python/ops/summary_ops_v2.py\n+++ b/tensorflow/python/ops/summary_ops_v2.py\n@@ -1111,12 +1111,35 @@ def flush(writer=None, name=None):\n   Returns:\n     The created `tf.Operation`.\n   \"\"\"\n+  del name  # unused\n   if writer is None:\n     writer = _summary_state.writer\n     if writer is None:\n       return control_flow_ops.no_op()\n   if isinstance(writer, SummaryWriter):\n     return writer.flush()\n+  raise ValueError(\"Invalid argument to flush(): %r\" % (writer,))\n+\n+\n+def legacy_raw_flush(writer=None, name=None):\n+  \"\"\"Legacy version of flush() that accepts a raw resource tensor for `writer`.\n+\n+  Do not use this function in any new code. Not supported and not part of the\n+  public TF APIs.\n+\n+  Args:\n+    writer: The `tf.summary.SummaryWriter` to flush. If None, the current\n+      default writer will be used instead; if there is no current writer, this\n+      returns `tf.no_op`. For this legacy version only, also accepts a raw\n+      resource tensor pointing to the underlying C++ writer resource.\n+    name: Ignored legacy argument for a name for the operation.\n+\n+  Returns:\n+    The created `tf.Operation`.\n+  \"\"\"\n+  if writer is None or isinstance(writer, SummaryWriter):\n+    # Forward to the TF2 implementation of flush() when possible.\n+    return flush(writer, name)\n   else:\n     # Legacy fallback in case we were passed a raw resource tensor.\n     with ops.device(\"cpu:0\"):"