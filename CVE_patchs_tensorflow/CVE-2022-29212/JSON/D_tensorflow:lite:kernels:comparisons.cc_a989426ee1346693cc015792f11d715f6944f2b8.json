"diff --git a/tensorflow/lite/kernels/comparisons.cc b/tensorflow/lite/kernels/comparisons.cc\nindex d0a1876c5c6..c3824c1db01 100644\n--- a/tensorflow/lite/kernels/comparisons.cc\n+++ b/tensorflow/lite/kernels/comparisons.cc\n@@ -81,6 +81,17 @@ TfLiteStatus ComparisonPrepareStringAllowed(TfLiteContext* context,\n   return ComparisonPrepareCommon(context, node, true);\n }\n \n+void QuantizeMultiplier(double double_multiplier, int32_t* quantized_multiplier,\n+                        int* left_shift) {\n+  if (double_multiplier < 1.0) {\n+    QuantizeMultiplierSmallerThanOneExp(double_multiplier, quantized_multiplier,\n+                                        left_shift);\n+  } else {\n+    QuantizeMultiplierGreaterThanOne(double_multiplier, quantized_multiplier,\n+                                     left_shift);\n+  }\n+}\n+\n template <typename input_dtype, reference_ops::ComparisonFn<int32> opname>\n void ComparisonQuantized(const TfLiteTensor* input1, const TfLiteTensor* input2,\n                          TfLiteTensor* output, bool requires_broadcast) {\n@@ -90,13 +101,11 @@ void ComparisonQuantized(const TfLiteTensor* input1, const TfLiteTensor* input2,\n     const int left_shift = 8;\n \n     int32 input1_multiplier;\n-    int input1_shift;\n-    QuantizeMultiplierSmallerThanOneExp(input1->params.scale,\n-                                        &input1_multiplier, &input1_shift);\n     int32 input2_multiplier;\n+    int input1_shift;\n     int input2_shift;\n-    QuantizeMultiplierSmallerThanOneExp(input2->params.scale,\n-                                        &input2_multiplier, &input2_shift);\n+    QuantizeMultiplier(input1->params.scale, &input1_multiplier, &input1_shift);\n+    QuantizeMultiplier(input2->params.scale, &input2_multiplier, &input2_shift);\n \n     ComparisonParams op_params;\n     op_params.left_shift = left_shift;"