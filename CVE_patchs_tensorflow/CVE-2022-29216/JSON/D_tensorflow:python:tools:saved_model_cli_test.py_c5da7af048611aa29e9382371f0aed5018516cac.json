"diff --git a/tensorflow/python/tools/saved_model_cli_test.py b/tensorflow/python/tools/saved_model_cli_test.py\nindex 61ee8e31c9e..e124ae07a76 100644\n--- a/tensorflow/python/tools/saved_model_cli_test.py\n+++ b/tensorflow/python/tools/saved_model_cli_test.py\n@@ -486,43 +486,6 @@ Concrete Functions:\n     self.assertTrue(np.all(feed_dict['y'] == pkl1))\n     self.assertTrue(np.all(feed_dict['z'] == pkl2))\n \n-  def testInputParserPythonExpression(self):\n-    x1 = np.ones([2, 10])\n-    x2 = np.array([[1], [2], [3]])\n-    x3 = np.mgrid[0:5, 0:5]\n-    x4 = [[3], [4]]\n-    input_expr_str = ('x1=np.ones([2,10]);x2=np.array([[1],[2],[3]]);'\n-                      'x3=np.mgrid[0:5,0:5];x4=[[3],[4]]')\n-    feed_dict = saved_model_cli.load_inputs_from_input_arg_string(\n-        '', input_expr_str, '')\n-    self.assertTrue(np.all(feed_dict['x1'] == x1))\n-    self.assertTrue(np.all(feed_dict['x2'] == x2))\n-    self.assertTrue(np.all(feed_dict['x3'] == x3))\n-    self.assertTrue(np.all(feed_dict['x4'] == x4))\n-\n-  def testInputParserBoth(self):\n-    x0 = np.array([[1], [2]])\n-    input_path = os.path.join(test.get_temp_dir(), 'input.npz')\n-    np.savez(input_path, a=x0)\n-    x1 = np.ones([2, 10])\n-    input_str = 'x0=' + input_path + '[a]'\n-    input_expr_str = 'x1=np.ones([2,10])'\n-    feed_dict = saved_model_cli.load_inputs_from_input_arg_string(\n-        input_str, input_expr_str, '')\n-    self.assertTrue(np.all(feed_dict['x0'] == x0))\n-    self.assertTrue(np.all(feed_dict['x1'] == x1))\n-\n-  def testInputParserBothDuplicate(self):\n-    x0 = np.array([[1], [2]])\n-    input_path = os.path.join(test.get_temp_dir(), 'input.npz')\n-    np.savez(input_path, a=x0)\n-    x1 = np.ones([2, 10])\n-    input_str = 'x0=' + input_path + '[a]'\n-    input_expr_str = 'x0=np.ones([2,10])'\n-    feed_dict = saved_model_cli.load_inputs_from_input_arg_string(\n-        input_str, input_expr_str, '')\n-    self.assertTrue(np.all(feed_dict['x0'] == x1))\n-\n   def testInputParserErrorNoName(self):\n     x0 = np.array([[1], [2]])\n     x1 = np.array(range(5))\n@@ -629,7 +592,7 @@ Concrete Functions:\n     base_path = test.test_src_dir_path(SAVED_MODEL_PATH)\n     args = self.parser.parse_args([\n         'run', '--dir', base_path, '--tag_set', 'serve', '--signature_def',\n-        'regress_x2_to_y3', '--input_exprs', 'x2=np.ones((3,1))'\n+        'regress_x2_to_y3', '--input_exprs', 'x2=[1,2,3]'\n     ] + (['--use_tfrt'] if use_tfrt else []))\n     with self.assertRaises(ValueError):\n       saved_model_cli.run(args)\n@@ -640,7 +603,7 @@ Concrete Functions:\n     base_path = test.test_src_dir_path(SAVED_MODEL_PATH)\n     args = self.parser.parse_args([\n         'run', '--dir', base_path, '--tag_set', 'serve', '--signature_def',\n-        'INVALID_SIGNATURE', '--input_exprs', 'x2=np.ones((3,1))'\n+        'INVALID_SIGNATURE', '--input_exprs', 'x2=[1,2,3]'\n     ] + (['--use_tfrt'] if use_tfrt else []))\n     with self.assertRaisesRegex(ValueError,\n                                 'Could not find signature \"INVALID_SIGNATURE\"'):"