"diff --git a/tensorflow/lite/kernels/scatter_nd.cc b/tensorflow/lite/kernels/scatter_nd.cc\nindex ab02a206fd1..c5aab584093 100644\n--- a/tensorflow/lite/kernels/scatter_nd.cc\n+++ b/tensorflow/lite/kernels/scatter_nd.cc\n@@ -129,11 +129,10 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n template <typename IndicesT, typename UpdatesT>\n TfLiteStatus ScatterNd(const TfLiteTensor* indices, const TfLiteTensor* updates,\n                        TfLiteTensor* output) {\n-  reference_ops::ScatterNd(\n+  return reference_ops::ScatterNd(\n       GetTensorShape(indices), GetTensorData<IndicesT>(indices),\n       GetTensorShape(updates), GetTensorData<UpdatesT>(updates),\n       GetTensorShape(output), GetTensorData<UpdatesT>(output));\n-  return kTfLiteOk;\n }\n \n template <typename IndicesT>\n@@ -149,25 +148,36 @@ TfLiteStatus EvalScatterNd(TfLiteContext* context, const TfLiteTensor* indices,\n                       ResizeOutputTensor<IndicesT>(context, shape, output));\n   }\n \n+  TfLiteStatus status = kTfLiteError;\n   switch (updates->type) {\n     case kTfLiteFloat32:\n-      return ScatterNd<IndicesT, float>(indices, updates, output);\n+      status = ScatterNd<IndicesT, float>(indices, updates, output);\n+      break;\n     case kTfLiteUInt8:\n-      return ScatterNd<IndicesT, uint8_t>(indices, updates, output);\n+      status = ScatterNd<IndicesT, uint8_t>(indices, updates, output);\n+      break;\n     case kTfLiteBool:\n-      return ScatterNd<IndicesT, bool>(indices, updates, output);\n+      status = ScatterNd<IndicesT, bool>(indices, updates, output);\n+      break;\n     case kTfLiteInt8:\n-      return ScatterNd<IndicesT, int8_t>(indices, updates, output);\n+      status = ScatterNd<IndicesT, int8_t>(indices, updates, output);\n+      break;\n     case kTfLiteInt32:\n-      return ScatterNd<IndicesT, int32_t>(indices, updates, output);\n+      status = ScatterNd<IndicesT, int32_t>(indices, updates, output);\n+      break;\n     case kTfLiteInt64:\n-      return ScatterNd<IndicesT, int64_t>(indices, updates, output);\n+      status = ScatterNd<IndicesT, int64_t>(indices, updates, output);\n+      break;\n     default:\n       TF_LITE_KERNEL_LOG(\n           context, \"Updates of type '%s' are not supported by scatter_nd.\",\n           TfLiteTypeGetName(updates->type));\n       return kTfLiteError;\n   }\n+  if (status != kTfLiteOk) {\n+    TF_LITE_KERNEL_LOG(context, \"scatter_nd index out of bounds\");\n+  }\n+  return status;\n }\n \n TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {"