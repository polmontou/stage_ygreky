"diff --git a/tensorflow/core/kernels/rnn/lstm_ops.cc b/tensorflow/core/kernels/rnn/lstm_ops.cc\nindex ab4b9c695a5..b0a27c1914a 100644\n--- a/tensorflow/core/kernels/rnn/lstm_ops.cc\n+++ b/tensorflow/core/kernels/rnn/lstm_ops.cc\n@@ -1138,19 +1138,30 @@ class BlockLSTMGradOp : public OpKernel {\n \n     const Tensor* x;\n     OP_REQUIRES_OK(ctx, ctx->input(\"x\", &x));\n-    OP_REQUIRES(ctx, x->dims() == 3, errors::InvalidArgument(\"x must be 3D\"));\n+    OP_REQUIRES(\n+        ctx, x->dims() == 3,\n+        errors::InvalidArgument(\"x must be rank 3 but is rank \", x->dims()));\n     const int64_t timelen = x->dim_size(0);\n     const int64_t batch_size = x->dim_size(1);\n     const int64_t input_size = x->dim_size(2);\n \n     const Tensor* cs_prev_tensor = nullptr;\n     OP_REQUIRES_OK(ctx, ctx->input(\"cs_prev\", &cs_prev_tensor));\n+    OP_REQUIRES(ctx, cs_prev_tensor->dims() == 2,\n+                errors::InvalidArgument(\"cs_prev must be rank 2 but is rank \",\n+                                        cs_prev_tensor->dims()));\n \n     const Tensor* h_prev_tensor = nullptr;\n     OP_REQUIRES_OK(ctx, ctx->input(\"h_prev\", &h_prev_tensor));\n+    OP_REQUIRES(ctx, h_prev_tensor->dims() == 2,\n+                errors::InvalidArgument(\"h_prev must be rank 2 but is rank \",\n+                                        h_prev_tensor->dims()));\n \n     const Tensor* w_tensor = nullptr;\n     OP_REQUIRES_OK(ctx, ctx->input(\"w\", &w_tensor));\n+    OP_REQUIRES(ctx, w_tensor->dims() == 2,\n+                errors::InvalidArgument(\"w must be rank 2 but is rank \",\n+                                        w_tensor->dims()));\n     const int64_t cell_size = w_tensor->dim_size(1) / 4;\n     OP_REQUIRES(ctx, input_size + cell_size == w_tensor->dim_size(0),\n                 errors::InvalidArgument(\n@@ -1159,15 +1170,27 @@ class BlockLSTMGradOp : public OpKernel {\n \n     const Tensor* wci_tensor = nullptr;\n     OP_REQUIRES_OK(ctx, ctx->input(\"wci\", &wci_tensor));\n+    OP_REQUIRES(ctx, wci_tensor->dims() == 1,\n+                errors::InvalidArgument(\"wci must be rank 1 but is rank \",\n+                                        wci_tensor->dims()));\n \n     const Tensor* wcf_tensor = nullptr;\n     OP_REQUIRES_OK(ctx, ctx->input(\"wcf\", &wcf_tensor));\n+    OP_REQUIRES(ctx, wcf_tensor->dims() == 1,\n+                errors::InvalidArgument(\"wcf must be rank 1 but is rank \",\n+                                        wcf_tensor->dims()));\n \n     const Tensor* wco_tensor = nullptr;\n     OP_REQUIRES_OK(ctx, ctx->input(\"wco\", &wco_tensor));\n+    OP_REQUIRES(ctx, wco_tensor->dims() == 1,\n+                errors::InvalidArgument(\"wco must be rank 1 but is rank \",\n+                                        wco_tensor->dims()));\n \n     const Tensor* b_tensor = nullptr;\n     OP_REQUIRES_OK(ctx, ctx->input(\"b\", &b_tensor));\n+    OP_REQUIRES(ctx, b_tensor->dims() == 1,\n+                errors::InvalidArgument(\"b must be rank 1 but is rank \",\n+                                        b_tensor->dims()));\n     OP_REQUIRES(\n         ctx, cell_size == b_tensor->dim_size(0) / 4,\n         errors::InvalidArgument(\"w and b cell_size don't match: \", cell_size,"