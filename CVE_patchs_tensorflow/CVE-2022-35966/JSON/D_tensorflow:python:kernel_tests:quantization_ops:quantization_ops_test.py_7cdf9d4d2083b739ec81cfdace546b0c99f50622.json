"diff --git a/tensorflow/python/kernel_tests/quantization_ops/quantization_ops_test.py b/tensorflow/python/kernel_tests/quantization_ops/quantization_ops_test.py\nindex 708edf71a6b..4c6d9974c1f 100644\n--- a/tensorflow/python/kernel_tests/quantization_ops/quantization_ops_test.py\n+++ b/tensorflow/python/kernel_tests/quantization_ops/quantization_ops_test.py\n@@ -154,6 +154,72 @@ class QuantizedInstanceNormOpTest(test_util.TensorFlowTestCase):\n               x=inputs, x_min=[[1.0], [2.0], [4.0]], x_max=1.0))\n \n \n+class QuantizedAvgPoolingOpTest(test_util.TensorFlowTestCase):\n+\n+  @test_util.run_in_graph_and_eager_modes\n+  def test_invalid_inputs(self):\n+    inputs = constant_op.constant(\n+        np.uint8(0), shape=[3, 3, 3, 3], dtype=dtypes.quint8)\n+    ksize = [1, 1, 1, 1]\n+    strides = [1, 1, 1, 1]\n+    padding = \"SAME\"\n+\n+    with self.assertRaisesRegex((errors.InvalidArgumentError, ValueError),\n+                                \"must be.* rank 0\"):\n+      self.evaluate(\n+          nn_ops.quantized_avg_pool(\n+              input=inputs,\n+              min_input=[],\n+              max_input=1.0,\n+              ksize=ksize,\n+              strides=strides,\n+              padding=padding))\n+\n+    with self.assertRaisesRegex((errors.InvalidArgumentError, ValueError),\n+                                \"must be.* rank 0\"):\n+      self.evaluate(\n+          nn_ops.quantized_avg_pool(\n+              input=inputs,\n+              min_input=0.0,\n+              max_input=[],\n+              ksize=ksize,\n+              strides=strides,\n+              padding=padding))\n+\n+\n+class QuantizedMaxPoolingOpTest(test_util.TensorFlowTestCase):\n+\n+  @test_util.run_in_graph_and_eager_modes\n+  def test_invalid_inputs(self):\n+    inputs = constant_op.constant(\n+        np.uint8(0), shape=[3, 3, 3, 3], dtype=dtypes.quint8)\n+    ksize = [1, 1, 1, 1]\n+    strides = [1, 1, 1, 1]\n+    padding = \"SAME\"\n+\n+    with self.assertRaisesRegex((errors.InvalidArgumentError, ValueError),\n+                                \"must be.* rank 0\"):\n+      self.evaluate(\n+          nn_ops.quantized_max_pool(\n+              input=inputs,\n+              min_input=[],\n+              max_input=1.0,\n+              ksize=ksize,\n+              strides=strides,\n+              padding=padding))\n+\n+    with self.assertRaisesRegex((errors.InvalidArgumentError, ValueError),\n+                                \"must be.* rank 0\"):\n+      self.evaluate(\n+          nn_ops.quantized_max_pool(\n+              input=inputs,\n+              min_input=0.0,\n+              max_input=[],\n+              ksize=ksize,\n+              strides=strides,\n+              padding=padding))\n+\n+\n class RequantizeOpTest(test_util.TensorFlowTestCase):\n \n   @test_util.run_in_graph_and_eager_modes"