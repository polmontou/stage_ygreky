"diff --git a/tensorflow/core/kernels/quantized_instance_norm.cc b/tensorflow/core/kernels/quantized_instance_norm.cc\nindex 4fd967fe3fc..405c6aa95bb 100644\n--- a/tensorflow/core/kernels/quantized_instance_norm.cc\n+++ b/tensorflow/core/kernels/quantized_instance_norm.cc\n@@ -25,7 +25,7 @@ limitations under the License.\n #include \"tensorflow/core/framework/op_kernel.h\"\n #include \"tensorflow/core/framework/register_types.h\"\n #include \"tensorflow/core/framework/tensor.h\"\n-\n+#include \"tensorflow/core/framework/tensor_shape.h\"\n #include \"tensorflow/core/kernels/quantization_utils.h\"\n \n #ifdef USE_NEON\n@@ -274,8 +274,16 @@ class QuantizedInstanceNorm : public OpKernel {\n   void Compute(OpKernelContext* context) override {\n     const Tensor& input = context->input(0);\n \n-    float input_min = context->input(1).flat<float>()(0);\n-    float input_max = context->input(2).flat<float>()(0);\n+    const Tensor& x_min = context->input(1);\n+    const Tensor& x_max = context->input(2);\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(x_min.shape()),\n+                errors::InvalidArgument(\"`x_min` must be rank 0 but is rank \",\n+                                        x_min.dims()));\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(x_max.shape()),\n+                errors::InvalidArgument(\"`x_max` must be rank 0 but is rank \",\n+                                        x_max.dims()));\n+    float input_min = x_min.scalar<float>()();\n+    float input_max = x_max.scalar<float>()();\n     float input_scale = (input_max - input_min) / 255.0f;\n \n     OP_REQUIRES(context, input_min < input_max,"