"diff --git a/tensorflow/python/kernel_tests/quantization_ops/quantization_ops_test.py b/tensorflow/python/kernel_tests/quantization_ops/quantization_ops_test.py\nindex af7cecf2ffb..8be78a0e0b2 100644\n--- a/tensorflow/python/kernel_tests/quantization_ops/quantization_ops_test.py\n+++ b/tensorflow/python/kernel_tests/quantization_ops/quantization_ops_test.py\n@@ -206,5 +206,60 @@ class RequantizeOpTest(test_util.TensorFlowTestCase):\n               out_type=dtypes.qint8))\n \n \n+class QuantizedAddOpTest(test_util.TensorFlowTestCase):\n+\n+  @test_util.run_in_graph_and_eager_modes\n+  def test_invalid_inputs(self):\n+    x = constant_op.constant(\n+        np.int8(0), shape=[3, 3, 3, 3], dtype=dtypes.quint8)\n+    y = constant_op.constant(np.int8(0), shape=[3], dtype=dtypes.quint8)\n+\n+    with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),\n+                                \"must be rank 0\"):\n+      self.evaluate(\n+          math_ops.quantized_add(\n+              x=x,\n+              y=y,\n+              min_x=[],\n+              max_x=1.0,\n+              min_y=0.0,\n+              max_y=1.0,\n+              Toutput=dtypes.qint32))\n+\n+\n+class QuantizedReluOpTest(test_util.TensorFlowTestCase):\n+\n+  @test_util.run_in_graph_and_eager_modes\n+  def test_invalid_inputs(self):\n+    inputs = constant_op.constant(\n+        np.int8(0), shape=[3, 3, 3, 3], dtype=dtypes.quint8)\n+\n+    with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),\n+                                \"must be rank 0\"):\n+      self.evaluate(\n+          nn_ops.quantized_relu(\n+              features=inputs,\n+              min_features=[],\n+              max_features=127.0,\n+              out_type=dtypes.quint8))\n+\n+\n+class QuantizedRelu6OpTest(test_util.TensorFlowTestCase):\n+\n+  @test_util.run_in_graph_and_eager_modes\n+  def test_invalid_inputs(self):\n+    inputs = constant_op.constant(\n+        np.int8(0), shape=[3, 3, 3, 3], dtype=dtypes.quint8)\n+\n+    with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),\n+                                \"must be rank 0\"):\n+      self.evaluate(\n+          nn_ops.quantized_relu6(\n+              features=inputs,\n+              min_features=[],\n+              max_features=127.0,\n+              out_type=dtypes.quint8))\n+\n+\n if __name__ == \"__main__\":\n   googletest.main()"