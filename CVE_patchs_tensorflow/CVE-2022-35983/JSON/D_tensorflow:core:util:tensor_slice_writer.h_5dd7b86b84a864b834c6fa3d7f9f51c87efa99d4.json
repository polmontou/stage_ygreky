"diff --git a/tensorflow/core/util/tensor_slice_writer.h b/tensorflow/core/util/tensor_slice_writer.h\nindex 3436966866a..34aa7c0b916 100644\n--- a/tensorflow/core/util/tensor_slice_writer.h\n+++ b/tensorflow/core/util/tensor_slice_writer.h\n@@ -68,6 +68,8 @@ class TensorSliceWriter {\n   static size_t MaxBytesPerElement(DataType dt);\n \n  private:\n+  static size_t MaxBytesPerElementOrZero(DataType dt);\n+\n   static constexpr size_t kMaxMessageBytes = 1LL << 31;\n   // Filling in the TensorProto in a SavedSlice will add the following\n   // header bytes, in addition to the data:\n@@ -162,9 +164,15 @@ Status TensorSliceWriter::Add(const string& name, const TensorShape& shape,\n template <typename T>\n Status TensorSliceWriter::SaveData(const T* data, int64_t num_elements,\n                                    SavedSlice* ss) {\n-  size_t size_bound =\n-      ss->ByteSize() + kTensorProtoHeaderBytes +\n-      (MaxBytesPerElement(DataTypeToEnum<T>::value) * num_elements);\n+  size_t max_bytes_per_element =\n+      MaxBytesPerElementOrZero(DataTypeToEnum<T>::value);\n+  if (max_bytes_per_element == 0) {\n+    return errors::InvalidArgument(\n+        \"Tensor slice serialization not implemented for dtype \",\n+        DataTypeToEnum<T>::value);\n+  }\n+  size_t size_bound = ss->ByteSize() + kTensorProtoHeaderBytes +\n+                      (max_bytes_per_element * num_elements);\n   if (size_bound > kMaxMessageBytes) {\n     return errors::InvalidArgument(\n         \"Tensor slice is too large to serialize (conservative estimate: \","