"diff --git a/tensorflow/python/kernel_tests/math_ops/bincount_op_test.py b/tensorflow/python/kernel_tests/math_ops/bincount_op_test.py\nindex 44213ca4051..a000d777681 100644\n--- a/tensorflow/python/kernel_tests/math_ops/bincount_op_test.py\n+++ b/tensorflow/python/kernel_tests/math_ops/bincount_op_test.py\n@@ -24,6 +24,7 @@ from tensorflow.python.framework import test_util\n from tensorflow.python.ops import array_ops\n from tensorflow.python.ops import bincount_ops\n from tensorflow.python.ops import gen_math_ops\n+from tensorflow.python.ops import random_ops\n from tensorflow.python.ops import sparse_ops\n from tensorflow.python.ops.ragged import ragged_factory_ops\n from tensorflow.python.ops.ragged import ragged_tensor\n@@ -152,6 +153,31 @@ class BincountTest(test_util.TensorFlowTestCase):\n       v2 = gen_math_ops.bincount([1, 2, 3, 1, 6, 8], s, [])\n       self.assertAllEqual(v2.get_shape().as_list(), [None])\n \n+  @test_util.run_in_graph_and_eager_modes\n+  def test_invalid_inputs(self):\n+    binary_output = True\n+    inp = random_ops.random_uniform(\n+        shape=[10, 10],\n+        minval=-10000,\n+        maxval=10000,\n+        dtype=dtypes.int32,\n+        seed=-2460)\n+    size = random_ops.random_uniform(\n+        shape=[], minval=-10000, maxval=10000, dtype=dtypes.int32, seed=-10000)\n+    weights = random_ops.random_uniform(\n+        shape=[],\n+        minval=-10000,\n+        maxval=10000,\n+        dtype=dtypes.float32,\n+        seed=-10000)\n+    with self.assertRaises(errors.InvalidArgumentError):\n+      self.evaluate(\n+          gen_math_ops.dense_bincount(\n+              input=inp,\n+              size=size,\n+              weights=weights,\n+              binary_output=binary_output))\n+\n \n class BincountOpTest(test_util.TensorFlowTestCase, parameterized.TestCase):\n "