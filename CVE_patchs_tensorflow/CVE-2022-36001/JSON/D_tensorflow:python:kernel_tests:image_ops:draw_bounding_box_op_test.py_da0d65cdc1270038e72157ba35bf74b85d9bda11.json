"diff --git a/tensorflow/python/kernel_tests/image_ops/draw_bounding_box_op_test.py b/tensorflow/python/kernel_tests/image_ops/draw_bounding_box_op_test.py\nindex 5b695e86113..91fcd935168 100644\n--- a/tensorflow/python/kernel_tests/image_ops/draw_bounding_box_op_test.py\n+++ b/tensorflow/python/kernel_tests/image_ops/draw_bounding_box_op_test.py\n@@ -50,11 +50,16 @@ class DrawBoundingBoxOpTest(test.TestCase):\n     image[height - 1, 0:width, 0:depth] = color\n     return image\n \n-  def _testDrawBoundingBoxColorCycling(self, img, colors=None):\n+  def _testDrawBoundingBoxColorCycling(self,\n+                                       img,\n+                                       dtype=dtypes.float32,\n+                                       colors=None):\n     \"\"\"Tests if cycling works appropriately.\n \n     Args:\n       img: 3-D numpy image on which to draw.\n+      dtype: image dtype (float, half).\n+      colors: color table.\n     \"\"\"\n     color_table = colors\n     if colors is None:\n@@ -82,7 +87,7 @@ class DrawBoundingBoxOpTest(test.TestCase):\n       bboxes = math_ops.cast(bboxes, dtypes.float32)\n       bboxes = array_ops.expand_dims(bboxes, 0)\n       image = ops.convert_to_tensor(image)\n-      image = image_ops_impl.convert_image_dtype(image, dtypes.float32)\n+      image = image_ops_impl.convert_image_dtype(image, dtype)\n       image = array_ops.expand_dims(image, 0)\n       image = image_ops.draw_bounding_boxes(image, bboxes, colors=colors)\n       with self.cached_session(use_gpu=False) as sess:\n@@ -118,6 +123,14 @@ class DrawBoundingBoxOpTest(test.TestCase):\n                          [0, 0, 0.5, 1]])\n     self._testDrawBoundingBoxColorCycling(image, colors=colors)\n \n+  def testDrawBoundingBoxHalf(self):\n+    \"\"\"Test if RGBA color cycling works correctly with provided colors.\"\"\"\n+    image = np.zeros([10, 10, 4], \"float32\")\n+    colors = np.asarray([[0.5, 0, 0.5, 1], [0.5, 0.5, 0, 1], [0.5, 0, 0, 1],\n+                         [0, 0, 0.5, 1]])\n+    self._testDrawBoundingBoxColorCycling(\n+        image, dtype=dtypes.half, colors=colors)\n+\n \n if __name__ == \"__main__\":\n   test.main()"