"diff --git a/tensorflow/python/ops/batch_ops_test.py b/tensorflow/python/ops/batch_ops_test.py\nindex 8fae09a7911..15a1a71a93b 100644\n--- a/tensorflow/python/ops/batch_ops_test.py\n+++ b/tensorflow/python/ops/batch_ops_test.py\n@@ -236,6 +236,26 @@ class BatchOpsTest(test.TestCase):\n       self.assertEqual(thread_results[0], [2])\n       self.assertEqual(main_results[0], [3])\n \n+  def testUnbatchInvalidIdArg(self):\n+    \"\"\"Tests that unbatch work together.\"\"\"\n+    if context.executing_eagerly():\n+      batched_tensor = constant_op.constant(\n+          value=np.random.random(size=(3, 3, 1)), dtype=dtypes.float64)\n+      batched_index = constant_op.constant(\n+          value=np.random.randint(0, 100, size=(3, 3, 1)), dtype=dtypes.int64)\n+      arg_id = constant_op.constant(\n+          value=np.random.randint(0, 100, size=(3, 3, 1)), dtype=dtypes.int64)\n+\n+      with self.assertRaisesRegex(errors.InvalidArgumentError,\n+                                  \"Input id should be scalar;\"):\n+        batch_ops.unbatch(\n+            batched_tensor=batched_tensor,\n+            batch_index=batched_index,\n+            id=arg_id,\n+            timeout_micros=50,\n+            container=\"\",\n+            shared_name=\"\")\n+\n   def testBatchDecoratedWithCapturedInput(self):\n     \"\"\"Tests that the batch_function decorator works.\"\"\"\n     if context.executing_eagerly():"