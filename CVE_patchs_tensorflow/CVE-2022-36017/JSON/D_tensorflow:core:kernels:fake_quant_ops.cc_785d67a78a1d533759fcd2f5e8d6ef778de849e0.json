"diff --git a/tensorflow/core/kernels/fake_quant_ops.cc b/tensorflow/core/kernels/fake_quant_ops.cc\nindex aa59213c67d..b8c31701a61 100644\n--- a/tensorflow/core/kernels/fake_quant_ops.cc\n+++ b/tensorflow/core/kernels/fake_quant_ops.cc\n@@ -24,6 +24,7 @@ limitations under the License.\n // Above is the related header but clang tidy doesn't recognize it.\n #include \"tensorflow/core/framework/numeric_op.h\"\n #include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/framework/tensor_shape.h\"\n #include \"tensorflow/core/lib/core/errors.h\"\n #include \"tensorflow/core/lib/monitoring/gauge.h\"\n #include \"tensorflow/core/platform/protobuf.h\"\n@@ -205,6 +206,13 @@ class FakeQuantWithMinMaxVarsOp : public OpKernel {\n     const Tensor& min = context->input(1);\n     const Tensor& max = context->input(2);\n \n+    OP_REQUIRES(\n+        context, TensorShapeUtils::IsScalar(min.shape()),\n+        InvalidArgument(\"`min` must be rank 0 but is rank \", min.dims()));\n+    OP_REQUIRES(\n+        context, TensorShapeUtils::IsScalar(max.shape()),\n+        InvalidArgument(\"`max` must be rank 0 but is rank \", max.dims()));\n+\n     Tensor* output;\n     OP_REQUIRES_OK(context,\n                    context->allocate_output(0, input.shape(), &output));\n@@ -342,10 +350,17 @@ class FakeQuantWithMinMaxVarsPerChannelOp : public OpKernel {\n     const Tensor& input = context->input(0);\n     const int depth = input.dim_size(input.dims() - 1);  // last dimension size.\n     const Tensor& min = context->input(1);\n+    const Tensor& max = context->input(2);\n+\n+    OP_REQUIRES(\n+        context, TensorShapeUtils::IsVector(min.shape()),\n+        InvalidArgument(\"`min` must be rank 1 but is rank \", min.dims()));\n     OP_REQUIRES(context, min.dim_size(0) == depth,\n                 InvalidArgument(\"min has incorrect size, expected \", depth,\n                                 \" was \", min.dim_size(0)));\n-    const Tensor& max = context->input(2);\n+    OP_REQUIRES(\n+        context, TensorShapeUtils::IsVector(max.shape()),\n+        InvalidArgument(\"`max` must be rank 1 but is rank \", max.dims()));\n     OP_REQUIRES(context, max.dim_size(0) == depth,\n                 InvalidArgument(\"max has incorrect size, expected \", depth,\n                                 \" was \", max.dim_size(0)));"