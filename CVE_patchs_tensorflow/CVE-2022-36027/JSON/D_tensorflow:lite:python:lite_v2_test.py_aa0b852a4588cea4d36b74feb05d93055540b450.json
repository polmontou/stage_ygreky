"diff --git a/tensorflow/lite/python/lite_v2_test.py b/tensorflow/lite/python/lite_v2_test.py\nindex bcdad1db9ed..b049832c7fc 100644\n--- a/tensorflow/lite/python/lite_v2_test.py\n+++ b/tensorflow/lite/python/lite_v2_test.py\n@@ -2311,6 +2311,44 @@ class FromSavedModelTest(lite_v2_test_util.ModelTest):\n         list(output_details[0]['shape_signature']),\n         list(model.layers[-1].output_shape))\n \n+  @test_util.run_v2_only\n+  def testKerasConv2DTransposedWithMismatchQuantizedAxes(self):\n+\n+    class QuantConv2DTransposed(tf.keras.layers.Layer):\n+\n+      def build(self, input_shape):\n+        self.kernel = self.add_weight('kernel', [3, 3, input_shape[-1], 24])\n+\n+      def call(self, inputs):\n+        filters = tf.quantization.fake_quant_with_min_max_vars_per_channel(\n+            self.kernel,\n+            -3.0 * tf.ones([24]),\n+            3.0 * tf.ones([24]),\n+            narrow_range=True)\n+        filters = tf.transpose(filters, (0, 1, 3, 2))\n+        return tf.nn.conv2d_transpose(inputs, filters, [*inputs.shape[:-1], 24],\n+                                      1)\n+\n+    inp = tf.keras.Input(shape=(6, 8, 48), batch_size=1)\n+    x = tf.quantization.fake_quant_with_min_max_vars(\n+        inp, -3.0, 3.0, narrow_range=True)\n+    x = QuantConv2DTransposed()(x)\n+    x = tf.quantization.fake_quant_with_min_max_vars(\n+        x, -3.0, 3.0, narrow_range=True)\n+\n+    model = tf.keras.Model(inp, x)\n+\n+    saved_model_dir = os.path.join(self.get_temp_dir(),\n+                                   'keras_conv2d_transpose')\n+    model.save(saved_model_dir)\n+    converter = tf.lite.TFLiteConverter.from_saved_model(saved_model_dir)\n+    converter.optimizations = [tf.lite.Optimize.DEFAULT]\n+\n+    with self.assertRaises(convert.ConverterError) as error:\n+      _ = converter.convert()\n+    self.assertIn('mismatched quantized axes of input and output',\n+                  str(error.exception))\n+\n   def _createModelWithInputShape(self, shape):\n     \"\"\"Create a simple SavedModel with a certain shape.\"\"\"\n     saved_model_dir = os.path.join(self.get_temp_dir(), 'input_shape_model')"