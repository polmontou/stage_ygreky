"# python/lib/core package\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"tf_python_pybind_extension\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"tf_py_test\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"tf_external_workspace_visible\")\n\n# buildifier: disable=same-origin-load\nload(\"//tensorflow:tensorflow.bzl\", \"get_compatible_with_portable\")\n\nvisibility = [\n    \"//engedu/ml/tf_from_scratch:__pkg__\",\n    \"//third_party/cloud_tpu/convergence_tools:__subpackages__\",\n    \"//third_party/mlperf:__subpackages__\",\n    \"//tensorflow:internal\",\n    \"//tensorflow/lite/toco/python:__pkg__\",\n    \"//tensorflow_models:__subpackages__\",\n    \"//tensorflow_model_optimization:__subpackages__\",\n    \"//third_party/py/cleverhans:__subpackages__\",\n    \"//third_party/py/launchpad:__subpackages__\",\n    \"//third_party/py/reverb:__subpackages__\",\n    \"//third_party/py/neural_structured_learning:__subpackages__\",\n    \"//third_party/py/tensorflow_examples:__subpackages__\",\n    \"//third_party/py/tf_agents:__subpackages__\",  # For benchmarks.\n    \"//third_party/py/tf_slim:__subpackages__\",\n    \"//third_party/py/tensorflow_docs:__subpackages__\",\n    \"//third_party/py/keras:__subpackages__\",\n]\n\npackage(\n    default_visibility = visibility,\n    licenses = [\"notice\"],\n)\n\ncc_library(\n    name = \"numpy_lib\",\n    srcs = [\"numpy.cc\"],\n    hdrs = [\"numpy.h\"],\n    deps = [\n        \"//third_party/py/numpy:headers\",\n        \"//third_party/python_runtime:headers\",\n    ],\n)\n\ncc_library(\n    name = \"bfloat16_lib\",\n    srcs = [\n        \"bfloat16.cc\",\n        \"float8_e4m3b11.cc\",\n    ],\n    hdrs = [\n        \"bfloat16.h\",\n        \"float8_e4m3b11.h\",\n    ],\n    deps = [\n        \":numpy_lib\",\n        \"//tensorflow/core/platform:logging\",\n        \"//tensorflow/core/platform:types\",\n        \"//third_party/eigen3\",\n        \"//third_party/python_runtime:headers\",  # build_cleaner: keep; DNR: b/35864863\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_bfloat16\",\n    srcs = [\"bfloat16_wrapper.cc\"],\n    hdrs = [\"bfloat16.h\"],\n    deps = [\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"ndarray_tensor_bridge\",\n    srcs = [\"ndarray_tensor_bridge.cc\"],\n    hdrs = [\"ndarray_tensor_bridge.h\"],\n    visibility = tf_external_workspace_visible(\n        visibility + [\n            \"//tensorflow:ndarray_tensor_allow_list\",\n        ],\n    ),\n    deps = [\n        \":bfloat16_lib\",\n        \":numpy_lib\",\n        \":py_util\",\n        \"//tensorflow/c:c_api_no_xla\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ncc_library(\n    name = \"py_exception_registry\",\n    srcs = [\"py_exception_registry.cc\"],\n    hdrs = [\"py_exception_registry.h\"],\n    deps = [\n        \"//tensorflow/c:tf_status_headers\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/python_runtime:headers\",\n    ],\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"pybind11_absl\",\n    hdrs = [\"pybind11_absl.h\"],\n    features = [\"-parse_headers\"],\n    visibility = tf_external_workspace_visible(visibility),\n    deps = [\n        \"//tensorflow/core/platform:stringpiece\",\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"pybind11_lib\",\n    hdrs = [\"pybind11_lib.h\"],\n    compatible_with = get_compatible_with_portable(),\n    features = [\"-parse_headers\"],\n    visibility = tf_external_workspace_visible(visibility),\n    deps = [\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"pybind11_status_headers\",\n    hdrs = [\n        \"py_exception_registry.h\",\n        \"pybind11_status.h\",\n        \"//tensorflow/c:headers\",\n        \"//tensorflow/c:tf_status_internal_headers\",\n        \"//tensorflow/c/eager:headers\",\n    ],\n    features = [\n        \"-parse_headers\",\n    ],\n    visibility = tf_external_workspace_visible(visibility),\n    deps = [\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/common_runtime:core_cpu_headers_lib\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"pybind11_status\",\n    hdrs = [\n        \"py_exception_registry.h\",\n        \"pybind11_status.h\",\n    ],\n    features = [\"-parse_headers\"],\n    visibility = tf_external_workspace_visible(visibility),\n    deps = [\n        \":pybind11_status_headers\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ncc_library(\n    name = \"pybind11_proto\",\n    hdrs = [\"pybind11_proto.h\"],\n    features = [\"-parse_headers\"],\n    visibility = tf_external_workspace_visible(visibility),\n    deps = [\n        \"@com_google_absl//absl/strings\",\n        \"@pybind11\",\n    ],\n)\n\nfilegroup(\n    name = \"py_exception_registry_hdr\",\n    srcs = [\n        \"py_exception_registry.h\",\n    ],\n    visibility = [\"//visibility:public\"],\n)\n\nfilegroup(\n    name = \"numpy_hdr\",\n    srcs = [\"numpy.h\"],\n)\n\nfilegroup(\n    name = \"safe_ptr_hdr\",\n    srcs = [\"safe_ptr.h\"],\n)\n\nfilegroup(\n    name = \"ndarray_tensor_hdr\",\n    srcs = [\"ndarray_tensor.h\"],\n)\n\nfilegroup(\n    name = \"basic_hdrs\",\n    srcs = [\n        \"bfloat16.h\",\n        \"ndarray_tensor.h\",\n        \"ndarray_tensor_bridge.h\",\n        \"numpy.h\",\n        \"py_exception_registry.h\",\n        \"pybind11_status.h\",\n        \"safe_ptr.h\",\n        \"safe_pyobject_ptr.h\",\n    ],\n)\n\ncc_library(\n    name = \"py_func_lib\",\n    srcs = [\"py_func.cc\"],\n    hdrs = [\"py_func.h\"],\n    deps = [\n        \":ndarray_tensor\",\n        \":ndarray_tensor_bridge\",\n        \":numpy_lib\",\n        \":py_util\",\n        \":safe_ptr\",\n        \"//tensorflow/c:tf_status_helper\",\n        \"//tensorflow/c/eager:c_api\",\n        \"//tensorflow/c/eager:tfe_context_internal\",\n        \"//tensorflow/c/eager:tfe_tensorhandle_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:script_ops_op_lib\",\n        \"//tensorflow/core/common_runtime/eager:context\",\n        \"//tensorflow/core/common_runtime/eager:tensor_handle\",\n        \"//tensorflow/python/eager:pywrap_tfe_lib\",\n        \"//third_party/py/numpy:headers\",\n        \"//third_party/python_runtime:headers\",\n    ],\n    alwayslink = 1,\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_py_func\",\n    srcs = [\"py_func_wrapper.cc\"],\n    deps = [\n        \"//tensorflow/python:py_func_headers_lib\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"safe_pyobject_ptr\",\n    srcs = [\"safe_pyobject_ptr.cc\"],\n    hdrs = [\"safe_pyobject_ptr.h\"],\n    deps = [\n        \"//third_party/python_runtime:headers\",\n    ],\n)\n\ncc_library(\n    name = \"safe_pyobject_ptr_required_hdrs\",\n    textual_hdrs = [\"safe_pyobject_ptr.h\"],\n)\n\ncc_library(\n    name = \"safe_ptr\",\n    srcs = [\n        \"safe_ptr.cc\",\n        \"//tensorflow/c/eager:headers\",\n    ],\n    hdrs = [\"safe_ptr.h\"],\n    deps = [\n        \":safe_pyobject_ptr\",\n        \"//tensorflow/c:c_api_no_xla\",\n        \"//third_party/python_runtime:headers\",\n    ],\n)\n\ncc_library(\n    name = \"ndarray_tensor_headers\",\n    hdrs = [\n        \"bfloat16.h\",\n        \"ndarray_tensor.h\",\n        \"ndarray_tensor_bridge.h\",\n        \"numpy.h\",\n        \"safe_ptr.h\",\n        \"safe_pyobject_ptr.h\",\n        \"//tensorflow/c:headers\",\n        \"//tensorflow/c/eager:headers\",\n    ],\n    features = [\n        \"-parse_headers\",\n    ],\n    visibility = tf_external_workspace_visible(visibility + [\n        \"//tensorflow:ndarray_tensor_allow_list\",\n    ]),\n    deps = [\n        \":numpy_lib\",\n        \"//tensorflow/c:pywrap_required_hdrs\",\n        \"//tensorflow/c:tf_status_headers\",\n        \"//tensorflow/core:framework_internal_headers_lib\",\n        \"//tensorflow/core/common_runtime:core_cpu_headers_lib\",\n        \"//third_party/py/numpy:headers\",\n        \"//third_party/python_runtime:headers\",\n    ],\n)\n\ncc_library(\n    name = \"ndarray_tensor\",\n    srcs = [\"ndarray_tensor.cc\"],\n    hdrs = [\"ndarray_tensor.h\"],\n    visibility = tf_external_workspace_visible(visibility + [\n        \"//tensorflow:ndarray_tensor_allow_list\",\n    ]),\n    deps = [\n        \":bfloat16_lib\",\n        \":ndarray_tensor_bridge\",\n        \":numpy_lib\",\n        \":safe_ptr\",\n        \"//tensorflow/c:c_api_internal\",\n        \"//tensorflow/c:tf_status_helper\",\n        \"//tensorflow/c:tf_tensor_internal\",\n        \"//tensorflow/c/eager:tfe_context_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ncc_library(\n    name = \"py_seq_tensor\",\n    srcs = [\"py_seq_tensor.cc\"],\n    hdrs = [\"py_seq_tensor.h\"],\n    features = [\"-parse_headers\"],\n    deps = [\n        \":ndarray_tensor\",\n        \":ndarray_tensor_bridge\",\n        \":numpy_lib\",\n        \":py_util\",\n        \":safe_ptr\",\n        \"//tensorflow/c:tensor_interface\",\n        \"//tensorflow/c:tf_tensor_internal\",\n        \"//tensorflow/c/eager:c_api_internal\",\n        \"//tensorflow/c/eager:tfe_context_internal\",\n        \"//tensorflow/c/eager:tfe_tensorhandle_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//third_party/python_runtime:headers\",  # build_cleaner: keep; DNR: b/35864863\n    ],\n)\n\ncc_library(\n    name = \"py_util\",\n    srcs = [\"py_util.cc\"],\n    hdrs = [\"py_util.h\"],\n    deps = [\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:script_ops_op_lib\",\n        \"//tensorflow/core/platform:logging\",\n        \"//third_party/python_runtime:headers\",\n    ],\n)\n\ntf_py_test(\n    name = \"bfloat16_test\",\n    size = \"small\",\n    srcs = [\"bfloat16_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \"//tensorflow/python:pywrap_tensorflow\",\n        \"//tensorflow/python/lib/io:lib\",\n        \"//tensorflow/python/platform:client_testlib\",\n    ],\n)"