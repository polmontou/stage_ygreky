"diff --git a/tensorflow/core/kernels/cwise_ops_common.h b/tensorflow/core/kernels/cwise_ops_common.h\nindex cdeb62cbedd..9bdc107f9f5 100644\n--- a/tensorflow/core/kernels/cwise_ops_common.h\n+++ b/tensorflow/core/kernels/cwise_ops_common.h\n@@ -450,13 +450,15 @@ struct BinaryFunctor<CPUDevice, Functor, 2, false> {\n     Assign(d, out, in.unaryExpr(Unary(scalar.data())));\n   }\n \n-  inline Eigen::IndexList<int, Eigen::type2index<1>> NByOne(int n) {\n-    Eigen::IndexList<int, Eigen::type2index<1>> ret;\n+  inline Eigen::IndexList<Eigen::DenseIndex, Eigen::type2index<1>> NByOne(\n+      Eigen::DenseIndex n) {\n+    Eigen::IndexList<Eigen::DenseIndex, Eigen::type2index<1>> ret;\n     ret.set(0, n);\n     return ret;\n   }\n-  inline Eigen::IndexList<Eigen::type2index<1>, int> OneByM(int m) {\n-    Eigen::IndexList<Eigen::type2index<1>, int> ret;\n+  inline Eigen::IndexList<Eigen::type2index<1>, Eigen::DenseIndex> OneByM(\n+      Eigen::DenseIndex m) {\n+    Eigen::IndexList<Eigen::type2index<1>, Eigen::DenseIndex> ret;\n     ret.set(1, m);\n     return ret;\n   }\n@@ -487,10 +489,10 @@ struct BinaryFunctor<CPUDevice, Functor, 2, false> {\n       // use_broadcast_optimization<T> are compile-time constant, gcc\n       // does a decent job avoiding generating code when conditions\n       // are not met.\n-      const int a = in0.dimension(0);  // in0 is shape [a, b]\n-      const int b = in0.dimension(1);\n-      const int c = in1.dimension(0);  // in1 is shape [c, d]\n-      const int d = in1.dimension(1);\n+      const Eigen::DenseIndex a = in0.dimension(0);  // in0 is shape [a, b]\n+      const Eigen::DenseIndex b = in0.dimension(1);\n+      const Eigen::DenseIndex c = in1.dimension(0);  // in1 is shape [c, d]\n+      const Eigen::DenseIndex d = in1.dimension(1);\n       if ((a == 1) && (d == 1)) {\n         auto lhs = in0.reshape(OneByM(b)).broadcast(NByOne(c));\n         auto rhs = in1.reshape(NByOne(c)).broadcast(OneByM(b));"