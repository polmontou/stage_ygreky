"diff --git a/tensorflow/python/kernel_tests/image_ops/draw_bounding_box_op_test.py b/tensorflow/python/kernel_tests/image_ops/draw_bounding_box_op_test.py\nindex 91fcd935168..a66d8d8a9a2 100644\n--- a/tensorflow/python/kernel_tests/image_ops/draw_bounding_box_op_test.py\n+++ b/tensorflow/python/kernel_tests/image_ops/draw_bounding_box_op_test.py\n@@ -16,8 +16,11 @@\n \n import numpy as np\n \n+from tensorflow.python.framework import constant_op\n from tensorflow.python.framework import dtypes\n+from tensorflow.python.framework import errors\n from tensorflow.python.framework import ops\n+from tensorflow.python.framework import test_util\n from tensorflow.python.ops import array_ops\n from tensorflow.python.ops import image_ops\n from tensorflow.python.ops import image_ops_impl\n@@ -131,6 +134,22 @@ class DrawBoundingBoxOpTest(test.TestCase):\n     self._testDrawBoundingBoxColorCycling(\n         image, dtype=dtypes.half, colors=colors)\n \n+  # generate_bound_box_proposals is only available on GPU.\n+  @test_util.run_gpu_only()\n+  def testGenerateBoundingBoxProposals(self):\n+    # Op only exists on GPU.\n+    with self.cached_session(use_gpu=True):\n+      with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),\n+                                  \"must be rank 4\"):\n+        scores = constant_op.constant(\n+            value=[[[[1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]]])\n+        self.evaluate(\n+            image_ops.generate_bounding_box_proposals(\n+                scores=scores,\n+                bbox_deltas=[],\n+                image_info=[],\n+                anchors=[],\n+                pre_nms_topn=1))\n \n if __name__ == \"__main__\":\n   test.main()"