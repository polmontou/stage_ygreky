"diff --git a/tensorflow/python/eager/pywrap_tfe_src.cc b/tensorflow/python/eager/pywrap_tfe_src.cc\nindex 83f1565f15e..7b3a8048c15 100644\n--- a/tensorflow/python/eager/pywrap_tfe_src.cc\n+++ b/tensorflow/python/eager/pywrap_tfe_src.cc\n@@ -397,11 +397,20 @@ bool SetOpAttrList(TFE_Context* ctx, TFE_Op* op, const char* key,\n   const int num_values = PySequence_Size(py_list);\n   if (attr_list_sizes != nullptr) (*attr_list_sizes)[key] = num_values;\n \n-#define PARSE_LIST(c_type, parse_fn)                                      \\\n-  std::unique_ptr<c_type[]> values(new c_type[num_values]);               \\\n-  for (int i = 0; i < num_values; ++i) {                                  \\\n-    tensorflow::Safe_PyObjectPtr py_value(PySequence_ITEM(py_list, i));   \\\n-    if (!parse_fn(key, py_value.get(), status, &values[i])) return false; \\\n+#define PARSE_LIST(c_type, parse_fn)                                       \\\n+  std::unique_ptr<c_type[]> values(new c_type[num_values]);                \\\n+  for (int i = 0; i < num_values; ++i) {                                   \\\n+    tensorflow::Safe_PyObjectPtr py_value(PySequence_ITEM(py_list, i));    \\\n+    if (py_value == nullptr) {                                             \\\n+      TF_SetStatus(status, TF_INVALID_ARGUMENT,                            \\\n+                   tensorflow::strings::StrCat(                            \\\n+                       \"Expecting sequence of \" #c_type \" for attr \", key, \\\n+                       \", got \", py_list->ob_type->tp_name)                \\\n+                       .c_str());                                          \\\n+      return false;                                                        \\\n+    } else if (!parse_fn(key, py_value.get(), status, &values[i])) {       \\\n+      return false;                                                        \\\n+    }                                                                      \\\n   }\n \n   if (type == TF_ATTR_STRING) {"