"diff --git a/tensorflow/python/kernel_tests/nn_ops/fractional_max_pool_op_test.py b/tensorflow/python/kernel_tests/nn_ops/fractional_max_pool_op_test.py\nindex 1594844ab49..79b2c799d58 100644\n--- a/tensorflow/python/kernel_tests/nn_ops/fractional_max_pool_op_test.py\n+++ b/tensorflow/python/kernel_tests/nn_ops/fractional_max_pool_op_test.py\n@@ -632,7 +632,7 @@ class FractionalMaxPoolGradTest(test.TestCase):\n \n   def testInvalidSeqRaiseErrorForFractionalMaxPoolGrad(self):\n     with self.assertRaises(errors.InvalidArgumentError):\n-      with self.cached_session() as _:\n+      with self.cached_session():\n         overlapping = True\n         orig_input = constant_op.constant(\n             .453409232, shape=[1, 7, 13, 1], dtype=dtypes.float32)\n@@ -653,6 +653,24 @@ class FractionalMaxPoolGradTest(test.TestCase):\n             overlapping=overlapping)\n         self.evaluate(t)\n \n+  def testOverLargeSeqRaiseErrorForFractionalMaxPoolGrad(self):\n+    with self.assertRaises(errors.InvalidArgumentError):\n+      with self.cached_session():\n+        overlapping = False\n+        orig_input = [[[[1, 1, 1, 1, 1]]]]\n+        orig_output = [[[[1, 1, 1]]]]\n+        out_backprop = [[[[3], [3], [6]]]]\n+        row_pooling_sequence = [-0x4000000, 1, 1]\n+        col_pooling_sequence = [-0x4000000, 1, 1]\n+        t = gen_nn_ops.FractionalMaxPoolGrad(\n+            orig_input=orig_input,\n+            orig_output=orig_output,\n+            out_backprop=out_backprop,\n+            row_pooling_sequence=row_pooling_sequence,\n+            col_pooling_sequence=col_pooling_sequence,\n+            overlapping=overlapping)\n+        self.evaluate(t)\n+\n \n if __name__ == \"__main__\":\n   test.main()"