"diff --git a/tensorflow/python/kernel_tests/linalg/sparse/csr_sparse_matrix_ops_test.py b/tensorflow/python/kernel_tests/linalg/sparse/csr_sparse_matrix_ops_test.py\nindex 035791ce0a5..d129bea768e 100644\n--- a/tensorflow/python/kernel_tests/linalg/sparse/csr_sparse_matrix_ops_test.py\n+++ b/tensorflow/python/kernel_tests/linalg/sparse/csr_sparse_matrix_ops_test.py\n@@ -1313,6 +1313,16 @@ class CSRSparseMatrixOpsTest(test.TestCase):\n       self.assertLess(cholesky_with_amd_nnz_value,\n                       cholesky_without_ordering_nnz_value)\n \n+  @test_util.run_in_graph_and_eager_modes\n+  def testNoMatrixNoCrash(self):\n+    # Round-about way of creating an empty variant tensor that works in both\n+    # graph and eager modes.\n+    no_matrix = array_ops.reshape(dense_to_csr_sparse_matrix([[0.0]]), [1])[0:0]\n+    with self.assertRaisesRegex(\n+        (ValueError, errors.InvalidArgumentError),\n+        \"(Invalid input matrix)|(Shape must be rank 0)\"):\n+      sparse_csr_matrix_ops.sparse_matrix_nnz(no_matrix)\n+\n \n class CSRSparseMatrixOpsBenchmark(test.Benchmark):\n "