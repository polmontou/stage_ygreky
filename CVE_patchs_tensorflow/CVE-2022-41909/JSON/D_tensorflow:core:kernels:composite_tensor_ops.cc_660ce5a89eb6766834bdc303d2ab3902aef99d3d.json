"diff --git a/tensorflow/core/kernels/composite_tensor_ops.cc b/tensorflow/core/kernels/composite_tensor_ops.cc\nindex f41b02991bb..bc4f96e6bb2 100644\n--- a/tensorflow/core/kernels/composite_tensor_ops.cc\n+++ b/tensorflow/core/kernels/composite_tensor_ops.cc\n@@ -15,6 +15,7 @@ limitations under the License.\n \n #include \"tensorflow/core/framework/op.h\"\n #include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/op_requires.h\"\n #include \"tensorflow/core/framework/variant.h\"\n #include \"tensorflow/core/framework/variant_encode_decode.h\"\n #include \"tensorflow/core/kernels/composite_tensor_variant.h\"\n@@ -66,6 +67,11 @@ class CompositeTensorVariantToComponents : public OpKernel {\n \n   void Compute(OpKernelContext* context) override {\n     Tensor encoded_t = context->input(0);\n+    OP_REQUIRES(\n+        context, encoded_t.flat<Variant>().size() > 0,\n+        errors::InvalidArgument(\"Input `encoded` must not be an empty variant \"\n+                                \"tensor, but got \",\n+                                encoded_t.DebugString()));\n     auto* encoded = encoded_t.flat<Variant>()(0).get<CompositeTensorVariant>();\n \n     // Check that the encoded TypeSpec is compatible with the expected TypeSpec."