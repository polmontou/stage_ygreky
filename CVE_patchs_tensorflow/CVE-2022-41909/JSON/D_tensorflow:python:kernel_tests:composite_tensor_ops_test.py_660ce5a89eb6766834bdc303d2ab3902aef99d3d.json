"diff --git a/tensorflow/python/kernel_tests/composite_tensor_ops_test.py b/tensorflow/python/kernel_tests/composite_tensor_ops_test.py\nindex e5e9d1ef9bf..7a10cae3ebc 100644\n--- a/tensorflow/python/kernel_tests/composite_tensor_ops_test.py\n+++ b/tensorflow/python/kernel_tests/composite_tensor_ops_test.py\n@@ -18,11 +18,13 @@ from absl.testing import parameterized\n \n from tensorflow.python.eager import backprop\n from tensorflow.python.eager import context\n+from tensorflow.python.framework import constant_op\n from tensorflow.python.framework import dtypes\n from tensorflow.python.framework import errors\n from tensorflow.python.framework import sparse_tensor\n from tensorflow.python.framework import test_util\n from tensorflow.python.ops import composite_tensor_ops\n+from tensorflow.python.ops import gen_composite_tensor_ops\n from tensorflow.python.ops import gradients_impl\n from tensorflow.python.ops import math_ops\n from tensorflow.python.ops import parsing_ops\n@@ -83,6 +85,18 @@ class ExtensionTypeTest(test_util.TensorFlowTestCase, parameterized.TestCase):\n     with self.assertRaisesRegex(ValueError, message):\n       composite_tensor_ops.composite_tensor_to_variants(value(), spec)\n \n+  def testDecodingEmptyNonScalarTensorError(self):\n+    if not context.executing_eagerly():\n+      # Creating a variant tensor of an empty list is not allowed in eager mode.\n+      return\n+\n+    with self.assertRaisesRegex(errors.InvalidArgumentError,\n+                                'must not be an empty variant tensor'):\n+      gen_composite_tensor_ops.CompositeTensorVariantToComponents(\n+          encoded=constant_op.constant([], dtype=dtypes.variant),\n+          metadata='',\n+          Tcomponents=[dtypes.int32])\n+\n   def testRoundTripThroughTensorProto(self):\n     value = ragged_factory_ops.constant([[1, 2], [3], [4, 5, 6]])\n     encoded = composite_tensor_ops.composite_tensor_to_variants(value)"