"diff --git a/tensorflow/compiler/xla/stream_executor/cuda/cuda_platform.cc b/tensorflow/compiler/xla/stream_executor/cuda/cuda_platform.cc\nindex bd33db289bd..9be64258768 100644\n--- a/tensorflow/compiler/xla/stream_executor/cuda/cuda_platform.cc\n+++ b/tensorflow/compiler/xla/stream_executor/cuda/cuda_platform.cc\n@@ -23,8 +23,8 @@ limitations under the License.\n #include \"tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.h\"\n #include \"tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.h\"\n #include \"tensorflow/compiler/xla/stream_executor/cuda/cuda_platform_id.h\"\n-#include \"tensorflow/compiler/xla/stream_executor/lib/error.h\"\n-#include \"tensorflow/compiler/xla/stream_executor/lib/initialize.h\"\n+#include \"tensorflow/compiler/xla/stream_executor/platform/initialize.h\"\n+#include \"tensorflow/tsl/platform/errors.h\"\n #include \"tensorflow/tsl/platform/status.h\"\n \n namespace stream_executor {\n@@ -117,7 +117,7 @@ tsl::StatusOr<StreamExecutor*> CudaPlatform::FirstExecutorForBus(\n   }\n \n   return tsl::Status(\n-      port::error::NOT_FOUND,\n+      tsl::error::NOT_FOUND,\n       absl::StrFormat(\"Executor for bus %d not found.\", bus_ordinal));\n }\n \n@@ -177,7 +177,7 @@ CudaPlatform::GetUncachedExecutor(const StreamExecutorConfig& config) {\n   auto init_status = executor->Init(config.device_options);\n   if (!init_status.ok()) {\n     return tsl::Status(\n-        port::error::INTERNAL,\n+        tsl::error::INTERNAL,\n         absl::StrFormat(\n             \"failed initializing StreamExecutor for CUDA device ordinal %d: %s\",\n             config.ordinal, init_status.ToString()));"