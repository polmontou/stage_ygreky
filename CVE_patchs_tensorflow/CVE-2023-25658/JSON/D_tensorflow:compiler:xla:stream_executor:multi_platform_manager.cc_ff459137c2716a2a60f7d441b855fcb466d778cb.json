"diff --git a/tensorflow/compiler/xla/stream_executor/multi_platform_manager.cc b/tensorflow/compiler/xla/stream_executor/multi_platform_manager.cc\nindex c60a541a029..f4322e8ef94 100644\n--- a/tensorflow/compiler/xla/stream_executor/multi_platform_manager.cc\n+++ b/tensorflow/compiler/xla/stream_executor/multi_platform_manager.cc\n@@ -24,8 +24,7 @@ limitations under the License.\n #include \"absl/strings/str_join.h\"\n #include \"absl/strings/string_view.h\"\n #include \"absl/synchronization/mutex.h\"\n-#include \"tensorflow/compiler/xla/stream_executor/lib/error.h\"\n-#include \"tensorflow/compiler/xla/stream_executor/lib/initialize.h\"\n+#include \"tensorflow/compiler/xla/stream_executor/platform/initialize.h\"\n #include \"tensorflow/tsl/platform/errors.h\"\n \n namespace stream_executor {\n@@ -96,7 +95,7 @@ tsl::Status MultiPlatformManagerImpl::RegisterPlatform(\n   std::string key = absl::AsciiStrToLower(platform->Name());\n   absl::MutexLock lock(&mu_);\n   if (name_map_.find(key) != name_map_.end()) {\n-    return tsl::Status(port::error::INTERNAL,\n+    return tsl::Status(tsl::error::INTERNAL,\n                        \"platform is already registered with name: \\\"\" +\n                            platform->Name() + \"\\\"\");\n   }\n@@ -156,7 +155,7 @@ tsl::StatusOr<Platform*> MultiPlatformManagerImpl::InitializePlatformWithName(\n   TF_ASSIGN_OR_RETURN(Platform * platform, LookupByNameLocked(target));\n   if (platform->Initialized()) {\n     return tsl::Status(\n-        port::error::FAILED_PRECONDITION,\n+        tsl::error::FAILED_PRECONDITION,\n         absl::StrCat(\"platform \\\"\", target, \"\\\" is already initialized\"));\n   }\n \n@@ -172,7 +171,7 @@ tsl::StatusOr<Platform*> MultiPlatformManagerImpl::InitializePlatformWithId(\n   TF_ASSIGN_OR_RETURN(Platform * platform, LookupByIdLocked(id));\n   if (platform->Initialized()) {\n     return tsl::Status(\n-        port::error::FAILED_PRECONDITION,\n+        tsl::error::FAILED_PRECONDITION,\n         absl::StrFormat(\"platform with id %p is already initialized\", id));\n   }\n \n@@ -232,7 +231,7 @@ tsl::StatusOr<Platform*> MultiPlatformManagerImpl::LookupByNameLocked(\n   auto it = name_map_.find(absl::AsciiStrToLower(target));\n   if (it == name_map_.end()) {\n     return tsl::Status(\n-        port::error::NOT_FOUND,\n+        tsl::error::NOT_FOUND,\n         absl::StrCat(\"Could not find registered platform with name: \\\"\", target,\n                      \"\\\". Available platform names are: \",\n                      absl::StrJoin(InitializedPlatformNamesWithFilter(), \" \")));\n@@ -245,7 +244,7 @@ tsl::StatusOr<Platform*> MultiPlatformManagerImpl::LookupByIdLocked(\n   auto it = id_map_.find(id);\n   if (it == id_map_.end()) {\n     return tsl::Status(\n-        port::error::NOT_FOUND,\n+        tsl::error::NOT_FOUND,\n         absl::StrFormat(\"could not find registered platform with id: %p\", id));\n   }\n   return it->second;"