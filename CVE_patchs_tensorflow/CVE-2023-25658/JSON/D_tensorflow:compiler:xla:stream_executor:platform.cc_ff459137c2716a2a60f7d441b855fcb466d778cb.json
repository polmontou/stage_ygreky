"diff --git a/tensorflow/compiler/xla/stream_executor/platform.cc b/tensorflow/compiler/xla/stream_executor/platform.cc\nindex 9e5c22c2762..aaca9354968 100644\n--- a/tensorflow/compiler/xla/stream_executor/platform.cc\n+++ b/tensorflow/compiler/xla/stream_executor/platform.cc\n@@ -16,10 +16,10 @@ limitations under the License.\n #include \"tensorflow/compiler/xla/stream_executor/platform.h\"\n \n #include \"absl/strings/str_cat.h\"\n-#include \"tensorflow/compiler/xla/stream_executor/lib/error.h\"\n #include \"tensorflow/compiler/xla/stream_executor/platform/logging.h\"\n #include \"tensorflow/compiler/xla/stream_executor/platform/port.h\"\n #include \"tensorflow/compiler/xla/stream_executor/stream_executor_pimpl.h\"\n+#include \"tensorflow/tsl/platform/errors.h\"\n \n namespace stream_executor {\n \n@@ -92,14 +92,14 @@ bool Platform::Initialized() const { return true; }\n tsl::Status Platform::Initialize(\n     const std::map<std::string, std::string> &platform_options) {\n   if (!platform_options.empty()) {\n-    return tsl::Status(port::error::UNIMPLEMENTED,\n+    return tsl::Status(tsl::error::UNIMPLEMENTED,\n                        \"this platform does not support custom initialization\");\n   }\n   return ::tsl::OkStatus();\n }\n \n tsl::Status Platform::ForceExecutorShutdown() {\n-  return tsl::Status(port::error::UNIMPLEMENTED,\n+  return tsl::Status(tsl::error::UNIMPLEMENTED,\n                      \"executor shutdown is not supported on this platform\");\n }\n "