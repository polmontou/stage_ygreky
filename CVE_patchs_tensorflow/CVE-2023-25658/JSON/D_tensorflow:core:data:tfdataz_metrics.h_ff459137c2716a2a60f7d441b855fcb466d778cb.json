"diff --git a/tensorflow/core/data/tfdataz_metrics.h b/tensorflow/core/data/tfdataz_metrics.h\nindex 8a44e6ebaa5..bb59a73f8d0 100644\n--- a/tensorflow/core/data/tfdataz_metrics.h\n+++ b/tensorflow/core/data/tfdataz_metrics.h\n@@ -25,6 +25,7 @@ limitations under the License.\n \n #include \"absl/container/flat_hash_set.h\"\n #include \"absl/time/time.h\"\n+#include \"tensorflow/core/framework/dataset.h\"\n #include \"tensorflow/core/platform/env.h\"\n #include \"tensorflow/core/platform/mutex.h\"\n #include \"tensorflow/core/platform/thread_annotations.h\"\n@@ -95,7 +96,7 @@ class TfDatazMetricsCollector {\n   // We only collect metrics for CPU devices. This is a heuristic to avoid\n   // collecting metrics for device-side iterators created by the multi-device\n   // iterator mechanism.\n-  explicit TfDatazMetricsCollector(const Env& env);\n+  TfDatazMetricsCollector(const Env& env, IteratorBase* iterator);\n \n   // Records `GetNext` call latency.\n   void RecordGetNextLatency(int64_t get_next_latency_usec);\n@@ -109,7 +110,13 @@ class TfDatazMetricsCollector {\n   // Returns the average `GetNext` latency for past 60 minutes.\n   absl::Duration GetAverageLatencyForLastSixtyMinutes();\n \n+  // Returns the total memory (in bytes) used by the iterator.\n+  // Total memory used by the iterator includes the total number of bytes\n+  // buffered in all nodes in the subtree.\n+  int64_t GetIteratorTotalMemoryUsage();\n+\n  private:\n+  IteratorBase* iterator_;  // not owned\n   ApproximateLatencyEstimator latency_estimator_;\n };\n "