"diff --git a/tensorflow/core/data/tfdataz_metrics_test.cc b/tensorflow/core/data/tfdataz_metrics_test.cc\nindex 02f02658965..2d3d75946e4 100644\n--- a/tensorflow/core/data/tfdataz_metrics_test.cc\n+++ b/tensorflow/core/data/tfdataz_metrics_test.cc\n@@ -18,7 +18,7 @@ limitations under the License.\n #include <utility>\n \n #include \"absl/time/time.h\"\n-#include \"tensorflow/core/framework/types.h\"\n+#include \"tensorflow/core/framework/dataset.h\"\n #include \"tensorflow/core/platform/env.h\"\n #include \"tensorflow/core/platform/test.h\"\n #include \"tensorflow/core/util/fake_clock_env.h\"\n@@ -41,7 +41,8 @@ class TfDatazMetricsTest : public ::testing::Test {\n  protected:\n   void SetUp() override {\n     env_ = std::make_unique<FakeClockEnv>(Env::Default());\n-    tfdataz_metrics_ = std::make_unique<TfDatazMetricsCollector>(*env_);\n+    tfdataz_metrics_ =\n+        std::make_unique<TfDatazMetricsCollector>(*env_, iterator_.get());\n   }\n \n   void TearDown() override {\n@@ -49,6 +50,7 @@ class TfDatazMetricsTest : public ::testing::Test {\n     tfdataz_metrics_.reset();\n   }\n \n+  std::unique_ptr<IteratorBase> iterator_;\n   std::unique_ptr<FakeClockEnv> env_;\n   std::unique_ptr<TfDatazMetricsCollector> tfdataz_metrics_;\n };\n@@ -184,10 +186,11 @@ class ScopedTfDataMetricsRegistration {\n };\n \n TEST(TfDatazMetricsRegistryTest, Register) {\n-  auto collector_one =\n-      std::make_shared<TfDatazMetricsCollector>(*Env::Default());\n-  auto collector_two =\n-      std::make_shared<TfDatazMetricsCollector>(*Env::Default());\n+  std::unique_ptr<IteratorBase> iterator;\n+  auto collector_one = std::make_shared<TfDatazMetricsCollector>(\n+      *Env::Default(), iterator.get());\n+  auto collector_two = std::make_shared<TfDatazMetricsCollector>(\n+      *Env::Default(), iterator.get());\n \n   ScopedTfDataMetricsRegistration scoped_registration_one(collector_one);\n   ScopedTfDataMetricsRegistration scoped_registration_two(collector_two);\n@@ -196,12 +199,13 @@ TEST(TfDatazMetricsRegistryTest, Register) {\n }\n \n TEST(TfDatazMetricsRegistryTest, Deregister) {\n-  auto collector_one =\n-      std::make_shared<TfDatazMetricsCollector>(*Env::Default());\n-  auto collector_two =\n-      std::make_shared<TfDatazMetricsCollector>(*Env::Default());\n-  auto collector_three =\n-      std::make_shared<TfDatazMetricsCollector>(*Env::Default());\n+  std::unique_ptr<IteratorBase> iterator;\n+  auto collector_one = std::make_shared<TfDatazMetricsCollector>(\n+      *Env::Default(), iterator.get());\n+  auto collector_two = std::make_shared<TfDatazMetricsCollector>(\n+      *Env::Default(), iterator.get());\n+  auto collector_three = std::make_shared<TfDatazMetricsCollector>(\n+      *Env::Default(), iterator.get());\n   ScopedTfDataMetricsRegistration scoped_registration_one(collector_one);\n   ScopedTfDataMetricsRegistration scoped_registration_two(collector_two);\n   ScopedTfDataMetricsRegistration scoped_registration_three(collector_three);"