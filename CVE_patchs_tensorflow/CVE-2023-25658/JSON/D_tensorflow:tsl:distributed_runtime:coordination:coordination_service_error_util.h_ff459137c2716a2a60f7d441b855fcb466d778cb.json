"diff --git a/tensorflow/tsl/distributed_runtime/coordination/coordination_service_error_util.h b/tensorflow/tsl/distributed_runtime/coordination/coordination_service_error_util.h\nindex 829c221da84..90db5285589 100644\n--- a/tensorflow/tsl/distributed_runtime/coordination/coordination_service_error_util.h\n+++ b/tensorflow/tsl/distributed_runtime/coordination/coordination_service_error_util.h\n@@ -29,7 +29,7 @@ constexpr absl::string_view CoordinationErrorPayloadKey() {\n // Mark error as a coordination service error (as opposed to RPC\n // errors).\n inline Status MakeCoordinationError(Status s) {\n-  s.SetPayload(CoordinationErrorPayloadKey(), \"\");\n+  s.SetPayload(CoordinationErrorPayloadKey(), absl::Cord(\"\"));\n   return s;\n }\n \n@@ -43,14 +43,16 @@ inline Status MakeCoordinationError(Status s,\n   tensorflow::CoordinationServiceError error;\n   *error.mutable_source_task() = origin;\n   error.set_is_reported_error(is_reported_error);\n-  s.SetPayload(CoordinationErrorPayloadKey(), error.SerializeAsString());\n+  s.SetPayload(CoordinationErrorPayloadKey(),\n+               absl::Cord(error.SerializeAsString()));\n   return s;\n }\n \n // Mark error as a coordination service error with payload.\n inline Status MakeCoordinationError(\n     Status s, const tensorflow::CoordinationServiceError& payload) {\n-  s.SetPayload(CoordinationErrorPayloadKey(), payload.SerializeAsString());\n+  s.SetPayload(CoordinationErrorPayloadKey(),\n+               absl::Cord(payload.SerializeAsString()));\n   return s;\n }\n }  // namespace tsl"