"load(\"//tensorflow/core/platform:rules_cc.bzl\", \"cc_library\")\nload(\"//tensorflow:tensorflow.bzl\", \"if_libtpu\", \"if_with_tpu_support\", \"tf_cc_test\", \"tf_copts\")\nload(\"//tensorflow/compiler/xla/stream_executor:build_defs.bzl\", \"if_cuda_or_rocm\")\nload(\"//tensorflow:tensorflow.default.bzl\", \"cc_header_only_library\", \"filegroup\", \"tf_custom_op_py_library\", \"tf_jit_compilation_passes_extra_deps\")\nload(\"//tensorflow/core/platform:build_config.bzl\", \"tf_additional_all_protos\", \"tf_proto_library\")\nload(\n    \"//tensorflow/core/platform:build_config_root.bzl\",\n    \"if_static\",\n    \"tf_cuda_tests_tags\",\n)\n\npackage(\n    # copybara:uncomment default_applicable_licenses = [\"//tensorflow:license\"],\n    default_visibility = [\n        \":internal\",\n        \"//third_party/cloud_tpu/inference_converter:__pkg__\",\n    ],\n    licenses = [\"notice\"],\n)\n\npackage_group(\n    name = \"internal\",\n    includes = [\n        \"//tensorflow/compiler/tf2xla:internal\",\n    ],\n    packages = [\n        \"//tensorflow/c/...\",\n        \"//tensorflow/compiler/tests/...\",\n        \"//tensorflow/python/...\",\n    ],\n)\n\npackage_group(\n    name = \"friends\",\n    includes = [\n        \"//tensorflow/compiler/tf2xla:friends\",\n    ],\n)\n\n# defs.cc/h only contains string constants, and can be included in mobile\n# builds.\nfilegroup(\n    name = \"mobile_srcs_no_runtime\",\n    srcs = [\n        \"defs.cc\",\n        \"defs.h\",\n    ],\n    visibility = [\":friends\"],\n)\n\n# Target that bundles up the XLA CPU and GPU JIT devices.\ncc_library(\n    name = \"jit\",\n    visibility = [\n        \":friends\",\n        \"//learning/tfx:__subpackages__\",\n    ],\n    deps = [\n        \":xla_cpu_device\",\n        \":xla_cpu_jit\",\n        \"//tensorflow/compiler/plugin\",\n    ] + if_cuda_or_rocm([\n        \":xla_gpu_device\",\n        \":xla_gpu_jit\",\n    ]) + if_with_tpu_support([\n        \":xla_tpu_device\",\n        \":xla_tpu_jit\",\n    ]),\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"xla_cpu_jit\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":jit_compilation_passes\",\n        \":xla_kernel_creator\",  # buildcleaner: keep\n        \"//tensorflow/compiler/jit/kernels:xla_ops\",\n        \"//tensorflow/compiler/tf2xla/kernels:xla_dummy_ops\",\n        \"//tensorflow/compiler/tf2xla/kernels:xla_ops\",\n    ] + if_libtpu(\n        if_false = [\"//tensorflow/compiler/xla/service:cpu_plugin\"],\n        if_true = [],\n    ),\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"xla_gpu_jit\",\n    visibility = [\"//visibility:public\"],\n    deps = if_cuda_or_rocm([\n        \":jit_compilation_passes\",\n        \":xla_kernel_creator\",  # buildcleaner: keep\n        \"//tensorflow/compiler/jit/kernels:xla_ops\",\n        \"//tensorflow/compiler/tf2xla/kernels:xla_ops\",\n        \"//tensorflow/compiler/tf2xla/kernels:xla_dummy_ops\",\n        \"//tensorflow/compiler/xla/service:gpu_plugin\",\n    ]),\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"xla_tpu_jit\",\n    visibility = [\"//visibility:public\"],\n    deps = if_libtpu([\n        \"//tensorflow/core/tpu/graph_rewrite:tpu_rewrite_pass_registration\",\n        \"//tensorflow/core/tpu/graph_rewrite:configure_tpu_embedding_rewrite_registration\",\n        \"//tensorflow/compiler/xla/stream_executor/tpu:tpu_transfer_manager\",\n    ]),\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"xla_cpu_device\",\n    srcs = [\"xla_cpu_device.cc\"],\n    visibility = [\":friends\"],\n    deps = [\n        \":common\",\n        \":flags\",\n        \":jit_compilation_passes\",\n        \":xla_device\",\n        \":xla_kernel_creator\",  # buildcleaner: keep\n        \"@com_google_absl//absl/memory\",\n        \"//tensorflow/compiler/jit/kernels:xla_ops\",\n        \"//tensorflow/compiler/tf2xla:layout_util\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n        \"//tensorflow/compiler/tf2xla/kernels:xla_ops\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:lib\",\n    ] + if_libtpu(\n        if_false = [\n            \"//tensorflow/compiler/xla/service:cpu_plugin\",  # buildcleaner: keep\n        ],\n        if_true = [],\n    ),\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"xla_gpu_device\",\n    srcs = [\"xla_gpu_device.cc\"],\n    visibility = [\":friends\"],\n    deps = [\n        \":common\",\n        \":flags\",\n        \":jit_compilation_passes\",\n        \":xla_device\",\n        \":xla_kernel_creator\",  # buildcleaner: keep\n        \":xla_device_no_jit_rewrite_registration\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/strings\",\n        \"//tensorflow/compiler/jit/kernels:xla_ops\",\n        \"//tensorflow/compiler/tf2xla:layout_util\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n        \"//tensorflow/compiler/tf2xla/kernels:xla_ops\",\n        \"//tensorflow/compiler/xla/stream_executor/gpu:gpu_init\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:lib\",\n    ] + if_libtpu(\n        if_false = [\n            \"//tensorflow/compiler/xla/service:gpu_plugin\",  # buildcleaner: keep\n        ],\n        if_true = [],\n    ),\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"xla_tpu_device\",\n    srcs = [\"xla_tpu_device.cc\"],\n    hdrs = [\"xla_tpu_device.h\"],\n    visibility = [\":friends\"],\n    deps = [\n        \":xla_device\",\n        \":xla_kernel_creator\",  # buildcleaner: keep\n        \"@com_google_absl//absl/types:optional\",\n        \"//tensorflow/compiler/jit/kernels:xla_ops\",\n        \"//tensorflow/compiler/tf2xla:common\",\n        \"//tensorflow/compiler/tf2xla:layout_util\",\n        \"//tensorflow/compiler/tf2xla:tf2xla_util\",\n        \"//tensorflow/compiler/tf2xla:xla_helpers\",\n        \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib_proto_parsing\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:session_options\",\n        \"//tensorflow/core/common_runtime:device\",\n        \"//tensorflow/core/common_runtime:device_factory\",\n        \"//tensorflow/core/common_runtime:dma_helper\",\n        \"//tensorflow/core/platform:status\",\n        \"//tensorflow/compiler/xla/stream_executor/tpu:tpu_api\",\n        \"//tensorflow/core/tpu:tpu_defs\",\n        \"//tensorflow/core/tpu:tpu_node_device_util\",\n        \"//tensorflow/core/tpu:virtual_device\",\n        \"//tensorflow/compiler/xla/stream_executor/tpu:c_api_conversions\",\n        \"//tensorflow/compiler/xla/stream_executor/tpu:status_helper\",\n        \"//tensorflow/compiler/xla/stream_executor/tpu:tpu_executor_base\",\n        \"//tensorflow/compiler/xla/stream_executor/tpu:tpu_node_context\",\n        \"//tensorflow/compiler/xla/stream_executor/tpu:tpu_platform_interface\",\n        \"//tensorflow/compiler/xla/stream_executor/tpu:tpu_stream_interface\",\n    ] + if_static([\n        \"//tensorflow/core/common_runtime:copy_tensor\",\n        \":jit_compilation_passes\",\n    ]),\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"xla_tensor\",\n    srcs = [\"xla_tensor.cc\"],\n    hdrs = [\"xla_tensor.h\"],\n    visibility = [\":friends\"],\n    deps = [\n        \"//tensorflow/compiler/tf2xla:common\",\n        \"//tensorflow/compiler/xla:shape_util\",\n        \"//tensorflow/compiler/xla/client:local_client\",\n        \"//tensorflow/compiler/xla/service:shaped_buffer\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"@com_google_absl//absl/memory\",\n    ],\n)\n\nXLA_DEVICE_DEPS = [\n    \":common\",\n    \":xla_launch_util\",\n    \":xla_tensor\",\n    \"@com_google_absl//absl/base\",\n    \"@com_google_absl//absl/memory\",\n    \"@com_google_absl//absl/strings\",\n    \"@com_google_absl//absl/synchronization\",\n    \"@com_google_absl//absl/types:optional\",\n    \"//tensorflow/compiler/jit/ops:xla_ops\",\n    \"//tensorflow/compiler/tf2xla:layout_util\",\n    \"//tensorflow/compiler/tf2xla:common\",\n    \"//tensorflow/compiler/tf2xla:tf2xla_util\",\n    \"//tensorflow/compiler/tf2xla:xla_compiler\",\n    \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n    \"//tensorflow/compiler/tf2xla/kernels:xla_dummy_ops\",\n    \"//tensorflow/compiler/tf2xla/kernels:xla_ops\",\n    \"//tensorflow/compiler/xla:util\",\n    \"//tensorflow/compiler/xla/client:client_library\",\n    \"//tensorflow/compiler/xla/client:global_data\",\n    \"//tensorflow/compiler/xla/client:local_client\",\n    \"//tensorflow/compiler/xla/service:stream_pool\",\n    \"//tensorflow/compiler/xla/service/gpu:gpu_executable_run_options\",\n    \"//tensorflow/core:array_ops_op_lib\",\n    \"//tensorflow/core:control_flow_ops_op_lib\",\n    \"//tensorflow/core:core_cpu\",\n    \"//tensorflow/core:core_cpu_internal\",\n    \"//tensorflow/core:dataset_ops_op_lib\",\n    \"//tensorflow/core:framework\",\n    \"//tensorflow/core:framework_internal\",\n    \"//tensorflow/core:functional_ops_op_lib\",\n    \"//tensorflow/core:lib\",\n    \"//tensorflow/core:lib_internal\",\n    \"//tensorflow/core:math_ops_op_lib\",\n    \"//tensorflow/core:nn_ops_op_lib\",\n    \"//tensorflow/core:no_op_op_lib\",\n    \"//tensorflow/core:protos_all_cc\",\n    \"//tensorflow/core:resource_variable_ops_op_lib\",\n    \"//tensorflow/core:sendrecv_ops_op_lib\",\n    \"//tensorflow/core:state_ops_op_lib\",\n    \"//tensorflow/core/platform:stream_executor_no_cuda\",\n    \"//tensorflow/core/kernels:constant_op\",\n    \"//tensorflow/core/kernels:fifo_queue\",\n    \"//tensorflow/core/kernels:function_ops\",\n    \"//tensorflow/core/kernels:identity_op\",\n    \"//tensorflow/core/kernels:resource_variable_ops\",\n    \"//tensorflow/core/kernels:shape_ops\",\n    \"//tensorflow/core/kernels:variable_ops\",\n    \"//tensorflow/core/kernels/data:finalize_dataset_op\",\n    \"//tensorflow/core/kernels/data:generator_dataset_op\",\n    \"//tensorflow/core/kernels/data:iterator_ops\",\n    \"//tensorflow/core/kernels/data:optional_ops\",\n    \"//tensorflow/core/kernels/data:prefetch_dataset_op\",\n    \"//tensorflow/core/kernels/data:options_dataset_op\",\n    \"//tensorflow/core/profiler/lib:traceme\",\n    \"//tensorflow/compiler/xla/stream_executor:tf_allocator_adapter\",\n    \"//tensorflow/compiler/xla/stream_executor/platform\",\n]\n\ncc_library(\n    name = \"xla_device_no_jit_rewrite_registration\",\n    srcs = [\n        \"xla_compile_on_demand_op.cc\",\n        \"xla_device.cc\",\n        \"xla_device_context.cc\",\n        \"xla_device_ops.cc\",\n        \"xla_ops_on_regular_devices.cc\",\n        \"xla_platform_info.cc\",\n    ],\n    hdrs = [\n        \"xla_compile_on_demand_op.h\",\n        \"xla_device.h\",\n        \"xla_device_context.h\",\n        \"xla_device_ops.h\",\n        \"xla_platform_info.h\",\n    ],\n    # Public visibility is needed for external TF/XLA backends.\n    visibility = [\"//visibility:public\"],\n    deps = XLA_DEVICE_DEPS + [\n        \":device_compilation_cache\",\n        \":device_compilation_profiler\",\n        \":device_compiler_client\",\n        \":device_executable_persistor\",\n        \":flags_headers\",\n        \":device_compiler\",\n        \":xla_device_compiler_client\",\n        \"//tensorflow/core/tpu:tpu_defs\",\n    ],\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"xla_device\",\n    hdrs = [\n        \"xla_compile_on_demand_op.h\",\n        \"xla_device.h\",\n        \"xla_device_context.h\",\n        \"xla_device_ops.h\",\n    ],\n    # Public visibility is needed for external TF/XLA backends.\n    visibility = [\"//visibility:public\"],\n    deps = XLA_DEVICE_DEPS + [\n        \":device_compilation_profiler\",\n        \":jit_compilation_passes\",\n        \":xla_device_no_jit_rewrite_registration\",\n    ],\n)\n\ncc_library(\n    name = \"shape_inference_helpers\",\n    srcs = [\"shape_inference_helpers.cc\"],\n    hdrs = [\"shape_inference_helpers.h\"],\n    visibility = [\":friends\"],\n    deps = select({\n        \"//tensorflow:android\": [\n            \"//tensorflow/core:portable_tensorflow_lib\",\n        ],\n        \"//conditions:default\": [\n            \"//tensorflow/core:graph\",\n        ],\n    }),\n)\n\ncc_library(\n    name = \"flags\",\n    srcs = [\"flags.cc\"],\n    hdrs = [\"flags.h\"],\n    visibility = [\":friends\"],\n    deps = [\n        \"//tensorflow/compiler/mlir/tensorflow:dump_graph\",\n        \"//tensorflow/compiler/xla:parse_flags_from_env\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@com_google_absl//absl/base\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:optional\",\n    ],\n)\n\n# Header-only version of \"flags\" library, for linking from the shared object\n# without ODR violations.\ncc_library(\n    name = \"flags_headers\",\n    hdrs = [\"flags.h\"],\n    visibility = [\":friends\"],\n    deps = [\n        \"//tensorflow/compiler/mlir/tensorflow:dump_graph\",\n        \"//tensorflow/compiler/xla:parse_flags_from_env\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/protobuf:for_core_protos_cc\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:optional\",\n    ],\n)\n\ncc_header_only_library(\n    name = \"flags_headers_only\",\n    features = [\n        \"-parse_headers\",  # buildifier: disable=no-parse-headers\n    ],\n    deps = [\":flags_headers\"],\n)\n\ncc_library(\n    name = \"common\",\n    srcs = [\n        \"defs.cc\",\n    ],\n    hdrs = [\n        \"defs.h\",\n    ],\n    visibility = [\":friends\"],\n)\n\n# Internal targets below this point.\n\ncc_library(\n    name = \"xla_launch_util\",\n    srcs = [\"xla_launch_util.cc\"],\n    hdrs = [\"xla_launch_util.h\"],\n    visibility = [\n        \":internal\",\n        # We reuse VariableInfo in TFRT's implementation of TpuExecuteOp.\n        \"//learning/brain/tfrt/tf_tpu:__pkg__\",\n        \"//learning/brain/tfrt/tpu_plugin:__pkg__\",\n        \"//learning/brain/tfrt/tpu_common:__pkg__\",\n        \"//tensorflow/core/common_runtime/next_pluggable_device:__pkg__\",\n    ],\n    deps = [\n        \":common\",\n        \":xla_tensor\",\n        \"//tensorflow/compiler/tf2xla:common\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/xla:shape_util\",\n        \"//tensorflow/compiler/xla:statusor\",\n        \"//tensorflow/compiler/xla/client:client_library\",\n        \"//tensorflow/compiler/xla/client:local_client\",\n        \"//tensorflow/compiler/xla/service:shaped_buffer\",\n        \"//tensorflow/compiler/xla/stream_executor:device_memory_allocator\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:gpu_runtime\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@com_google_absl//absl/algorithm:container\",\n        \"@com_google_absl//absl/cleanup\",\n        \"@com_google_absl//absl/memory\",\n    ],\n)\n\ncc_library(\n    name = \"xla_compile_util\",\n    srcs = [\"xla_compile_util.cc\"],\n    hdrs = [\"xla_compile_util.h\"],\n    visibility = [\n        \":internal\",\n        \"//tensorflow/core/common_runtime/next_pluggable_device:__pkg__\",\n    ],\n    deps = [\n        \":flags_headers\",\n        \"//tensorflow/compiler/tf2xla:xla_argument\",\n        \"//tensorflow/core:core_cpu_base\",\n        \"//tensorflow/core/util:determinism\",\n    ],\n)\n\ntf_cc_test(\n    name = \"xla_compile_util_test\",\n    srcs = [\n        \"xla_compile_util_test.cc\",\n    ],\n    deps = [\n        \":xla_compile_util\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/framework:fake_input\",\n        \"//tensorflow/core/kernels:identity_op\",\n        \"//tensorflow/core/kernels:ops_testutil\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\ntf_proto_library(\n    name = \"xla_compilation_cache_proto\",\n    srcs = [\"xla_compilation_cache.proto\"],\n    cc_api_version = 2,\n    protodeps = tf_additional_all_protos() + [\"//tensorflow/compiler/xla/service:hlo_proto\"],\n    visibility = [\"//visibility:public\"],\n)\n\ncc_library(\n    name = \"device_compiler\",\n    hdrs = [\"device_compiler.h\"],\n    copts = tf_copts(),\n    visibility = [\n        \":internal\",\n        \"//tensorflow/core/common_runtime/next_pluggable_device:__pkg__\",\n    ],\n    deps = [\n        \":device_compilation_cache\",\n        \":device_compilation_cluster_signature\",\n        \":device_compilation_profiler\",\n        \":device_compiler_client\",\n        \":device_executable_persistor\",\n        \":flags_headers\",\n        \":tf_graph_to_hlo_compiler\",\n        \":xla_compile_util\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/xla/client:local_client\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_lite\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core/platform:thread_annotations\",\n        \"@com_google_absl//absl/base\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/types:optional\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)\n\ntf_cc_test(\n    name = \"device_compiler_disable_test\",\n    srcs = [\n        \"device_compiler_disable_test.cc\",\n    ],\n    deps = [\n        \":device_compilation_profiler\",\n        \":device_compiler\",\n        \":flags\",\n        \":xla_cpu_jit\",\n        \":xla_device_compiler_client\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/xla/client:client_library\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ncc_library(\n    name = \"jit_compilation_passes\",\n    srcs = [\"jit_compilation_pass_registration.cc\"],\n    deps = [\n        \":compilation_passes\",\n        \":xla_activity_logging_listener\",\n        \"//tensorflow/compiler/tf2xla:functionalize_control_flow_pass_registration\",\n        \"//tensorflow/compiler/tf2xla:mlir_bridge_pass_registration\",\n        \"//tensorflow/core:core_cpu_internal\",\n    ] + tf_jit_compilation_passes_extra_deps(),\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"get_compiler_ir\",\n    srcs = [\"get_compiler_ir.cc\"],\n    hdrs = [\"get_compiler_ir.h\"],\n    visibility = [\":internal\"],\n    deps = [\n        \":compilability_check_util\",\n        \":device_compiler\",\n        \":xla_device_no_jit_rewrite_registration\",\n        \":xla_launch_util\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/xla:status_macros\",\n        \"//tensorflow/compiler/xla/client:executable_build_options\",\n        \"//tensorflow/compiler/xla/client:local_client\",\n        \"//tensorflow/compiler/xla/service:hlo_graph_dumper\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/common_runtime:core_cpu_internal\",\n        \"//tensorflow/core/common_runtime/eager:tensor_handle\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/strings:str_format\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n    alwayslink = 1,\n)\n\n# Header-only version of \"flags\" library, for linking from the shared object\n# without ODR violations.\ncc_library(\n    name = \"get_compiler_ir_hdrs\",\n    textual_hdrs = [\"get_compiler_ir.h\"],\n    visibility = [\":internal\"],\n    deps = [\n        \"//tensorflow/compiler/xla:statusor\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/strings:str_format\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)\n\ncc_header_only_library(\n    name = \"get_compiler_ir_hdrs_only\",\n    features = [\n        \"-parse_headers\",  # buildifier: disable=no-parse-headers\n    ],\n    deps = [\":get_compiler_ir_hdrs\"],\n)\n\n# This target can be used by XLA device plugins to prevent circular dependencies, and provides access to all of the required headers for building a device library.\ncc_header_only_library(\n    name = \"xla_jit_headers_lib\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":xla_cpu_device\",\n        \":xla_cpu_jit\",\n        \":xla_gpu_device\",\n        \":xla_gpu_jit\",\n    ],\n)\n\ncc_library(\n    name = \"xla_kernel_creator\",\n    srcs = [\n        \"xla_kernel_creator.cc\",\n        \"xla_kernel_creator.h\",\n    ],\n    visibility = [\n        \":internal\",\n        \"//tensorflow/core/common_runtime/eager:__pkg__\",\n    ],\n    deps = [\n        \":common\",\n        \":compilability_check_util\",\n        \":compilation_passes\",\n        \":flags\",\n        \":jit_compilation_passes\",\n        \"//tensorflow/compiler/jit/kernels:xla_ops_no_jit_rewrite_registration\",\n        \"//tensorflow/compiler/tf2xla:mlir_bridge_pass\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/strings:str_format\",\n    ],\n    alwayslink = 1,\n)\n\ntf_cc_test(\n    name = \"xla_kernel_creator_test\",\n    srcs = [\n        \"xla_kernel_creator.h\",\n        \"xla_kernel_creator_test.cc\",\n    ],\n    deps = [\n        \":xla_kernel_creator\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:session_options\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"@com_google_absl//absl/memory\",\n    ],\n)\n\ncc_library(\n    name = \"resource_operation_safety_analysis\",\n    srcs = [\"resource_operation_safety_analysis.cc\"],\n    hdrs = [\"resource_operation_safety_analysis.h\"],\n    deps = [\n        \":xla_cluster_util\",\n        \"//tensorflow/compiler/tf2xla:resource_operation_table\",\n        \"//tensorflow/compiler/xla/service/graphcycles\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:graph\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:optional\",\n    ],\n)\n\ntf_cc_test(\n    name = \"resource_operation_safety_analysis_test\",\n    srcs = [\"resource_operation_safety_analysis_test.cc\"],\n    deps = [\n        \":common\",\n        \":resource_operation_safety_analysis\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:cc_ops_internal\",\n        \"//tensorflow/cc:function_ops\",\n        \"//tensorflow/cc:functional_ops\",\n        \"//tensorflow/cc:ops\",\n        \"//tensorflow/cc:resource_variable_ops\",\n        \"//tensorflow/cc:sendrecv_ops\",\n        \"//tensorflow/compiler/jit/kernels:xla_ops\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla/kernels:xla_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:graph\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"shape_inference\",\n    srcs = [\"shape_inference.cc\"],\n    hdrs = [\"shape_inference.h\"],\n    visibility = [\":friends\"],\n    deps = [\n        \":shape_inference_helpers\",\n        \"//tensorflow/compiler/xla:statusor\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:graph\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ],\n)\n\ncc_library(\n    name = \"test_util\",\n    testonly = 1,\n    srcs = [\"test_util.cc\"],\n    hdrs = [\"test_util.h\"],\n    deps = [\n        \":shape_inference\",\n        \"//tensorflow/compiler/xla:status_macros\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"shape_inference_test\",\n    srcs = [\"shape_inference_test.cc\"],\n    deps = [\n        \":shape_inference\",\n        \":test_util\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:cc_ops_internal\",\n        \"//tensorflow/cc:ops\",\n        \"//tensorflow/cc:resource_variable_ops\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:ops\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/kernels:constant_op\",\n    ],\n)\n\ncc_library(\n    name = \"encapsulate_util\",\n    srcs = [\"encapsulate_util.cc\"],\n    hdrs = [\"encapsulate_util.h\"],\n    deps = [\n        \":shape_inference\",\n        \"//tensorflow/compiler/tf2xla:tf2xla_util\",\n        \"//tensorflow/compiler/xla/stream_executor/lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:graph\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:optional\",\n    ],\n)\n\ntf_cc_test(\n    name = \"encapsulate_util_test\",\n    srcs = [\"encapsulate_util_test.cc\"],\n    deps = [\n        \":encapsulate_util\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:scope\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:ops\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ncc_library(\n    name = \"compilation_passes\",\n    srcs = [\n        \"build_xla_ops_pass.cc\",\n        \"clone_constants_for_better_clustering.cc\",\n        \"cluster_scoping_pass.cc\",\n        \"deadness_analysis.cc\",\n        \"deadness_analysis_internal.h\",\n        \"encapsulate_subgraphs_pass.cc\",\n        \"encapsulate_xla_computations_pass.cc\",\n        \"extract_outside_compilation_pass.cc\",\n        \"force_xla_constants_on_host_pass.cc\",\n        \"increase_dynamism_for_auto_jit_pass.cc\",\n        \"mark_for_compilation_pass.cc\",\n        \"mark_for_compilation_pass_test_helper.cc\",\n        \"partially_decluster_pass.cc\",\n        \"report_clustering_info_pass.cc\",\n    ],\n    hdrs = [\n        \"build_xla_ops_pass.h\",\n        \"clone_constants_for_better_clustering.h\",\n        \"cluster_scoping_pass.h\",\n        \"deadness_analysis.h\",\n        \"encapsulate_subgraphs_pass.h\",\n        \"encapsulate_xla_computations_pass.h\",\n        \"extract_outside_compilation_pass.h\",\n        \"force_xla_constants_on_host_pass.h\",\n        \"increase_dynamism_for_auto_jit_pass.h\",\n        \"mark_for_compilation_pass.h\",\n        \"mark_for_compilation_pass_test_helper.h\",\n        \"partially_decluster_pass.h\",\n        \"report_clustering_info_pass.h\",\n    ],\n    visibility = [\n        \":internal\",\n        \"//tensorflow/core/tfrt/utils:__pkg__\",\n        \"//third_party/cloud_tpu/inference_converter:__pkg__\",\n    ],\n    deps = [\n        \"compilability_check_util\",\n        \":common\",\n        \":device_util\",\n        \":encapsulate_util\",\n        \":flags\",\n        \":resource_operation_safety_analysis\",\n        \":shape_inference_helpers\",\n        \":xla_activity_listener\",\n        \":xla_cluster_util\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:functional_ops\",\n        \"//tensorflow/cc:ops\",\n        \"//tensorflow/cc:scope\",\n        \"//tensorflow/cc:scope_internal\",\n        \"//tensorflow/compiler/jit/ops:xla_ops\",\n        \"//tensorflow/compiler/tf2xla:resource_operation_table\",\n        \"//tensorflow/compiler/tf2xla:side_effect_util\",\n        \"//tensorflow/compiler/tf2xla:tf2xla_util\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n        \"//tensorflow/compiler/tf2xla/cc:xla_jit_ops\",\n        \"//tensorflow/compiler/tf2xla/cc:xla_ops\",\n        \"//tensorflow/compiler/xla:status_macros\",\n        \"//tensorflow/compiler/xla:statusor\",\n        \"//tensorflow/compiler/xla:union_find\",\n        \"//tensorflow/compiler/xla:util\",\n        \"//tensorflow/compiler/xla:xla_data_proto_cc\",\n        \"//tensorflow/compiler/xla/service/graphcycles\",\n        \"//tensorflow/compiler/xla/stream_executor/lib\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_internal\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"@com_google_absl//absl/algorithm:container\",\n        \"@com_google_absl//absl/base\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n        \"@com_google_absl//absl/container:inlined_vector\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:optional\",\n    ],\n)\n\ncc_library(\n    name = \"xla_cluster_util\",\n    srcs = [\"xla_cluster_util.cc\"],\n    hdrs = [\"xla_cluster_util.h\"],\n    deps = [\n        \":flags\",\n        \":xla_activity_proto_cc\",\n        \"//tensorflow/compiler/xla:status_macros\",\n        \"//tensorflow/compiler/xla:statusor\",\n        \"//tensorflow/compiler/xla/service/graphcycles\",\n        \"//tensorflow/compiler/xla/stream_executor/lib\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:graph\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/framework:bounds_check\",\n        \"@com_google_absl//absl/algorithm:container\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n        \"@com_google_absl//absl/container:inlined_vector\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:optional\",\n    ],\n)\n\ncc_library(\n    name = \"device_util\",\n    srcs = [\"device_util.cc\"],\n    hdrs = [\"device_util.h\"],\n    deps = [\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n        \"//tensorflow/compiler/xla:status_macros\",\n        \"//tensorflow/compiler/xla:statusor\",\n        \"//tensorflow/core:framework\",\n        \"@com_google_absl//absl/algorithm:container\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)\n\ntf_cc_test(\n    name = \"device_util_test\",\n    srcs = [\"device_util_test.cc\"],\n    deps = [\n        \":device_util\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n    ],\n)\n\ntf_cc_test(\n    name = \"deadness_analysis_test\",\n    size = \"small\",\n    srcs = [\n        \"deadness_analysis_internal.h\",\n        \"deadness_analysis_test.cc\",\n    ],\n    deps = [\n        \":common\",\n        \":compilation_passes\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:cc_ops_internal\",\n        \"//tensorflow/cc:function_ops\",\n        \"//tensorflow/cc:ops\",\n        \"//tensorflow/cc:sendrecv_ops\",\n        \"//tensorflow/compiler/jit/kernels:xla_ops\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla/kernels:xla_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:graph\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n    ],\n)\n\ncc_library(\n    name = \"compilation_passes_test_main\",\n    testonly = True,\n    srcs = [\"compilation_passes_test_main.cc\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":flags\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_cc_test(\n    name = \"compilation_passes_test\",\n    size = \"small\",\n    srcs = [\n        \"build_xla_ops_pass_test.cc\",\n        \"clone_constants_for_better_clustering_test.cc\",\n        \"cluster_scoping_pass_test.cc\",\n        \"encapsulate_subgraphs_pass_test.cc\",\n        \"encapsulate_xla_computations_pass_test.cc\",\n        \"extract_outside_compilation_pass_test.cc\",\n        \"force_xla_constants_on_host_pass_test.cc\",\n        \"increase_dynamism_for_auto_jit_pass_test.cc\",\n        \"mark_for_compilation_pass_test.cc\",\n        \"partially_decluster_pass_test.cc\",\n        \"rearrange_function_argument_pass_test.cc\",\n    ],\n    tags = [\n        # TODO(b/141643254) Re-enable msan after fixing\n        # use-of-uninitialized-value error.\n        \"nomsan\",\n    ] + tf_cuda_tests_tags(),\n    deps = [\n        \":common\",\n        \":compilability_check_util\",\n        \":compilation_passes\",\n        \":compilation_passes_test_main\",\n        \":encapsulate_util\",\n        \":flags\",\n        \":node_matchers\",\n        \":test_util\",\n        \":xla_cluster_util\",\n        \":xla_cpu_device\",\n        \":xla_gpu_device\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:cc_ops_internal\",\n        \"//tensorflow/cc:function_ops\",\n        \"//tensorflow/cc:functional_ops\",\n        \"//tensorflow/cc:ops\",\n        \"//tensorflow/cc:resource_variable_ops\",\n        \"//tensorflow/cc:scope\",\n        \"//tensorflow/cc:sendrecv_ops\",\n        \"//tensorflow/compiler/jit/kernels:xla_ops\",\n        \"//tensorflow/compiler/tf2xla:rearrange_function_argument\",\n        \"//tensorflow/compiler/tf2xla:side_effect_util\",\n        \"//tensorflow/compiler/tf2xla:test_util\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla/cc:xla_jit_ops\",\n        \"//tensorflow/compiler/tf2xla/cc:xla_ops\",\n        \"//tensorflow/compiler/tf2xla/kernels:xla_dummy_ops\",\n        \"//tensorflow/compiler/tf2xla/kernels:xla_ops\",\n        \"//tensorflow/compiler/xla:test\",\n        \"//tensorflow/core:all_kernels\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:session_options\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:testlib\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)\n\ntf_cc_test(\n    name = \"xla_cluster_util_test\",\n    size = \"small\",\n    srcs = [\n        \"xla_cluster_util_test.cc\",\n    ],\n    deps = [\n        \":common\",\n        \":xla_cluster_util\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:cc_ops_internal\",\n        \"//tensorflow/cc:function_ops\",\n        \"//tensorflow/cc:functional_ops\",\n        \"//tensorflow/cc:ops\",\n        \"//tensorflow/compiler/jit/kernels:xla_ops\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla/kernels:xla_ops\",\n        \"//tensorflow/compiler/xla:status_macros\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:core_cpu_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core:testlib\",\n        \"@com_google_absl//absl/algorithm:container\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"node_matchers\",\n    testonly = True,\n    srcs = [\"node_matchers.cc\"],\n    hdrs = [\"node_matchers.h\"],\n    deps = [\n        \"//tensorflow/cc:ops\",\n        \"//tensorflow/compiler/xla:test\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:graph\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@com_google_absl//absl/algorithm:container\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:optional\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)\n\ntf_cc_test(\n    name = \"node_matchers_test\",\n    srcs = [\"node_matchers_test.cc\"],\n    deps = [\n        \":node_matchers\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:cc_ops_internal\",\n        \"//tensorflow/cc:ops\",\n        \"//tensorflow/core:ops\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ncc_library(\n    name = \"compilability_check_util\",\n    srcs = [\"compilability_check_util.cc\"],\n    hdrs = [\"compilability_check_util.h\"],\n    visibility = [\n        \":friends\",\n    ],\n    deps = [\n        \":common\",\n        \":device_util\",\n        \":flags\",\n        \":resource_operation_safety_analysis\",\n        \":xla_activity_listener\",\n        \":xla_activity_proto_cc\",\n        \":xla_cluster_util\",\n        \"//tensorflow/compiler/tf2xla:resource_operation_table\",\n        \"//tensorflow/compiler/tf2xla:tf2xla_util\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla:xla_op_registry\",\n        \"//tensorflow/compiler/xla:statusor\",\n        \"//tensorflow/compiler/xla:union_find\",\n        \"//tensorflow/compiler/xla:util\",\n        \"//tensorflow/compiler/xla/service/graphcycles\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:graph\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@com_google_absl//absl/algorithm:container\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:optional\",\n    ],\n)\n\ntf_cc_test(\n    name = \"compilability_check_util_test\",\n    srcs = [\"compilability_check_util_test.cc\"],\n    deps = [\n        \":compilability_check_util\",\n        \":xla_cpu_device\",\n        \":xla_cpu_jit\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:function_ops\",\n        \"//tensorflow/cc:functional_ops\",\n        \"//tensorflow/cc:ops\",\n        \"//tensorflow/cc:scope\",\n        \"//tensorflow/compiler/tf2xla:test_util\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/tf2xla/cc:xla_jit_ops\",\n        \"//tensorflow/compiler/tf2xla/cc:xla_ops\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:ops\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"@com_google_absl//absl/memory\",\n    ],\n)\n\ntf_cc_test(\n    name = \"xla_activity_listener_test\",\n    srcs = [\"xla_activity_listener_test.cc\"],\n    deps = [\n        \":flags\",\n        \":xla_activity_listener\",\n        \":xla_cpu_device\",\n        \":xla_cpu_jit\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:ops\",\n        \"//tensorflow/core:all_kernels\",\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:ops\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core/common_runtime:direct_session_internal\",\n        \"//tensorflow/core/kernels:cwise_op\",\n        \"//tensorflow/core/kernels:matmul_op\",\n        \"//tensorflow/core/kernels:partitioned_function_ops\",\n    ],\n)\n\ntf_custom_op_py_library(\n    name = \"xla_ops_py\",\n    kernels = [\"//tensorflow/compiler/jit/ops:xla_ops\"],\n    visibility = [\n        \":friends\",\n    ],\n    deps = [\n        \"//tensorflow/compiler/jit/ops:xla_ops_grad\",\n        \"//tensorflow/compiler/jit/ops:xla_ops_wrapper_py\",\n    ],\n)\n\ncc_library(\n    name = \"xla_activity_listener\",\n    srcs = [\"xla_activity_listener.cc\"],\n    hdrs = [\"xla_activity_listener.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":xla_activity_proto_cc\",\n        \"//tensorflow/core:lib\",\n        \"@com_google_absl//absl/synchronization\",\n    ],\n)\n\ntf_proto_library(\n    name = \"xla_activity_proto\",\n    srcs = [\"xla_activity.proto\"],\n    cc_api_version = 2,\n    protodeps = tf_additional_all_protos(),\n)\n\ncc_library(\n    name = \"xla_activity_logging_listener\",\n    srcs = [\"xla_activity_logging_listener.cc\"],\n    deps = [\n        \":xla_activity_listener\",\n        \":xla_activity_proto_cc\",\n        \"//tensorflow/core:lib\",\n        \"@com_google_absl//absl/memory\",\n    ],\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"tf_to_hlo_compiler\",\n    hdrs = [\"tf_to_hlo_compiler.h\"],\n    deps = [\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/core:framework\",\n    ],\n)\n\ncc_library(\n    name = \"tf_graph_to_hlo_compiler\",\n    srcs = [\"tf_graph_to_hlo_compiler.cc\"],\n    hdrs = [\"tf_graph_to_hlo_compiler.h\"],\n    deps = [\n        \":tf_to_hlo_compiler\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n    ],\n)\n\ncc_library(\n    name = \"device_compilation_profiler\",\n    srcs = [\"device_compilation_profiler.cc\"],\n    hdrs = [\"device_compilation_profiler.h\"],\n    deps = [\n        \":xla_activity_listener\",\n        \":xla_activity_proto_cc\",\n        \":xla_compile_util\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/platform:errors\",\n        \"//tensorflow/core/platform:status\",\n        \"//tensorflow/tsl/platform:mutex\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"device_compiler_client\",\n    srcs = [\"device_compiler_client.cc\"],\n    hdrs = [\"device_compiler_client.h\"],\n    visibility = [\n        \":internal\",\n        \"//tensorflow/core/common_runtime/next_pluggable_device:__pkg__\",\n    ],\n    deps = [\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/xla/client:executable_build_options\",\n        \"//tensorflow/core/util:determinism\",\n    ],\n)\n\ntf_cc_test(\n    name = \"device_compiler_client_test\",\n    srcs = [\"device_compiler_client_test.cc\"],\n    deps = [\n        \":device_compiler_client\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\ncc_library(\n    name = \"xla_device_compiler_client\",\n    srcs = [\"xla_device_compiler_client.cc\"],\n    hdrs = [\"xla_device_compiler_client.h\"],\n    deps = [\n        \":device_compiler_client\",\n        \"//tensorflow/compiler/xla/client:local_client\",\n    ],\n)\n\ncc_library(\n    name = \"device_executable_persistor\",\n    hdrs = [\"device_executable_persistor.h\"],\n    deps = [\n        \":xla_compilation_cache_proto_cc\",\n        \":xla_device_compiler_client\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/compiler/xla:util\",\n        \"//tensorflow/compiler/xla/client:local_client\",\n        \"//tensorflow/compiler/xla/pjrt:pjrt_client\",\n        \"//tensorflow/compiler/xla/service:hlo_proto_cc\",\n        \"//tensorflow/core:core_cpu_base\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib_headers_for_pybind\",\n        \"//tensorflow/core/platform:path\",\n        \"//tensorflow/core/platform:status\",\n        \"//tensorflow/core/platform:statusor\",\n        \"//tensorflow/tsl/platform:statusor\",\n    ],\n)\n\ncc_library(\n    name = \"device_compilation_cache\",\n    hdrs = [\"device_compilation_cache.h\"],\n    deps = [\n        \":device_compilation_cluster_signature\",\n        \":device_compiler_client\",\n        \":xla_compile_util\",\n        \"//tensorflow/compiler/tf2xla:xla_compiler\",\n        \"//tensorflow/core:framework_lite\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"device_compilation_cluster_signature\",\n    srcs = [\"device_compilation_cluster_signature.cc\"],\n    hdrs = [\"device_compilation_cluster_signature.h\"],\n    deps = [\"//tensorflow/compiler/tf2xla:xla_compiler\"],\n)\n\ncc_library(\n    name = \"pjrt_device_compiler_client\",\n    srcs = [\"pjrt_device_compiler_client.cc\"],\n    hdrs = [\"pjrt_device_compiler_client.h\"],\n    deps = [\n        \":device_compiler_client\",\n        \"//tensorflow/compiler/xla/pjrt:pjrt_client\",\n    ],\n)\n\ncc_library(\n    name = \"pjrt_device_context\",\n    srcs = [\n        \"pjrt_device_context.cc\",\n    ],\n    hdrs = [\n        \"pjrt_device_context.h\",\n    ],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"//tensorflow/compiler/tf2xla:common\",\n        \"//tensorflow/compiler/xla/pjrt:pjrt_client\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core/platform:status\",\n        \"//tensorflow/core/profiler/lib:traceme\",\n        \"//tensorflow/core/tfrt/common:async_value_tensor\",\n        \"//tensorflow/core/tfrt/common:pjrt_util\",\n    ],\n)\n\ntf_cc_test(\n    name = \"device_compilation_cluster_signature_test\",\n    srcs = [\n        \"device_compilation_cluster_signature_test.cc\",\n    ],\n    deps = [\n        \":device_compilation_cluster_signature\",\n        \":flags\",\n        \"//tensorflow/compiler/tf2xla:common\",\n        \"//tensorflow/compiler/xla/client:client_library\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ntf_cc_test(\n    name = \"device_compilation_profiler_test\",\n    srcs = [\"device_compilation_profiler_test.cc\"],\n    deps = [\n        \":device_compilation_profiler\",\n        \":xla_activity_proto_cc\",\n        \"//tensorflow/compiler/jit/tests:device_compiler_test_helper\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\ntf_cc_test(\n    name = \"device_executable_persistor_test\",\n    srcs = [\"device_executable_persistor_test.cc\"],\n    deps = [\n        \":device_compiler_client\",\n        \":device_executable_persistor\",\n        \":pjrt_device_compiler_client\",\n        \":xla_compilation_cache_proto_cc\",\n        \":xla_cpu_device\",\n        \":xla_cpu_jit\",\n        \":xla_device_compiler_client\",\n        \"//tensorflow/cc:function_ops\",\n        \"//tensorflow/cc:math_ops\",\n        \"//tensorflow/cc:scope\",\n        \"//tensorflow/compiler/xla/client:client_library\",\n        \"//tensorflow/compiler/xla/client:executable_build_options\",\n        \"//tensorflow/compiler/xla/client:local_client\",\n        \"//tensorflow/compiler/xla/pjrt:pjrt_client\",\n        \"//tensorflow/compiler/xla/pjrt:tfrt_cpu_pjrt_client\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core/platform:errors\",\n        \"//tensorflow/core/platform:status_matchers\",\n        \"//tensorflow/core/platform:statusor\",\n        \"//tensorflow/core/tfrt/common:pjrt_util\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\ntf_cc_test(\n    name = \"device_compilation_cache_test\",\n    srcs = [\"device_compilation_cache_test.cc\"],\n    deps = [\n        \":device_compilation_cache\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core/platform:errors\",\n        \"//tensorflow/tsl/protobuf:error_codes_proto_impl_cc\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)"