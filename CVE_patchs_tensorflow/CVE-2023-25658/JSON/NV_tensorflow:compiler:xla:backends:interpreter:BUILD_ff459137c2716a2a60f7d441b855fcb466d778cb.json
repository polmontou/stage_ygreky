"load(\"//tensorflow/tsl/platform:rules_cc.bzl\", \"cc_library\")\nload(\n    \"//tensorflow/tsl/platform:build_config_root.bzl\",\n    \"if_static\",\n)\n\npackage(\n    # copybara:uncomment default_applicable_licenses = [\"//tensorflow:license\"],\n    default_visibility = [\"//visibility:public\"],\n    licenses = [\"notice\"],\n)\n\ncc_library(\n    name = \"interpreter_transfer_manager\",\n    srcs = [\"interpreter_transfer_manager.cc\"],\n    hdrs = [\"interpreter_transfer_manager.h\"],\n    deps = [\n        \"//tensorflow/compiler/xla/backends/interpreter:platform_id\",\n        \"//tensorflow/compiler/xla/service:generic_transfer_manager\",\n        \"//tensorflow/compiler/xla/service:transfer_manager\",\n        \"@com_google_absl//absl/memory\",\n    ],\n    alwayslink = True,  # Contains per-platform transfer manager registration\n)\n\ncc_library(\n    name = \"compiler\",\n    srcs = [\"compiler.cc\"],\n    hdrs = [\"compiler.h\"],\n    deps = [\n        \":executable\",\n        \":platform_id\",\n        \"//tensorflow/compiler/xla:status\",\n        \"//tensorflow/compiler/xla:status_macros\",\n        \"//tensorflow/compiler/xla:statusor\",\n        \"//tensorflow/compiler/xla/hlo/ir:hlo\",\n        \"//tensorflow/compiler/xla/service:algebraic_simplifier\",\n        \"//tensorflow/compiler/xla/service:batchnorm_expander\",\n        \"//tensorflow/compiler/xla/service:cholesky_expander\",\n        \"//tensorflow/compiler/xla/service:comparison_expander\",\n        \"//tensorflow/compiler/xla/service:compiler\",\n        \"//tensorflow/compiler/xla/service:computation_placer\",\n        \"//tensorflow/compiler/xla/service:custom_call_target_registry\",\n        \"//tensorflow/compiler/xla/service:dynamic_index_splitter\",\n        \"//tensorflow/compiler/xla/service:eigh_expander\",\n        \"//tensorflow/compiler/xla/service:executable\",\n        \"//tensorflow/compiler/xla/service:flatten_call_graph\",\n        \"//tensorflow/compiler/xla/service:hlo_constant_folding\",\n        \"//tensorflow/compiler/xla/service:hlo_cost_analysis\",\n        \"//tensorflow/compiler/xla/service:hlo_cse\",\n        \"//tensorflow/compiler/xla/service:hlo_dce\",\n        \"//tensorflow/compiler/xla/service:hlo_module_config\",\n        \"//tensorflow/compiler/xla/service:hlo_pass\",\n        \"//tensorflow/compiler/xla/service:hlo_pass_pipeline\",\n        \"//tensorflow/compiler/xla/service:layout_assignment\",\n        \"//tensorflow/compiler/xla/service:map_inliner\",\n        \"//tensorflow/compiler/xla/service:qr_expander\",\n        \"//tensorflow/compiler/xla/service:reshape_mover\",\n        \"//tensorflow/compiler/xla/service:triangular_solve_expander\",\n        \"//tensorflow/compiler/xla/service:while_loop_simplifier\",\n        \"//tensorflow/compiler/xla/stream_executor\",\n        \"//tensorflow/tsl/platform:errors\",\n        \"//tensorflow/tsl/platform:status\",\n    ],\n    alwayslink = True,  # Contains compiler registration\n)\n\ncc_library(\n    name = \"platform_id\",\n    srcs = [\"platform_id.cc\"],\n    hdrs = [\"platform_id.h\"],\n    deps = [\"//tensorflow/compiler/xla/stream_executor\"] + if_static(\n        [\"@com_google_protobuf//:protobuf\"],\n        [\"@com_google_protobuf//:protobuf_headers\"],\n    ),\n)\n\ncc_library(\n    name = \"executable_base\",\n    srcs = [\"executable_base.cc\"],\n    hdrs = [\"executable_base.h\"],\n    deps = [\n        \"//tensorflow/compiler/xla:literal\",\n        \"//tensorflow/compiler/xla:shape_tree\",\n        \"//tensorflow/compiler/xla:shape_util\",\n        \"//tensorflow/compiler/xla:statusor\",\n        \"//tensorflow/compiler/xla:xla_proto_cc\",\n        \"//tensorflow/compiler/xla/hlo/ir:hlo\",\n        \"//tensorflow/compiler/xla/service:dynamic_dimension_inference\",\n        \"//tensorflow/compiler/xla/service:executable\",\n        \"//tensorflow/compiler/xla/service:hlo_execution_profile\",\n        \"//tensorflow/compiler/xla/service:maybe_owning_device_memory\",\n        \"//tensorflow/compiler/xla/service:shaped_buffer\",\n        \"//tensorflow/compiler/xla/service:transfer_manager\",\n        \"//tensorflow/compiler/xla/stream_executor\",\n        \"//tensorflow/compiler/xla/stream_executor:event\",\n        \"//tensorflow/tsl/platform:statusor\",\n    ],\n)\n\ncc_library(\n    name = \"executable\",\n    srcs = [\"executable.cc\"],\n    hdrs = [\"executable.h\"],\n    deps = [\n        \":executable_base\",\n        \":executor\",\n        \"//tensorflow/compiler/xla:literal\",\n        \"//tensorflow/compiler/xla:shape_util\",\n        \"//tensorflow/compiler/xla:status_macros\",\n        \"//tensorflow/compiler/xla:statusor\",\n        \"//tensorflow/compiler/xla:types\",\n        \"//tensorflow/compiler/xla:xla_data_proto_cc\",\n        \"//tensorflow/compiler/xla/hlo/evaluator:hlo_evaluator\",\n        \"//tensorflow/compiler/xla/hlo/ir:hlo\",\n        \"//tensorflow/compiler/xla/service:executable\",\n        \"//tensorflow/compiler/xla/service:hlo_cost_analysis\",\n        \"//tensorflow/compiler/xla/service:hlo_execution_profile\",\n        \"//tensorflow/compiler/xla/service:hlo_module_config\",\n        \"//tensorflow/compiler/xla/service:maybe_owning_device_memory\",\n        \"//tensorflow/compiler/xla/service:shaped_buffer\",\n        \"//tensorflow/compiler/xla/service:transfer_manager\",\n        \"//tensorflow/compiler/xla/stream_executor\",\n        \"//tensorflow/tsl/platform:env\",\n        \"//tensorflow/tsl/platform:errors\",\n        \"//tensorflow/tsl/platform:logging\",\n        \"//tensorflow/tsl/platform:mutex\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)\n\ncc_library(\n    name = \"platform\",\n    srcs = [\"platform.cc\"],\n    hdrs = [\"platform.h\"],\n    deps = [\n        \":executor\",\n        \":platform_id\",\n        \"//tensorflow/compiler/xla/stream_executor\",\n        \"//tensorflow/compiler/xla/stream_executor/platform\",\n        \"//tensorflow/tsl/platform:status\",\n        \"@com_google_absl//absl/strings:str_format\",\n    ],\n    alwayslink = True,  # Registers itself with the MultiPlatformManager.\n)\n\ncc_library(\n    name = \"executor\",\n    srcs = [\"executor.cc\"],\n    hdrs = [\"executor.h\"],\n    deps = [\n        \"//tensorflow/compiler/xla:shape_util\",\n        \"//tensorflow/compiler/xla:status_macros\",\n        \"//tensorflow/compiler/xla:xla_data_proto_cc\",\n        \"//tensorflow/compiler/xla/stream_executor\",\n        \"//tensorflow/compiler/xla/stream_executor/host:host_stream\",\n        \"//tensorflow/compiler/xla/stream_executor/host:host_timer\",\n        \"//tensorflow/tsl/platform:logging\",\n        \"@com_google_absl//absl/functional:any_invocable\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)"