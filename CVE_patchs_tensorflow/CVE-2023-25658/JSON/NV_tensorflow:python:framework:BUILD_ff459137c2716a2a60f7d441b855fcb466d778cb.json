"# python/framework package\n\nload(\n    \"//tensorflow:tensorflow.bzl\",\n    \"if_not_windows\",\n    \"if_oss\",\n    \"if_xla_available\",\n    \"py_test\",\n    \"tf_cc_binary\",\n    \"tf_cc_shared_object\",\n    \"tf_cc_test\",\n    \"tf_gen_op_wrapper_py\",\n    \"tf_kernel_library\",\n)\nload(\"//tensorflow:tensorflow.default.bzl\", \"cuda_py_test\", \"tf_py_test\", \"tf_python_pybind_extension\")\nload(\"//tensorflow:pytype.default.bzl\", \"pytype_library\", \"pytype_strict_library\")\nload(\"//tensorflow/python/tpu:tpu.bzl\", \"tpu_py_test\")\nload(\"//tensorflow/core/platform:build_config.bzl\", \"pyx_library\", \"tf_additional_all_protos\", \"tf_additional_lib_deps\", \"tf_proto_library\", \"tf_protos_grappler\")  # @unused\nload(\"//tensorflow/core/platform:build_config_root.bzl\", \"if_static\", \"tf_additional_xla_deps_py\")\n\nvisibility = [\n    \"//tensorflow:__subpackages__\",\n    \"//tensorflow/dtensor:dtensor-internal\",\n    \"//learning/brain/tfrt:__subpackages__\",\n    \"//third_party/py/tensorflow_numerics:__subpackages__\",\n    \"//tensorflow_models/google:__subpackages__\",\n    \"//learning/brain/google/data:__subpackages__\",\n]\n\npackage(\n    # copybara:uncomment default_applicable_licenses = [\"//tensorflow:license\"],\n    default_visibility = visibility,\n    licenses = [\"notice\"],\n)\n\ntf_cc_shared_object(\n    name = \"test_file_system.so\",\n    srcs = [\"test_file_system.cc\"],\n    copts = if_not_windows([\"-Wno-sign-compare\"]),\n    linkopts = select({\n        \"//conditions:default\": [\n            \"-lm\",\n        ],\n        \"//tensorflow:macos\": [],\n        \"//tensorflow:windows\": [],\n    }),\n    deps = [\n        \"//tensorflow/core:framework_headers_lib\",\n        \"//third_party/eigen3\",\n        \"@com_google_protobuf//:protobuf_headers\",\n    ],\n)\n\ntf_py_test(\n    name = \"file_system_test\",\n    size = \"small\",\n    srcs = [\"file_system_test.py\"],\n    data = [\":test_file_system.so\"],\n    main = \"file_system_test.py\",\n    python_version = \"PY3\",\n    tags = [\n        \"no_pip\",  # Path issues due to test environment\n        \"no_windows\",\n        \"notap\",\n    ],\n    deps = [\n        \":for_generated_wrappers\",\n        \":framework\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:data_flow_ops\",\n        \"//tensorflow/python:io_ops\",\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\ncc_library(\n    name = \"python_op_gen\",\n    srcs = [\n        \"python_op_gen.cc\",\n        \"python_op_gen_internal.cc\",\n    ],\n    hdrs = [\n        \"python_op_gen.h\",\n        \"python_op_gen_internal.h\",\n    ],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":op_reg_offset_proto_cc\",\n        \":python_op_gen_annotator\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:op_gen_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n    alwayslink = 1,\n)\n\ncc_library(\n    name = \"python_op_gen_annotator\",\n    srcs = [\"python_op_gen_annotator.cc\"],\n    hdrs = [\"python_op_gen_annotator.h\"],\n    visibility = [\"//tensorflow:internal\"],\n    deps = [\n        \":kythe_metadata_proto_cc\",\n        \":op_reg_offset_proto_cc\",\n        \"//tensorflow/core:portable_gif_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/platform:stringpiece\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/strings:str_format\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)\n\ntf_cc_test(\n    name = \"python_op_gen_annotator_test\",\n    srcs = [\"python_op_gen_annotator_test.cc\"],\n    deps = [\n        \":kythe_metadata_proto_cc\",\n        \":python_op_gen_annotator\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//tensorflow/core/platform:protobuf\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_python_op_gen\",\n    srcs = [\"python_op_gen_wrapper.cc\"],\n    deps = [\n        \"//tensorflow/python:python_op_gen_headers_lib\",\n        \"//tensorflow/python/lib/core:pybind11_absl\",\n        \"//tensorflow/python/lib/core:pybind11_lib\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ncc_library(\n    name = \"python_op_gen_main\",\n    srcs = [\"python_op_gen_main.cc\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":op_reg_offset_proto_cc\",\n        \":python_op_gen\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:framework_internal\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:op_gen_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n    alwayslink = 1,\n)\n\ntf_cc_test(\n    name = \"python_op_gen_test\",\n    srcs = [\"python_op_gen_test.cc\"],\n    deps = [\n        \":op_reg_offset_proto_cc\",\n        \":python_op_gen\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:op_gen_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n    ],\n)\n\ntf_proto_library(\n    name = \"op_reg_offset_proto\",\n    srcs = [\"op_reg_offset.proto\"],\n    cc_api_version = 3,\n    visibility = [\"//tensorflow:internal\"],\n)\n\ntf_proto_library(\n    name = \"kythe_metadata_proto\",\n    srcs = [\"kythe_metadata.proto\"],\n    cc_api_version = 3,\n    visibility = [\"//tensorflow:internal\"],\n)\n\ntf_cc_binary(\n    name = \"offset_counter\",\n    srcs = [\"offset_counter.cc\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":offset_counter_helper\",\n        \":op_reg_offset_proto_cc\",\n        \"//tensorflow/tsl/platform:errors\",\n        \"//tensorflow/tsl/platform:platform_port\",\n        \"//tensorflow/tsl/platform:strcat\",\n        \"//tensorflow/tsl/platform:types\",\n        \"//tensorflow/tsl/util:command_line_flags\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ncc_library(\n    name = \"offset_counter_helper\",\n    srcs = [\"offset_counter_helper.cc\"],\n    hdrs = [\"offset_counter_helper.h\"],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":op_reg_offset_proto_cc\",\n        \"//tensorflow/tsl/platform:errors\",\n        \"//tensorflow/tsl/platform:regexp\",\n        \"//tensorflow/tsl/platform:status\",\n        \"//tensorflow/tsl/platform:strcat\",\n        \"//tensorflow/tsl/platform:types\",\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_cc_test(\n    name = \"offset_counter_helper_test\",\n    srcs = [\"offset_counter_helper_test.cc\"],\n    deps = [\n        \":offset_counter_helper\",\n        \":op_reg_offset_proto_cc\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"@com_google_absl//absl/strings:str_format\",\n    ],\n)\n\npy_library(\n    name = \"for_generated_wrappers\",\n    srcs_version = \"PY3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":device\",\n        \":device_spec\",\n        \":dtypes\",\n        \":function\",\n        \":op_def_library\",\n        \":op_def_registry\",\n        \":ops\",\n        \":registry\",\n        \":tensor_shape\",\n        \":versions\",\n    ],\n)\n\n# What is needed for tf_gen_op_wrapper_py. This is the same as\n# \"for_generated_wrappers\" minus the \"function\" dep. This is to avoid\n# circular dependencies, as \"function\" uses generated op wrappers.\npy_library(\n    name = \"for_generated_wrappers_v2\",\n    srcs_version = \"PY3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":constant_op\",\n        \":device\",\n        \":device_spec\",\n        \":dtypes\",\n        \":op_def_library\",\n        \":op_def_registry\",\n        \":ops\",\n        \":registry\",\n        \":tensor_shape\",\n        \":versions\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:core\",\n        \"//tensorflow/python/eager:execute\",\n        \"//tensorflow/tools/docs:doc_controls\",\n    ],\n)\n\npy_library(\n    name = \"subscribe\",\n    srcs = [\"subscribe.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":ops\",\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python:variables\",\n    ],\n)\n\npy_library(\n    name = \"framework\",\n    srcs = [\n        \"framework_lib.py\",\n        \"graph_io.py\",\n        \"importer.py\",\n        \"load_library.py\",\n        \"meta_graph.py\",\n    ],\n    srcs_version = \"PY3\",\n    deps = [\n        \":_pywrap_python_api_dispatcher\",\n        \":_pywrap_python_api_info\",\n        \":_pywrap_python_api_parameter_converter\",\n        \":_pywrap_python_op_gen\",\n        \":_errors_test_helper\",\n        \":composite_tensor\",\n        \":config\",\n        \":convert_to_constants\",\n        \":cpp_shape_inference_proto_py\",\n        \":errors\",\n        \":fast_tensor_util\",\n        \":for_generated_wrappers\",\n        \":function\",\n        \":graph_util\",\n        \":random_seed\",\n        \":sparse_tensor\",\n        \":tensor_spec\",\n        \":tensor_util\",\n        \":type_spec\",\n        \"//third_party/py/numpy\",\n        \"//tensorflow/python/client:_pywrap_debug_events_writer\",\n        \"//tensorflow/python/client:_pywrap_events_writer\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/lib/core:_pywrap_py_func\",  # TODO(b/142001480): remove once the bug is fixed.\n        \"//tensorflow/python/platform:_pywrap_stacktrace_handler\",\n        \"//tensorflow/python/util:_pywrap_checkpoint_reader\",\n        \"//tensorflow/python/util:_pywrap_kernel_registry\",\n        \"//tensorflow/python/util:_pywrap_nest\",\n        \"//tensorflow/python/util:_pywrap_stat_summarizer\",\n        \"//tensorflow/python/util:_pywrap_tfprof\",\n        \"//tensorflow/python/util:_pywrap_transform_graph\",\n        \"//tensorflow/python/util:_pywrap_util_port\",\n        \"//tensorflow/python/util:util\",\n        \"//tensorflow/python:_pywrap_py_exception_registry\",\n        \"//tensorflow/python:_pywrap_quantize_training\",\n        \"//tensorflow/python:_pywrap_utils\",\n        \"//tensorflow/python:lib\",\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python:pywrap_mlir\",\n        \"//tensorflow/python:pywrap_tensorflow\",\n        \"//tensorflow/python:pywrap_tf_session\",\n        \"//tensorflow/python:pywrap_tfe\",\n    ] + if_xla_available([\n        \"//tensorflow/python:_pywrap_tfcompile\",\n    ]),\n)\n\npy_library(\n    name = \"c_api_util\",\n    srcs = [\"c_api_util.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:pywrap_tf_session\",\n    ],\n)\n\npy_library(\n    name = \"common_shapes\",\n    srcs = [\"common_shapes.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":tensor_shape\",\n    ],\n)\n\npy_library(\n    name = \"constant_op\",\n    srcs = [\"constant_op.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":dtypes\",\n        \":ops\",\n        \":tensor_shape\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:execute\",\n        \"//tensorflow/python/profiler:trace\",\n    ],\n)\n\npy_library(\n    name = \"device_spec\",\n    srcs = [\"device_spec.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \"//tensorflow/python/util\",\n    ],\n)\n\npy_library(\n    name = \"device\",\n    srcs = [\"device.py\"],\n    srcs_version = \"PY3\",\n)\n\ntf_python_pybind_extension(\n    name = \"_dtypes\",\n    srcs = [\"dtypes.cc\"],\n    deps = [\n        \"//tensorflow/core:framework_headers_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//third_party/eigen3\",\n        \"@pybind11\",\n    ],\n)\n\npy_library(\n    name = \"dtypes\",\n    srcs = [\"dtypes.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":_dtypes\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/core/function/trace_type\",\n        \"//tensorflow/python:pywrap_tensorflow\",\n        \"//tensorflow/python/lib/core:_pywrap_bfloat16\",\n        \"//tensorflow/python/lib/core:_pywrap_custom_casts\",\n        \"//tensorflow/python/lib/core:_pywrap_float8\",\n        \"//tensorflow/python/types:doc_typealias\",\n    ],\n)\n\npy_library(\n    name = \"errors\",\n    srcs = [\n        \"errors.py\",\n        \"errors_impl.py\",\n    ],\n    srcs_version = \"PY3\",\n    deps = [\n        \":c_api_util\",\n        \"//tensorflow/python:_pywrap_py_exception_registry\",\n        \"//tensorflow/python:pywrap_tf_session\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\npy_library(\n    name = \"error_interpolation\",\n    srcs = [\n        \"error_interpolation.py\",\n    ],\n    srcs_version = \"PY3\",\n    deps = [\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"function\",\n    srcs = [\"function.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":dtypes\",\n        \":graph_to_function_def\",\n        \":op_def_registry\",\n        \":ops\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:pywrap_tf_session\",\n        \"//tensorflow/python:variable_scope\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\npy_library(\n    name = \"graph_to_function_def\",\n    srcs = [\"graph_to_function_def.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":op_def_registry\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\npy_library(\n    name = \"function_def_to_graph\",\n    srcs = [\"function_def_to_graph.py\"],\n    srcs_version = \"PY3\",\n    visibility = visibility,\n    deps = [\n        \":framework\",\n        \":function\",\n        \":ops\",\n        \":tensor_shape\",\n        \":versions\",\n        \"//tensorflow/core:protos_all_py\",\n    ],\n)\n\ntf_py_test(\n    name = \"function_def_to_graph_test\",\n    size = \"small\",\n    srcs = [\"function_def_to_graph_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_pip\"],\n    deps = [\n        \":constant_op\",\n        \":dtypes\",\n        \":function\",\n        \":function_def_to_graph\",\n        \":graph_to_function_def\",\n        \":op_def_library\",\n        \":ops\",\n        \":tensor_shape\",\n        \":tensor_spec\",\n        \":test_ops\",\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python/eager:def_function\",\n        \"//tensorflow/python/eager:function\",\n    ],\n)\n\npy_library(\n    name = \"graph_util\",\n    srcs = [\n        \"graph_util.py\",\n        \"graph_util_impl.py\",\n    ],\n    srcs_version = \"PY3\",\n    deps = [\n        \":_proto_comparators\",\n        \":dtypes\",\n        \":ops\",\n        \":tensor_util\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:platform\",\n    ],\n)\n\npy_library(\n    name = \"convert_to_constants\",\n    srcs = [\n        \"convert_to_constants.py\",\n    ],\n    srcs_version = \"PY3\",\n    visibility = visibility + [\n        \"//learning/deepmind/deepfunc:__subpackages__\",\n        \"//platforms/darwinn:__subpackages__\",\n    ],\n    deps = [\n        \":dtypes\",\n        \":ops\",\n        \":tensor_util\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python/grappler:tf_optimizer\",\n    ],\n)\n\npy_library(\n    name = \"kernels\",\n    srcs = [\n        \"kernels.py\",\n    ],\n    srcs_version = \"PY3\",\n    deps = [\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:pywrap_tf_session\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\npy_library(\n    name = \"op_def_library\",\n    srcs = [\"op_def_library.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":dtypes\",\n        \":op_callbacks\",\n        \":op_def_library_pybind\",\n        \":op_def_registry\",\n        \":ops\",\n        \":tensor_shape\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/core/config:flags_py\",\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_op_def_library_pybind\",\n    srcs = [\"op_def_library_pybind.cc\"],\n    deps = [\n        \":op_def_util_headers\",\n        \"//tensorflow/core:framework_headers_lib\",\n        \"//tensorflow/core:lib_headers_for_pybind\",\n        \"//tensorflow/core:lib_proto_parsing\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/python/lib/core:pybind11_status\",\n        \"//tensorflow/python/lib/core:safe_pyobject_ptr\",\n        \"//third_party/python_runtime:headers\",\n        \"@com_google_absl//absl/algorithm:container\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n        \"@com_google_absl//absl/strings\",\n        \"@pybind11\",\n    ],\n)\n\npytype_strict_library(\n    name = \"op_def_library_pybind\",\n    srcs = [\"op_def_library_pybind.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":_op_def_library_pybind\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:pywrap_tensorflow\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_op_def_registry\",\n    srcs = [\"op_def_registry.cc\"],\n    deps = [\n        \"//tensorflow/core:framework_headers_lib\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/python/lib/core:pybind11_status\",\n        \"@pybind11\",\n    ],\n)\n\npy_library(\n    name = \"op_def_registry\",\n    srcs = [\"op_def_registry.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":_op_def_registry\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:pywrap_tensorflow\",\n    ],\n)\n\ncc_library(\n    name = \"py_context_manager\",\n    srcs = [\"py_context_manager.cc\"],\n    hdrs = [\"py_context_manager.h\"],\n    deps = [\n        \"//tensorflow/core:lib\",  # for core/platform/logging.h\n        \"//tensorflow/python/lib/core:safe_pyobject_ptr\",\n        \"//third_party/python_runtime:headers\",\n    ],\n)\n\n# Pybind extension used by py_context_manager_test.\ntf_python_pybind_extension(\n    name = \"_py_context_manager\",\n    srcs = [\"py_context_manager_pybind.cc\"],\n    deps = [\n        \":py_context_manager\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ntf_py_test(\n    name = \"py_context_manager_test\",\n    srcs = [\"py_context_manager_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_pip\"],\n    deps = [\n        \":_py_context_manager\",\n    ],\n)\n\ncc_library(\n    name = \"op_def_util_headers\",\n    textual_hdrs = [\"op_def_util.h\"],\n    visibility = [\"//tensorflow:internal\"],\n)\n\ncc_library(\n    name = \"op_def_util_cc\",\n    srcs = [\"op_def_util.cc\"],\n    hdrs = [\"op_def_util.h\"],\n    deps = [\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/python/lib/core:safe_pyobject_ptr\",\n        \"//tensorflow/python/util:cpp_python_util\",\n        \"//third_party/python_runtime:headers\",  # buildcleaner: keep\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_op_def_util\",\n    srcs = [\"op_def_util_pybind.cc\"],\n    deps = [\n        \":op_def_util_headers\",\n        \"//tensorflow/core:lib_headers_for_pybind\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/python:pybind11_lib\",\n        \"//tensorflow/python/lib/core:safe_pyobject_ptr\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\ntf_py_test(\n    name = \"op_def_util_test\",\n    srcs = [\"op_def_util_test.py\"],\n    python_version = \"PY3\",\n    tags = [\n        \"no_pip\",\n        \"no_windows\",  # TODO(b/184424727): Enable this test on Windows.\n    ],\n)\n\ncc_library(\n    name = \"python_api_parameter_converter\",\n    srcs = [\"python_api_parameter_converter.cc\"],\n    hdrs = [\"python_api_parameter_converter.h\"],\n    deps = [\n        \":op_def_util_cc\",\n        \":python_api_info\",\n        \":python_tensor_converter\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/platform:status\",\n        \"//tensorflow/python/eager:pywrap_tfe_lib\",\n        \"//tensorflow/python/lib/core:safe_pyobject_ptr\",\n        \"//tensorflow/python/util:cpp_python_util\",\n        \"//third_party/python_runtime:headers\",  # buildcleaner: keep\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)\n\n# Note: this target is only used by python_api_parameter_converter_test.\ntf_python_pybind_extension(\n    name = \"_pywrap_python_api_parameter_converter\",\n    srcs = [\"python_api_parameter_converter_wrapper.cc\"],\n    hdrs = [\n        \"op_def_util.h\",\n        \"python_api_info.h\",\n        \"python_api_parameter_converter.h\",\n        \"python_tensor_converter.h\",\n        \"//tensorflow/c:headers\",\n        \"//tensorflow/c/eager:pywrap_required_hdrs\",\n        \"//tensorflow/c/experimental/ops:pywrap_required_hdrs\",\n        \"//tensorflow/core/common_runtime/eager:pywrap_required_hdrs\",\n        \"//tensorflow/core/distributed_runtime:pywrap_required_hdrs\",\n        \"//tensorflow/core/distributed_runtime/coordination:pywrap_required_hdrs\",\n        \"//tensorflow/core/distributed_runtime/eager:pywrap_required_hdrs\",\n        \"//tensorflow/python/eager:pywrap_required_hdrs\",\n        \"//tensorflow/tsl/distributed_runtime:pywrap_required_hdrs\",\n        \"//tensorflow/tsl/distributed_runtime/coordination:pywrap_required_hdrs\",\n        \"//tensorflow/tsl/python/lib/core:numpy_hdr\",\n    ],\n    deps = [\n        \"//tensorflow/python/lib/core:safe_pyobject_ptr_required_hdrs\",\n        \"@com_google_absl//absl/types:optional\",\n        \"@com_google_absl//absl/hash\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/strings\",\n        \"@pybind11\",\n        \"//third_party/python_runtime:headers\",  # buildcleaner: keep\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core/common_runtime:core_cpu_headers_lib\",\n        \"//tensorflow/core/config:flags_headers\",\n        \"//tensorflow/core:lib_headers_for_pybind\",\n        \"//third_party/py/numpy:headers\",\n        \"//tensorflow/c:pywrap_required_hdrs\",\n        \"@com_google_absl//absl/types:span\",\n    ] + if_static(\n        extra_deps = [\n            \"//tensorflow/core/protobuf:eager_service_proto_cc\",\n            \"//tensorflow/core/protobuf:master_proto_cc\",\n            \"//tensorflow/core/protobuf:worker_proto_cc\",\n            \"//tensorflow/tsl/protobuf:coordination_service_proto_cc\",\n        ],\n        otherwise = [\n            \"//tensorflow/core/protobuf:eager_service_proto_cc_headers_only\",\n            \"//tensorflow/core/protobuf:master_proto_cc_headers_only\",\n            \"//tensorflow/core/protobuf:worker_proto_cc_headers_only\",\n            \"//tensorflow/tsl/protobuf:coordination_service_proto_cc_headers_only\",\n        ],\n    ),\n)\n\ntf_py_test(\n    name = \"python_api_parameter_converter_test\",\n    srcs = [\"python_api_parameter_converter_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_pip\"],\n    deps = [\n        \":_pywrap_python_api_parameter_converter\",\n        \":_pywrap_python_tensor_converter\",\n        \"//tensorflow/python:client_testlib\",\n    ],\n)\n\ncc_library(\n    name = \"python_api_info\",\n    srcs = [\"python_api_info.cc\"],\n    hdrs = [\"python_api_info.h\"],\n    deps = [\n        \":op_def_util_cc\",\n        \":python_tensor_converter\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/platform:status\",\n        \"//tensorflow/python/eager:pywrap_tfe_lib\",\n        \"//tensorflow/python/lib/core:safe_pyobject_ptr\",\n        \"//tensorflow/python/util:cpp_python_util\",\n        \"//third_party/python_runtime:headers\",  # buildcleaner: keep\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_absl//absl/types:span\",\n    ],\n)\n\n# Note: this target is only used by python_api_info_test.\ntf_python_pybind_extension(\n    name = \"_pywrap_python_api_info\",\n    srcs = [\"python_api_info_wrapper.cc\"],\n    hdrs = [\n        \"op_def_util.h\",\n        \"python_api_info.h\",\n        \"python_tensor_converter.h\",\n        \"//tensorflow/c:headers\",\n        \"//tensorflow/c/eager:pywrap_required_hdrs\",\n        \"//tensorflow/c/experimental/ops:pywrap_required_hdrs\",\n        \"//tensorflow/core/common_runtime/eager:pywrap_required_hdrs\",\n        \"//tensorflow/core/distributed_runtime:pywrap_required_hdrs\",\n        \"//tensorflow/core/distributed_runtime/coordination:pywrap_required_hdrs\",\n        \"//tensorflow/core/distributed_runtime/eager:pywrap_required_hdrs\",\n        \"//tensorflow/python/eager:pywrap_required_hdrs\",\n        \"//tensorflow/tsl/distributed_runtime:pywrap_required_hdrs\",\n        \"//tensorflow/tsl/distributed_runtime/coordination:pywrap_required_hdrs\",\n        \"//tensorflow/tsl/python/lib/core:numpy_hdr\",\n    ],\n    deps = [\n        \"//tensorflow/python/lib/core:safe_pyobject_ptr_required_hdrs\",\n        \"@com_google_absl//absl/types:optional\",\n        \"@com_google_absl//absl/hash\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/strings\",\n        \"@pybind11\",\n        \"//third_party/python_runtime:headers\",  # buildcleaner: keep\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core/common_runtime:core_cpu_headers_lib\",\n        \"//tensorflow/core/config:flags_headers\",\n        \"//tensorflow/core:lib_headers_for_pybind\",\n        \"//third_party/py/numpy:headers\",\n        \"//tensorflow/c:pywrap_required_hdrs\",\n        \"@com_google_absl//absl/types:span\",\n    ] + if_static(\n        extra_deps = [\n            \"//tensorflow/tsl/protobuf:coordination_service_proto_cc\",\n            \"//tensorflow/core/protobuf:eager_service_proto_cc\",\n            \"//tensorflow/core/protobuf:master_proto_cc\",\n            \"//tensorflow/core/protobuf:worker_proto_cc\",\n        ],\n        otherwise = [\n            \"//tensorflow/tsl/protobuf:coordination_service_proto_cc_headers_only\",\n            \"//tensorflow/core/protobuf:eager_service_proto_cc_headers_only\",\n            \"//tensorflow/core/protobuf:master_proto_cc_headers_only\",\n            \"//tensorflow/core/protobuf:worker_proto_cc_headers_only\",\n        ],\n    ),\n)\n\ntf_py_test(\n    name = \"python_api_info_test\",\n    srcs = [\"python_api_info_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_pip\"],\n    deps = [\n        \":_pywrap_python_api_info\",\n        \":_pywrap_python_tensor_converter\",\n        \"//tensorflow/python:client_testlib\",\n    ],\n)\n\ncc_library(\n    name = \"python_api_dispatcher\",\n    srcs = [\"python_api_dispatcher.cc\"],\n    hdrs = [\"python_api_dispatcher.h\"],\n    deps = [\n        \"//tensorflow/core:framework_lite\",\n        \"//tensorflow/core/platform:logging\",\n        \"//tensorflow/python/lib/core:py_util\",\n        \"//tensorflow/python/lib/core:safe_pyobject_ptr\",\n        \"//tensorflow/python/util:cpp_python_util\",\n        \"//tensorflow/python/util:function_parameter_canonicalizer\",\n        \"//third_party/python_runtime:headers\",  # buildcleaner: keep\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/container:inlined_vector\",\n        \"@com_google_absl//absl/strings\",\n    ],\n    alwayslink = 1,\n)\n\ntf_python_pybind_extension(\n    name = \"_pywrap_python_api_dispatcher\",\n    srcs = [\"python_api_dispatcher_wrapper.cc\"],\n    hdrs = [\"python_api_dispatcher.h\"],\n    deps = [\n        \"//tensorflow/python/lib/core:safe_pyobject_ptr_required_hdrs\",\n        \"//tensorflow/python/util:function_parameter_canonicalizer_hdrs\",\n        \"//third_party/python_runtime:headers\",  # buildcleaner: keep\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@pybind11\",\n    ],\n)\n\ntf_py_test(\n    name = \"python_api_dispatcher_test\",\n    srcs = [\"python_api_dispatcher_test.py\"],\n    python_version = \"PY3\",\n    tags = [\n        \"no_pip\",\n        \"no_windows\",  # TODO(b/184424727): Enable this test on Windows.\n    ],\n    deps = [\n        \":_pywrap_python_api_dispatcher\",\n        \"//tensorflow/python:client_testlib\",\n    ],\n)\n\ncc_library(\n    name = \"python_tensor_converter\",\n    srcs = [\"python_tensor_converter.cc\"],\n    hdrs = [\"python_tensor_converter.h\"],\n    deps = [\n        \"//tensorflow/c/eager:c_api\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/python/eager:pywrap_tfe_lib\",\n        \"//tensorflow/python/lib/core:safe_pyobject_ptr\",\n        \"//tensorflow/python/util:cpp_python_util\",\n        \"//third_party/python_runtime:headers\",  # buildcleaner: keep\n        \"@com_google_absl//absl/strings\",\n    ],\n)\n\n# Note: this target is only used by python_tensor_converter_test.\ntf_python_pybind_extension(\n    name = \"_pywrap_python_tensor_converter\",\n    srcs = [\"python_tensor_converter_wrapper.cc\"],\n    hdrs = [\n        \"python_tensor_converter.h\",\n        \"//tensorflow/c:headers\",\n        \"//tensorflow/c/eager:pywrap_required_hdrs\",\n        \"//tensorflow/c/experimental/ops:pywrap_required_hdrs\",\n        \"//tensorflow/core/common_runtime/eager:pywrap_required_hdrs\",\n        \"//tensorflow/core/distributed_runtime:pywrap_required_hdrs\",\n        \"//tensorflow/core/distributed_runtime/coordination:pywrap_required_hdrs\",\n        \"//tensorflow/core/distributed_runtime/eager:pywrap_required_hdrs\",\n        \"//tensorflow/python/eager:pywrap_required_hdrs\",\n        \"//tensorflow/tsl/distributed_runtime:pywrap_required_hdrs\",\n        \"//tensorflow/tsl/distributed_runtime/coordination:pywrap_required_hdrs\",\n        \"//tensorflow/tsl/python/lib/core:numpy_hdr\",\n    ],\n    deps = [\n        \"//tensorflow/python/lib/core:safe_pyobject_ptr_required_hdrs\",\n        \"@com_google_absl//absl/types:optional\",\n        \"@com_google_absl//absl/hash\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/strings\",\n        \"@pybind11\",\n        \"//third_party/python_runtime:headers\",  # buildcleaner: keep\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core/common_runtime:core_cpu_headers_lib\",\n        \"//tensorflow/core/config:flags_headers\",\n        \"//tensorflow/core:lib_headers_for_pybind\",\n        \"//third_party/py/numpy:headers\",\n        \"//tensorflow/c:pywrap_required_hdrs\",\n        \"@com_google_absl//absl/types:span\",\n    ] + if_static(\n        extra_deps = [\n            \"//tensorflow/tsl/protobuf:coordination_service_proto_cc\",\n            \"//tensorflow/core/protobuf:eager_service_proto_cc\",\n            \"//tensorflow/core/protobuf:master_proto_cc\",\n            \"//tensorflow/core/protobuf:worker_proto_cc\",\n        ],\n        otherwise = [\n            \"//tensorflow/tsl/protobuf:coordination_service_proto_cc_headers_only\",\n            \"//tensorflow/core/protobuf:eager_service_proto_cc_headers_only\",\n            \"//tensorflow/core/protobuf:master_proto_cc_headers_only\",\n            \"//tensorflow/core/protobuf:worker_proto_cc_headers_only\",\n        ],\n    ),\n)\n\ntf_py_test(\n    name = \"python_tensor_converter_test\",\n    srcs = [\"python_tensor_converter_test.py\"],\n    python_version = \"PY3\",\n    tags = [\"no_pip\"],\n    deps = [\n        \":_pywrap_python_tensor_converter\",\n        \"//tensorflow/python:client_testlib\",\n    ],\n)\n\npy_library(\n    name = \"ops\",  # \"ops\" is already the name of a deprecated target\n    srcs = [\"ops.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":_op_def_util\",\n        \":c_api_util\",\n        \":device\",\n        \":dtypes\",\n        \":error_interpolation\",\n        \":indexed_slices\",\n        \":op_def_registry\",\n        \":registry\",\n        \":tensor_conversion_registry\",\n        \":tensor_shape\",\n        \":traceable_stack\",\n        \":type_spec\",\n        \":versions\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:control_flow_util\",\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python:tf2\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:core\",\n        \"//tensorflow/python/eager:monitoring\",\n        \"//tensorflow/python/eager:tape\",\n        \"//tensorflow/python/profiler:trace\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\npy_library(\n    name = \"op_callbacks\",\n    srcs = [\"op_callbacks.py\"],\n    srcs_version = \"PY3\",\n)\n\ncuda_py_test(\n    name = \"op_callbacks_test\",\n    srcs = [\"op_callbacks_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":sparse_tensor\",\n        \":test_lib\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:control_flow_ops\",\n        \"//tensorflow/python:script_ops\",\n        \"//tensorflow/python:sparse_ops\",\n        \"//tensorflow/python/eager:execute\",\n        \"//tensorflow/python/eager:test\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"indexed_slices\",\n    srcs = [\"indexed_slices.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":composite_tensor\",\n        \":composite_tensor_gradient\",\n        \":dtypes\",\n        \":tensor_conversion_registry\",\n        \":tensor_shape\",\n        \":type_spec\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/types\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\ntf_py_test(\n    name = \"indexed_slices_test\",\n    srcs = [\"indexed_slices_test.py\"],\n    deps = [\n        \":composite_tensor_gradient\",\n        \"//tensorflow/python:ops\",\n        \"//tensorflow/python/platform:test\",\n    ],\n)\n\npy_library(\n    name = \"tensor_conversion_registry\",\n    srcs = [\"tensor_conversion_registry.py\"],\n    srcs_version = \"PY3\",\n    # TODO(b/266747022): remove extra visibility\n    visibility = visibility + [\"//learning/brain/experimental:__subpackages__\"],\n    deps = [\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\npy_library(\n    name = \"func_graph\",\n    srcs = [\"func_graph.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":auto_control_deps\",\n        \":composite_tensor\",\n        \":constant_op\",\n        \":dtypes\",\n        \":errors\",\n        \":indexed_slices\",\n        \":ops\",\n        \":tensor_spec\",\n        \":tensor_util\",\n        \":type_spec\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/core/function/capture:capture_container\",\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:handle_data_util\",\n        \"//tensorflow/python:resource_variable_ops\",\n        \"//tensorflow/python:tensor_array_ops\",\n        \"//tensorflow/python:variable_scope\",\n        \"//tensorflow/python/autograph\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:execute\",\n        \"//tensorflow/python/eager:graph_only_ops\",\n        \"//tensorflow/python/eager:tape\",\n        \"//tensorflow/python/platform\",\n        \"//tensorflow/python/saved_model:save_context\",\n        \"//tensorflow/python/types\",\n        \"//tensorflow/python/util\",\n        \"//tensorflow/python/util:tf_decorator\",\n        \"//tensorflow/python/util:tf_export\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"auto_control_deps\",\n    srcs = [\"auto_control_deps.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":auto_control_deps_utils\",\n        \":ops\",\n        \":sparse_tensor\",\n        \"//tensorflow/python:control_flow_ops\",\n        \"//tensorflow/python:tensor_array_ops\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\npy_library(\n    name = \"auto_control_deps_utils\",\n    srcs = [\"auto_control_deps_utils.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":dtypes\",\n    ],\n)\n\ntf_py_test(\n    name = \"auto_control_deps_test\",\n    size = \"small\",\n    srcs = [\"auto_control_deps_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":auto_control_deps\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:sendrecv_ops_gen\",\n    ],\n)\n\npy_library(\n    name = \"config\",\n    srcs = [\"config.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":errors\",\n        \":ops\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\ncuda_py_test(\n    name = \"config_test\",\n    size = \"small\",\n    srcs = [\"config_test.py\"],\n    python_version = \"PY3\",\n    tags = [\n        \"multi_gpu\",\n        \"no_pip\",\n    ],  # test_ops are not available in pip.\n    deps = [\n        \":config\",\n        \":constant_op\",\n        \":dtypes\",\n        \":errors\",\n        \":framework\",\n        \":ops\",\n        \":test_lib\",\n        \":test_ops\",\n        \"@absl_py//absl/testing:parameterized\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:def_function\",\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python/util\",\n    ] + tf_additional_xla_deps_py(),\n)\n\ncuda_py_test(\n    name = \"config_vgpu_test\",\n    size = \"small\",\n    srcs = [\"config_vgpu_test.py\"],\n    python_version = \"PY3\",\n    shard_count = 10,  # use a large number to ensure no 2 tests run in the same process.\n    tags = [\n        \"multi_gpu\",\n        \"no_pip\",\n    ],  # test_ops are not available in pip.\n    deps = [\n        \":config\",\n        \":constant_op\",\n        \":errors\",\n        \":ops\",\n        \":test_lib\",\n        \"@absl_py//absl/testing:parameterized\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/platform:client_testlib\",\n    ] + tf_additional_xla_deps_py(),\n)\n\ntpu_py_test(\n    name = \"config_test_tpu\",\n    size = \"small\",\n    srcs = [\"config_test.py\"],\n    disable_tfrt = True,  # TODO(tfrt-devs): Update this test to call initialize_tpu_system\n    main = \"config_test.py\",\n    python_version = \"PY3\",\n    tags = [\"no_pip\"],  # test_ops are not available in pip.\n    deps = [\n        \":config\",\n        \":constant_op\",\n        \":test_ops\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python/util\",\n    ] + tf_additional_xla_deps_py(),\n)\n\npy_library(\n    name = \"random_seed\",\n    srcs = [\"random_seed.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":config\",\n        \":ops\",\n    ],\n)\n\npy_library(\n    name = \"registry\",\n    srcs = [\"registry.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python/util\",\n        # TODO(mdan): Remove this once the transitive dependency is fixed.\n        \"//tensorflow/python/util:tf_stack\",\n    ],\n)\n\npy_library(\n    name = \"smart_cond\",\n    srcs = [\"smart_cond.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":tensor_util\",\n        \"//tensorflow/python:control_flow_ops\",\n        \"//tensorflow/python:pywrap_tf_session\",\n    ],\n)\n\ntf_py_test(\n    name = \"smart_cond_test\",\n    size = \"small\",\n    srcs = [\"smart_cond_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":constant_op\",\n        \":ops\",\n        \":smart_cond\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python:session\",\n    ],\n)\n\npy_library(\n    name = \"sparse_tensor\",\n    srcs = [\"sparse_tensor.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":composite_tensor\",\n        \":dtypes\",\n        \":ops\",\n        \":tensor_util\",\n        \":type_spec\",\n        \"//tensorflow/python/types\",\n    ],\n)\n\npy_library(\n    name = \"composite_tensor\",\n    srcs = [\"composite_tensor.py\"],\n    srcs_version = \"PY3\",\n    visibility = visibility,\n    deps = [\n        \":dtypes\",\n        \":tensor_util\",\n    ],\n)\n\npy_test(\n    name = \"composite_tensor_test\",\n    srcs = [\"composite_tensor_test.py\"],\n    main = \"composite_tensor_test.py\",\n    python_version = \"PY3\",\n    srcs_version = \"PY3\",\n    deps = [\n        \":composite_tensor\",\n        \":for_generated_wrappers\",\n        \":framework\",\n        \":test_lib\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:platform_test\",\n    ],\n)\n\npy_library(\n    name = \"composite_tensor_gradient\",\n    srcs = [\"composite_tensor_gradient.py\"],\n    deps = [\n        \":composite_tensor\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\npy_library(\n    name = \"extension_type\",\n    srcs = [\"extension_type.py\"],\n    srcs_version = \"PY3\",\n    visibility = visibility,\n    deps = [\n        \":dtypes\",\n        \":extension_type_field\",\n        \":immutable_dict\",\n        \":ops\",\n        \":tensor_shape\",\n        \":tensor_spec\",\n        \":type_spec\",\n        # TODO(b/232002704) remove `:type_utils` import when used internally (by non-tests)\n        # elsewhere\n        \":type_utils\",\n        \"//tensorflow/python:composite_tensor_ops\",\n    ],\n)\n\npy_library(\n    name = \"extension_type_field\",\n    srcs = [\"extension_type_field.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":dtypes\",\n        \":immutable_dict\",\n        \":ops\",\n        \":tensor_shape\",\n        \":tensor_spec\",\n        \":type_spec\",\n    ],\n)\n\npy_library(\n    name = \"immutable_dict\",\n    srcs = [\"immutable_dict.py\"],\n    srcs_version = \"PY3\",\n    deps = [],\n)\n\npy_library(\n    name = \"tensor_shape\",\n    srcs = [\"tensor_shape.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":dtypes\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/core/function/trace_type\",\n        \"//tensorflow/python:tf2\",\n        \"//tensorflow/python/eager:monitoring\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\npytype_library(\n    name = \"type_spec\",\n    srcs = [\"type_spec.py\"],\n    srcs_version = \"PY3\",\n    visibility = visibility,\n    deps = [\n        \":composite_tensor\",\n        \":dtypes\",\n        \":tensor_shape\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/core/function/trace_type\",\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python/types\",\n        \"//tensorflow/python/util\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npytype_library(\n    name = \"type_utils\",\n    srcs = [\"type_utils.py\"],\n    srcs_version = \"PY3\",\n    visibility = [\n        # Limit the exposure of fulltype (which is a graph/C++ concept) to Python.\n        \"//tensorflow/python/data/ops:__pkg__\",\n        \"//tensorflow/python/ops/ragged:__pkg__\",\n        \"//tensorflow/python/ops/structured:__pkg__\",\n    ],\n    deps = [\n        \":type_spec\",\n        \"//tensorflow/python/ops/ragged:ragged_tensor\",\n        \"//tensorflow/python/ops/structured:structured_tensor\",\n    ],\n)\n\npy_library(\n    name = \"tensor_spec\",\n    srcs = [\"tensor_spec.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":common_shapes\",\n        \":dtypes\",\n        \":tensor_shape\",\n        \":type_spec\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/core/function/trace_type\",\n        \"//tensorflow/python/eager:graph_only_ops\",\n        \"//tensorflow/python/platform\",\n        \"//tensorflow/python/types\",\n        \"//tensorflow/python/util\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\npy_library(\n    name = \"tensor_util\",\n    srcs = [\"tensor_util.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":errors\",\n        \":tensor_shape\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python/types\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\npy_library(\n    name = \"traceable_stack\",\n    srcs = [\"traceable_stack.py\"],\n    srcs_version = \"PY3\",\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"//tensorflow/python/util\",\n    ],\n)\n\npy_library(\n    name = \"versions\",\n    srcs = [\"versions.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \"//tensorflow/python:pywrap_tf_session\",\n    ],\n)\n\npy_library(\n    name = \"gpu_util\",\n    srcs = [\"gpu_util.py\"],\n    srcs_version = \"PY3\",\n    deps = [],\n)\n\npy_library(\n    name = \"test_lib\",\n    srcs = [\"test_util.py\"],\n    srcs_version = \"PY3\",\n    visibility = visibility + [\n        \"//tensorflow_estimator/python/estimator:__subpackages__\",\n        \"//third_party/py/keras:__subpackages__\",\n    ],\n    deps = [\n        \":_test_metrics_util\",\n        \":errors\",\n        \":for_generated_wrappers\",\n        \":gpu_util\",\n        \":random_seed\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/core/config:flags_py\",\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:client\",\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python:platform_test\",\n        \"//tensorflow/python:pywrap_sanitizers\",\n        \"//tensorflow/python:pywrap_tf_session\",\n        \"//tensorflow/python:resource_variable_ops\",\n        \"//tensorflow/python:session\",\n        \"//tensorflow/python:sync_ops_gen\",\n        \"//tensorflow/python:tensor_array_ops\",\n        \"//tensorflow/python:training\",\n        \"//tensorflow/python:variables\",\n        \"//tensorflow/python/eager:backprop\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:tape\",\n        \"//tensorflow/python/ops/ragged:ragged_ops\",\n        \"//tensorflow/python/ops/ragged:ragged_tensor\",\n        \"//tensorflow/python/ops/ragged:ragged_tensor_value\",\n        \"//tensorflow/python/platform:_pywrap_stacktrace_handler\",\n        \"//tensorflow/python/util\",\n        \"//third_party/py/numpy\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\n# Including this as a dependency will result in tests using\n# :test_lib to use XLA.\npy_library(\n    name = \"is_xla_test_true\",\n    srcs = [\"is_xla_test_true.py\"],\n    srcs_version = \"PY3\",\n    visibility = visibility + [\n        \"//tensorflow:internal\",\n        \"//third_party/py/keras:__subpackages__\",\n        \"//third_party/py/keras_cv:__subpackages__\",\n    ],\n)\n\n# Including this as a dependency will result in tests using\n# :test_lib to use MLIR.\npy_library(\n    name = \"is_mlir_bridge_test_true\",\n    srcs = [\"is_mlir_bridge_test_true.py\"],\n    srcs_version = \"PY3\",\n    visibility = visibility,\n)\n\n# Including this as a dependency will result in tests using\n# :test_lib to NOT use MLIR.\npy_library(\n    name = \"is_mlir_bridge_test_false\",\n    srcs = [\"is_mlir_bridge_test_false.py\"],\n    srcs_version = \"PY3\",\n    visibility = visibility,\n)\n\npy_library(\n    name = \"tfrt_utils\",\n    srcs = [\"tfrt_utils.py\"],\n    srcs_version = \"PY3\",\n)\n\npy_library(\n    name = \"combinations\",\n    srcs = [\"combinations.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \":ops\",\n        \":test_combinations_lib\",\n        \"//tensorflow/python:tf2\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\npy_library(\n    name = \"test_combinations_lib\",\n    srcs = [\"test_combinations.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \"//tensorflow/python/util\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\npy_test(\n    name = \"test_combinations_test\",\n    srcs = [\"test_combinations_test.py\"],\n    python_version = \"PY3\",\n    srcs_version = \"PY3\",\n    deps = [\n        \":test_combinations_lib\",\n        \"//tensorflow/python/eager:test\",\n    ],\n)\n\npy_library(\n    name = \"memory_checker\",\n    srcs = [\n        \"memory_checker.py\",\n        \"python_memory_checker.py\",\n    ],\n    srcs_version = \"PY3\",\n    deps = [\n        \":_python_memory_checker_helper\",\n        \"//tensorflow/python/profiler:trace\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_python_memory_checker_helper\",\n    srcs = [\"python_memory_checker_helper.cc\"],\n    deps = [\n        \"@pybind11\",\n    ],\n)\n\ntf_py_test(\n    name = \"constant_op_test\",\n    size = \"small\",\n    srcs = [\"constant_op_test.py\"],\n    main = \"constant_op_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":constant_op\",\n        \"@absl_py//absl/testing:parameterized\",\n        \"//tensorflow/python/eager:def_function\",\n        \"//tensorflow/python/platform:client_testlib\",\n    ] + tf_additional_xla_deps_py(),\n)\n\ntf_py_test(\n    name = \"registry_test\",\n    size = \"small\",\n    srcs = [\"registry_test.py\"],\n    main = \"registry_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":for_generated_wrappers\",\n        \"//tensorflow/python:client_testlib\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\ntf_py_test(\n    name = \"errors_test\",\n    size = \"small\",\n    srcs = [\"errors_test.py\"],\n    main = \"errors_test.py\",\n    python_version = \"PY3\",\n    tags = [\"no_windows\"],  # TODO(b/184424727): Enable this test on Windows.\n    deps = [\n        \":_errors_test_helper\",\n        \":errors\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:client_testlib\",\n    ],\n)\n\ntf_py_test(\n    name = \"error_interpolation_test\",\n    size = \"small\",\n    srcs = [\"error_interpolation_test.py\"],\n    main = \"error_interpolation_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":constant_op\",\n        \":error_interpolation\",\n        \":traceable_stack\",\n        \"//tensorflow/python:client_testlib\",\n    ],\n)\n\ntf_py_test(\n    name = \"subscribe_test\",\n    size = \"small\",\n    srcs = [\"subscribe_test.py\"],\n    main = \"subscribe_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":for_generated_wrappers\",\n        \":framework\",\n        \":subscribe\",\n        \":test_lib\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python:platform_test\",\n        \"//tensorflow/python:script_ops\",\n    ],\n)\n\ntf_py_test(\n    name = \"proto_test\",\n    size = \"small\",\n    srcs = [\"proto_test.py\"],\n    main = \"proto_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":for_generated_wrappers\",\n        \"//tensorflow/python:client_testlib\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"function_test\",\n    size = \"medium\",\n    srcs = [\"function_test.py\"],\n    python_version = \"PY3\",\n    shard_count = 10,\n    tags = [\n        \"no_rocm\",\n        \"noasan\",\n        \"optonly\",\n    ],\n    deps = [\n        \":errors\",\n        \":for_generated_wrappers\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:client\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:clip_ops\",\n        \"//tensorflow/python:control_flow_ops\",\n        \"//tensorflow/python:functional_ops\",\n        \"//tensorflow/python:gradients\",\n        \"//tensorflow/python:init_ops\",\n        \"//tensorflow/python:logging_ops\",\n        \"//tensorflow/python:logging_ops_gen\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python:nn_ops\",\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python:random_ops\",\n        \"//tensorflow/python:variable_scope\",\n        \"//tensorflow/python:variables\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"versions_test\",\n    size = \"small\",\n    srcs = [\"versions_test.py\"],\n    main = \"versions_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":for_generated_wrappers\",\n        \"//tensorflow/python:client_testlib\",\n    ],\n)\n\ntf_py_test(\n    name = \"importer_test\",\n    size = \"small\",\n    srcs = [\"importer_test.py\"],\n    main = \"importer_test.py\",\n    python_version = \"PY3\",\n    tags = [\"no_rocm\"],\n    deps = [\n        \":for_generated_wrappers\",\n        \":framework\",\n        \":test_ops\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:gradients\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python:nn_grad\",\n        \"//tensorflow/python:nn_ops\",\n        \"//tensorflow/python:random_ops\",\n        \"//tensorflow/python:variables\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\nfilegroup(\n    name = \"meta_graph_testdata\",\n    srcs = [\n        \"testdata/metrics_export_meta_graph.pb\",\n    ],\n    visibility = if_oss([\"//visibility:public\"]),\n)\n\ntf_py_test(\n    name = \"meta_graph_test\",\n    size = \"small\",\n    srcs = [\"meta_graph_test.py\"],\n    data = [\":meta_graph_testdata\"],\n    main = \"meta_graph_test.py\",\n    python_version = \"PY3\",\n    tags = [\n        \"no_pip\",\n        \"no_windows\",\n    ],\n    deps = [\n        \":for_generated_wrappers\",\n        \":framework\",\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:control_flow_ops\",\n        \"//tensorflow/python:data_flow_ops\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python:metrics\",\n        \"//tensorflow/python:nn_ops\",\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python:random_ops\",\n        \"//tensorflow/python:training\",\n        \"//tensorflow/python:variables\",\n    ],\n)\n\ncuda_py_test(\n    name = \"node_file_writer_test\",\n    size = \"small\",\n    srcs = [\"node_file_writer_test.py\"],\n    python_version = \"PY3\",\n    # On Windows, fails in tempfile.TemporaryDirectory.cleanup() with error: \"The directory is not\n    # empty\", so test is disabled on Windows.\n    # TODO(reedwm): Debug this.\n    tags = [\"no_windows\"],\n    deps = [\n        \":test_ops\",\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\ntf_py_test(\n    name = \"traceable_stack_test\",\n    size = \"small\",\n    srcs = [\"traceable_stack_test.py\"],\n    main = \"traceable_stack_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":test_lib\",\n        \":test_ops\",\n        \":traceable_stack\",\n        \"//tensorflow/python:platform_test\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\ntf_gen_op_wrapper_py(\n    name = \"test_ops\",\n    out = \"test_ops.py\",\n    deps = [\":test_ops_kernels\"],\n)\n\ntf_kernel_library(\n    name = \"test_ops_kernels\",\n    srcs = [\"test_ops.cc\"],\n    hdrs = [\"test_ops.h\"],\n    gpu_srcs = [\"test_ops.cu.cc\"],\n    deps = [\n        \"@com_google_absl//absl/time\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",\n    ] + if_static([\"//tensorflow/core/platform:tensor_float_32_utils\"]),\n    alwayslink = 1,\n)\n\ntf_gen_op_wrapper_py(\n    name = \"test_ops_2\",\n    out = \"test_ops_2.py\",\n    deps = [\":test_ops_2_kernels\"],\n)\n\ncc_library(\n    name = \"test_ops_2_kernels\",\n    srcs = [\"test_ops_2.cc\"],\n    linkstatic = 1,\n    deps = [\"//tensorflow/core:framework\"],\n    alwayslink = 1,\n)\n\ntf_py_test(\n    name = \"common_shapes_test\",\n    size = \"small\",\n    srcs = [\"common_shapes_test.py\"],\n    main = \"common_shapes_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":for_generated_wrappers\",\n        \":framework\",\n        \":test_lib\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:platform_test\",\n    ],\n)\n\ntf_py_test(\n    name = \"ops_test\",\n    size = \"small\",\n    srcs = [\"ops_test.py\"],\n    main = \"ops_test.py\",\n    python_version = \"PY3\",\n    tags = [\"no_pip\"],  # test_ops_2 is not available in pip.\n    deps = [\n        \":errors\",\n        \":for_generated_wrappers\",\n        \":framework\",\n        \":test_lib\",\n        \":test_ops\",\n        \":test_ops_2\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/core/function/trace_type\",\n        \"//tensorflow/python:cond_v2\",\n        \"//tensorflow/python:control_flow_ops\",\n        \"//tensorflow/python:gradients\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python:platform_test\",\n        \"//tensorflow/python:resources\",\n        \"//tensorflow/python:variable_scope\",\n        \"//tensorflow/python:variables\",\n        \"//tensorflow/python:while_v2\",\n        \"//tensorflow/python/eager:context\",\n        \"//tensorflow/python/eager:function\",\n        \"//tensorflow/python/util\",\n    ],\n)\n\ntf_py_test(\n    name = \"ops_enable_eager_test\",\n    size = \"small\",\n    srcs = [\"ops_enable_eager_test.py\"],\n    main = \"ops_enable_eager_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework\",\n        \"//tensorflow/python:platform_test\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\ntf_py_test(\n    name = \"extension_type_test\",\n    size = \"small\",\n    srcs = [\"extension_type_test.py\"],\n    main = \"extension_type_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":extension_type\",\n        \":test_lib\",\n        \":type_utils\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\ntf_py_test(\n    name = \"extension_type_field_test\",\n    size = \"small\",\n    srcs = [\"extension_type_field_test.py\"],\n    main = \"extension_type_field_test.py\",\n    python_version = \"PY3\",\n    tags = [\"no_pip\"],  # TODO(b/184565242) Enable pip once we add a module that depends on this.\n    deps = [\n        \":extension_type_field\",\n        \":test_lib\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\ntf_py_test(\n    name = \"immutable_dict_test\",\n    size = \"small\",\n    srcs = [\"immutable_dict_test.py\"],\n    main = \"immutable_dict_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":immutable_dict\",\n        \":test_lib\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\ntf_py_test(\n    name = \"tensor_shape_test\",\n    size = \"small\",\n    srcs = [\"tensor_shape_test.py\"],\n    main = \"tensor_shape_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":for_generated_wrappers\",\n        \":test_lib\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/core/function/trace_type\",\n        \"//tensorflow/python:platform_test\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\ntf_py_test(\n    name = \"type_spec_test\",\n    size = \"small\",\n    srcs = [\"type_spec_test.py\"],\n    main = \"type_spec_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":for_generated_wrappers\",\n        \":test_lib\",\n        \":type_spec\",\n        \":type_utils\",\n        \"//tensorflow/core/function/trace_type\",\n        \"//tensorflow/python:platform_test\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"tensor_spec_test\",\n    size = \"small\",\n    srcs = [\"tensor_spec_test.py\"],\n    main = \"tensor_spec_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":for_generated_wrappers\",\n        \":tensor_spec\",\n        \":test_lib\",\n        \":type_utils\",\n        \"//tensorflow/python:platform_test\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"sparse_tensor_test\",\n    size = \"small\",\n    srcs = [\"sparse_tensor_test.py\"],\n    main = \"sparse_tensor_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":for_generated_wrappers\",\n        \":framework\",\n        \":test_lib\",\n        \":type_utils\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python:platform_test\",\n    ],\n)\n\ntf_py_test(\n    name = \"device_spec_test\",\n    size = \"small\",\n    srcs = [\"device_spec_test.py\"],\n    main = \"device_spec_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":for_generated_wrappers\",\n        \":test_lib\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:platform_test\",\n    ],\n)\n\ntf_py_test(\n    name = \"device_test\",\n    size = \"small\",\n    srcs = [\"device_test.py\"],\n    main = \"device_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":for_generated_wrappers\",\n        \":test_lib\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:platform_test\",\n    ],\n)\n\ntf_py_test(\n    name = \"random_seed_test\",\n    size = \"small\",\n    srcs = [\"random_seed_test.py\"],\n    main = \"random_seed_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":framework\",\n        \"//tensorflow/python:client_testlib\",\n    ],\n)\n\ntf_py_test(\n    name = \"tensor_util_test\",\n    size = \"small\",\n    srcs = [\"tensor_util_test.py\"],\n    main = \"tensor_util_test.py\",\n    python_version = \"PY3\",\n    tags = [\n        \"no_windows\",\n    ],\n    deps = [\n        \":for_generated_wrappers\",\n        \":framework\",\n        \":test_lib\",\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python:state_ops_gen\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ncuda_py_test(\n    name = \"test_util_test\",\n    size = \"small\",\n    srcs = [\"test_util_test.py\"],\n    main = \"test_util_test.py\",\n    python_version = \"PY3\",\n    tags = [\"no_windows\"],\n    deps = [\n        \":combinations\",\n        \":errors\",\n        \":for_generated_wrappers\",\n        \":test_lib\",\n        \":test_ops\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:control_flow_ops\",\n        \"//tensorflow/python:lookup_ops\",\n        \"//tensorflow/python:platform_test\",\n        \"//tensorflow/python:random_ops\",\n        \"//tensorflow/python:resource_variable_ops\",\n        \"//tensorflow/python:session\",\n        \"//tensorflow/python:variables\",\n        \"//tensorflow/python/eager:context\",\n        \"//third_party/py/numpy\",\n        \"@absl_py//absl/testing:parameterized\",\n    ],\n)\n\ntf_py_test(\n    name = \"memory_checker_test\",\n    size = \"medium\",\n    srcs = [\"memory_checker_test.py\"],\n    main = \"memory_checker_test.py\",\n    python_version = \"PY3\",\n    shard_count = 8,\n    tags = [\n        \"no_oss\",\n        \"no_pip\",\n        \"no_windows\",\n        \"noasan\",  # TODO(b/149948895): Re-enable.\n        \"nomsan\",  # TODO(b/149948895): Re-enable.\n        \"notsan\",  # TODO(b/149948895): Re-enable.\n    ],\n    deps = [\n        \":test_lib\",\n        # TODO(kkb): Find more appropriate place to add `memory_checker` as deps\n        # Adding directly to `test_lib` caused a Colab binary size\n        # regression b/149433910 .\n        \":memory_checker\",\n        \":_memory_checker_test_helper\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_memory_checker_test_helper\",\n    srcs = [\"memory_checker_test_helper.cc\"],\n    deps = [\n        \"@pybind11\",\n    ],\n)\n\ntf_py_test(\n    name = \"dtypes_test\",\n    size = \"small\",\n    srcs = [\"dtypes_test.py\"],\n    main = \"dtypes_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":for_generated_wrappers\",\n        \":test_lib\",\n        \"//tensorflow:tensorflow_py\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/core/function/trace_type\",\n        \"//tensorflow/python:platform_test\",\n        \"//third_party/py/numpy\",\n    ],\n)\n\ntf_py_test(\n    name = \"op_def_library_test\",\n    size = \"small\",\n    srcs = [\"op_def_library_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":for_generated_wrappers\",\n        \":op_def_library_pybind\",\n        \":test_lib\",\n        \"//tensorflow/python:platform_test\",\n    ],\n)\n\ntf_py_test(\n    name = \"kernels_test\",\n    size = \"small\",\n    srcs = [\"kernels_test.py\"],\n    main = \"kernels_test.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":kernels\",\n        \":test_lib\",\n        \":test_ops\",\n        \"//tensorflow/python:platform_test\",\n    ],\n)\n\ntf_proto_library(\n    name = \"cpp_shape_inference_proto\",\n    srcs = [\"cpp_shape_inference.proto\"],\n    cc_api_version = 2,\n    protodeps = tf_additional_all_protos(),\n    # TODO(b/74620627): remove when _USE_C_SHAPES is removed\n    visibility = [\"//tensorflow:internal\"],\n)\n\ntf_python_pybind_extension(\n    name = \"_errors_test_helper\",\n    srcs = [\"errors_test_helper.cc\"],\n    deps = [\n        \"//tensorflow/python/lib/core:pybind11_status\",\n        \"@pybind11\",\n    ],\n)\n\ntf_py_test(\n    name = \"c_api_util_test\",\n    size = \"small\",\n    srcs = [\"c_api_util_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":c_api_util\",\n        \":test_lib\",\n        \"//tensorflow/python:platform_test\",\n    ],\n)\n\ntf_py_test(\n    name = \"graph_util_test\",\n    size = \"small\",\n    srcs = [\"graph_util_test.py\"],\n    python_version = \"PY3\",\n    deps = [\n        \":for_generated_wrappers\",\n        \":framework\",\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:client\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:control_flow_v2_toggles\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python:state_ops_gen\",\n        \"//tensorflow/python:variable_scope\",\n        \"//tensorflow/python:variables\",\n    ],\n)\n\ntf_py_test(\n    name = \"convert_to_constants_test\",\n    size = \"medium\",\n    srcs = [\"convert_to_constants_test.py\"],\n    python_version = \"PY3\",\n    shard_count = 4,\n    tags = [\"no_rocm\"],\n    deps = [\n        \":convert_to_constants\",\n        \":test_lib\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:control_flow_v2_toggles\",\n        \"//tensorflow/python:math_ops\",\n    ],\n)\n\ncuda_py_test(\n    name = \"graph_building_benchmark\",\n    size = \"medium\",\n    srcs = [\"graph_building_benchmark.py\"],\n    main = \"graph_building_benchmark.py\",\n    python_version = \"PY3\",\n    deps = [\n        \":dtypes\",\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python:platform_benchmark\",\n        \"//tensorflow/python/eager:context\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_proto_comparators\",\n    srcs = [\"proto_comparators.cc\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:protos_all_cc\",\n        \"//tensorflow/core/platform:errors\",\n        \"//tensorflow/core/platform:protobuf\",\n        \"//tensorflow/python/lib/core:pybind11_status\",\n        \"//third_party/python_runtime:headers\",  # buildcleaner: keep\n        \"@pybind11\",\n    ],\n)\n\npyx_library(\n    name = \"fast_tensor_util\",\n    srcs = [\"fast_tensor_util.pyx\"],\n    cc_deps = [\"//third_party/py/numpy:headers\"],\n    py_deps = [\"//tensorflow/python:util\"],\n)\n\npy_test(\n    name = \"tf2_test\",\n    srcs = [\"tf2_test.py\"],\n    python_version = \"PY3\",\n    srcs_version = \"PY3\",\n    deps = [\n        \":combinations\",\n        \"//tensorflow/python:client_testlib\",\n        \"//tensorflow/python:tf2\",\n        \"//tensorflow/python/compat:v2_compat\",\n        \"//tensorflow/python/data/kernel_tests:test_base\",\n    ],\n)\n\ntf_python_pybind_extension(\n    name = \"_test_metrics_util\",\n    srcs = [\"test_metrics_util.cc\"],\n    deps = [\n        \"//tensorflow/core:framework\",\n        \"//third_party/python_runtime:headers\",\n        \"@pybind11\",\n    ],\n)\n\n# copybara:uncomment_begin(google-only)\n# py_proto_library(\n#     name = \"cpp_shape_inference_proto_py_pb2\",\n#     has_services = 0,\n#     api_version = 2,\n#     deps = [\":cpp_shape_inference_proto\"],\n# )\n# copybara:uncomment_end\n\npy_library(\n    name = \"summary_test_util\",\n    testonly = True,\n    srcs = [\"summary_test_util.py\"],\n    srcs_version = \"PY3\",\n    deps = [\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python:lib\",\n        \"//tensorflow/python:platform\",\n    ],\n)"