"/* Copyright 2020 The TensorFlow Authors All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n#include \"tensorflow/tsl/profiler/lib/traceme_encode.h\"\n\n#include <string>\n\n#include \"absl/strings/str_cat.h\"\n#include \"absl/strings/str_format.h\"\n#include \"tensorflow/tsl/platform/platform.h\"\n#include \"tensorflow/tsl/platform/test.h\"\n\nnamespace tsl {\nnamespace profiler {\nnamespace {\n\nTEST(TraceMeEncodeTest, NoArgTest) {\n  EXPECT_EQ(TraceMeEncode(\"Hello!\", {}), \"Hello!\");\n}\n\nTEST(TraceMeEncodeTest, OneArgTest) {\n  EXPECT_EQ(TraceMeEncode(\"Hello\", {{\"context\", \"World\"}}),\n            \"Hello#context=World#\");\n}\n\nTEST(TraceMeEncodeTest, TwoArgsTest) {\n  EXPECT_EQ(TraceMeEncode(\"Hello\", {{\"context\", \"World\"}, {\"request_id\", 42}}),\n            \"Hello#context=World,request_id=42#\");\n}\n\nTEST(TraceMeEncodeTest, ThreeArgsTest) {\n  EXPECT_EQ(TraceMeEncode(\"Hello\", {{\"context\", \"World\"},\n                                    {\"request_id\", 42},\n                                    {\"addr\", absl::Hex(0xdeadbeef)}}),\n            \"Hello#context=World,request_id=42,addr=deadbeef#\");\n}\n\n#if !defined(PLATFORM_WINDOWS)\nTEST(TraceMeEncodeTest, TemporaryStringTest) {\n  EXPECT_EQ(TraceMeEncode(\"Hello\", {{std::string(\"context\"),\n                                     absl::StrCat(\"World:\", 2020)}}),\n            \"Hello#context=World:2020#\");\n}\n#endif\n\n// This can be removed when the absl version has been updated to include\n// AbslStringify for open source builds.\n#if defined(PLATFORM_GOOGLE)\n\nstruct Point {\n  template <typename Sink>\n  friend void AbslStringify(Sink& sink, const Point& p) {\n    absl::Format(&sink, \"(%d, %d)\", p.x, p.y);\n  }\n\n  int x;\n  int y;\n};\n\nTEST(TraceMeEncodeTest, AbslStringifyTest) {\n  EXPECT_EQ(TraceMeEncode(\"Plot\", {{\"point\", Point{10, 20}}}),\n            \"Plot#point=(10, 20)#\");\n}\n\n#endif\n\nTEST(TraceMeEncodeTest, NoNameTest) {\n  EXPECT_EQ(TraceMeEncode({{\"context\", \"World\"}, {\"request_id\", 42}}),\n            \"#context=World,request_id=42#\");\n}\n\n}  // namespace\n}  // namespace profiler\n}  // namespace tsl"