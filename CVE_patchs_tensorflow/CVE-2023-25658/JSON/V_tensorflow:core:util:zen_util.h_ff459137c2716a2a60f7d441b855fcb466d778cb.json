"/* Copyright 2023 The TensorFlow Authors. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\n#ifndef TENSORFLOW_CORE_UTIL_ZEN_UTIL_H_\n#define TENSORFLOW_CORE_UTIL_ZEN_UTIL_H_\n\n#ifdef AMD_ZENDNN\n\n#include \"absl/base/call_once.h\"\n#include \"tensorflow/core/util/env_var.h\"\n\nnamespace tensorflow {\n\nint64_t GetMempool() {\n  static absl::once_flag once;\n  static int64_t mempool = 1;\n  absl::call_once(once, [&] {\n    TF_CHECK_OK(\n        ReadInt64FromEnvVar(\"ZENDNN_ENABLE_MEMPOOL\", mempool, &mempool));\n    return mempool;\n  });\n  return mempool;\n}\n\nbool IsBlockedFormatEnabled() {\n  static absl::once_flag once;\n  static bool blocked_format = false;\n  absl::call_once(once, [&] {\n    TF_CHECK_OK(ReadBoolFromEnvVar(\"ZENDNN_BLOCKED_FORMAT\", blocked_format,\n                                   &blocked_format));\n    return blocked_format;\n  });\n  return blocked_format;\n}\n\n}  // namespace tensorflow\n\n#endif  // AMD_ZENDNN\n#endif  // TENSORFLOW_CORE_UTIL_ZEN_UTIL_H_"