"diff --git a/tensorflow/core/kernels/spectrogram_op_test.cc b/tensorflow/core/kernels/spectrogram_op_test.cc\nindex 380c51e6508..3ffb83a83f4 100644\n--- a/tensorflow/core/kernels/spectrogram_op_test.cc\n+++ b/tensorflow/core/kernels/spectrogram_op_test.cc\n@@ -19,6 +19,8 @@ limitations under the License.\n #include <memory>\n #include <vector>\n \n+#include <gmock/gmock.h>\n+#include <gtest/gtest.h>\n #include \"tensorflow/cc/client/client_session.h\"\n #include \"tensorflow/cc/ops/audio_ops.h\"\n #include \"tensorflow/cc/ops/const_op.h\"\n@@ -29,6 +31,9 @@ limitations under the License.\n #include \"tensorflow/core/kernels/ops_util.h\"\n #include \"tensorflow/core/lib/core/status_test_util.h\"\n #include \"tensorflow/core/platform/test.h\"\n+#include \"tensorflow/tsl/lib/core/status_test_util.h\"\n+#include \"tensorflow/tsl/platform/errors.h\"\n+#include \"tensorflow/tsl/platform/status_matchers.h\"\n \n namespace tensorflow {\n namespace ops {\n@@ -140,6 +145,42 @@ TEST(SpectrogramOpTest, MultichannelTest) {\n   }\n }\n \n+TEST(SpectrogramOpTest, InvalidWindowSize) {\n+  Scope root = Scope::NewRootScope();\n+  const int audio_size = 8;\n+  const int channel_size = 2;\n+  Tensor audio_tensor(DT_FLOAT, TensorShape({audio_size, channel_size}));\n+  test::FillValues<float>(\n+      &audio_tensor, {-1.0f, -1.0f, 0.0f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f, -1.0f,\n+                      -1.0f, 0.0f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f});\n+  Output audio_const_op = Const(root.WithOpName(\"audio_const_op\"),\n+                                Input::Initializer(audio_tensor));\n+  AudioSpectrogram spectrogram_op =\n+      AudioSpectrogram(root.WithOpName(\"spectrogram_op\"), audio_const_op,\n+                       /*window_size=*/1, /*stride=*/1);\n+  EXPECT_THAT(root.status(),\n+              tsl::testing::StatusIs(tsl::error::Code::INVALID_ARGUMENT,\n+                                     ::testing::ContainsRegex(\"window size\")));\n+}\n+\n+TEST(SpectrogramOpTest, InvalidStride) {\n+  Scope root = Scope::NewRootScope();\n+  const int audio_size = 8;\n+  const int channel_size = 2;\n+  Tensor audio_tensor(DT_FLOAT, TensorShape({audio_size, channel_size}));\n+  test::FillValues<float>(\n+      &audio_tensor, {-1.0f, -1.0f, 0.0f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f, -1.0f,\n+                      -1.0f, 0.0f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f});\n+  Output audio_const_op = Const(root.WithOpName(\"audio_const_op\"),\n+                                Input::Initializer(audio_tensor));\n+  AudioSpectrogram spectrogram_op =\n+      AudioSpectrogram(root.WithOpName(\"spectrogram_op\"), audio_const_op,\n+                       /*window_size=*/2, /*stride=*/0);\n+  EXPECT_THAT(root.status(),\n+              tsl::testing::StatusIs(tsl::error::Code::INVALID_ARGUMENT,\n+                                     ::testing::ContainsRegex(\"stride\")));\n+}\n+\n }  // namespace\n }  // namespace ops\n }  // namespace tensorflow"