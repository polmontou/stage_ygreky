"diff --git a/tensorflow/core/lib/gif/gif_io.cc b/tensorflow/core/lib/gif/gif_io.cc\nindex ba4aa1156db..dddb8708c5e 100644\n--- a/tensorflow/core/lib/gif/gif_io.cc\n+++ b/tensorflow/core/lib/gif/gif_io.cc\n@@ -105,7 +105,7 @@ uint8* Decode(const void* srcdata, int datasize,\n   uint8* const dstdata =\n       allocate_output(target_num_frames, width, height, channel);\n   if (!dstdata) return nullptr;\n-  for (int k = 0; k < target_num_frames; k++) {\n+  for (ptrdiff_t k = 0; k < target_num_frames; k++) {\n     uint8* this_dst = dstdata + k * width * channel * height;\n \n     SavedImage* this_image = &gif_file->SavedImages[k];\n@@ -125,10 +125,10 @@ uint8* Decode(const void* srcdata, int datasize,\n \n     if (k > 0) {\n       uint8* last_dst = dstdata + (k - 1) * width * channel * height;\n-      for (int i = 0; i < height; ++i) {\n+      for (ptrdiff_t i = 0; i < height; ++i) {\n         uint8* p_dst = this_dst + i * width * channel;\n         uint8* l_dst = last_dst + i * width * channel;\n-        for (int j = 0; j < width; ++j) {\n+        for (ptrdiff_t j = 0; j < width; ++j) {\n           p_dst[j * channel + 0] = l_dst[j * channel + 0];\n           p_dst[j * channel + 1] = l_dst[j * channel + 1];\n           p_dst[j * channel + 2] = l_dst[j * channel + 2];\n@@ -141,9 +141,9 @@ uint8* Decode(const void* srcdata, int datasize,\n       // If the first frame does not fill the entire canvas then fill the\n       // unoccupied canvas with zeros (black).\n       if (k == 0) {\n-        for (int i = 0; i < height; ++i) {\n+        for (ptrdiff_t i = 0; i < height; ++i) {\n           uint8* p_dst = this_dst + i * width * channel;\n-          for (int j = 0; j < width; ++j) {\n+          for (ptrdiff_t j = 0; j < width; ++j) {\n             p_dst[j * channel + 0] = 0;\n             p_dst[j * channel + 1] = 0;\n             p_dst[j * channel + 2] = 0;\n@@ -165,9 +165,9 @@ uint8* Decode(const void* srcdata, int datasize,\n       return nullptr;\n     }\n \n-    for (int i = imgTop; i < imgBottom; ++i) {\n+    for (ptrdiff_t i = imgTop; i < imgBottom; ++i) {\n       uint8* p_dst = this_dst + i * width * channel;\n-      for (int j = imgLeft; j < imgRight; ++j) {\n+      for (ptrdiff_t j = imgLeft; j < imgRight; ++j) {\n         GifByteType color_index =\n             this_image->RasterBits[(i - img_desc->Top) * (img_desc->Width) +\n                                    (j - img_desc->Left)];"