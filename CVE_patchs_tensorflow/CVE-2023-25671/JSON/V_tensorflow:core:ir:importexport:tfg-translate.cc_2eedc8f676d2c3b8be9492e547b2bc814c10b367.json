"/* Copyright 2021 The TensorFlow Authors. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n==============================================================================*/\n\n#include \"mlir/IR/AsmState.h\"  // from @llvm-project\n#include \"mlir/IR/BuiltinOps.h\"  // from @llvm-project\n#include \"mlir/IR/OwningOpRef.h\"  // from @llvm-project\n#include \"mlir/Support/LogicalResult.h\"  // from @llvm-project\n#include \"mlir/Tools/mlir-translate/MlirTranslateMain.h\"  // from @llvm-project\n#include \"mlir/Tools/mlir-translate/Translation.h\"  // from @llvm-project\n#include \"tensorflow/core/ir/dialect.h\"\n#include \"tensorflow/core/ir/importexport/graphdef_export.h\"\n#include \"tensorflow/core/ir/importexport/graphdef_import.h\"\n#include \"tensorflow/core/ir/importexport/load_proto.h\"\n\nnamespace mlir {\n\nTranslateToMLIRRegistration graphdef_to_mlir(\n    \"graphdef-to-mlir\", \"graphdef-to-mlir\",\n    [](StringRef proto_txt, MLIRContext *context) {\n      tensorflow::GraphDebugInfo debug_info;\n      tensorflow::GraphDef graphdef;\n      tensorflow::Status status = tensorflow::LoadProtoFromBuffer(\n          {proto_txt.data(), proto_txt.size()}, &graphdef);\n      if (!status.ok()) {\n        LOG(ERROR) << status.error_message();\n        return OwningOpRef<mlir::ModuleOp>{};\n      }\n      auto errorOrModule = tfg::ImportGraphDef(context, debug_info, graphdef);\n      if (!errorOrModule.ok()) {\n        LOG(ERROR) << errorOrModule.status();\n        return OwningOpRef<mlir::ModuleOp>{};\n      }\n      return std::move(errorOrModule.value());\n    });\n\nTranslateFromMLIRRegistration mlir_to_graphdef(\n    \"mlir-to-graphdef\", \"mlir-to-graphdef\",\n    [](ModuleOp module, raw_ostream &output) {\n      tensorflow::GraphDef graphdef;\n      tensorflow::Status status =\n          mlir::tfg::ConvertToGraphDef(module, &graphdef);\n      if (!status.ok()) {\n        LOG(ERROR) << \"Error exporting MLIR module to GraphDef: \" << status;\n        return failure();\n      }\n      output << graphdef.DebugString();\n      return success();\n    },\n    [](DialectRegistry &registry) { registry.insert<tfg::TFGraphDialect>(); });\n}  //  namespace mlir\n\nint main(int argc, char **argv) {\n  mlir::registerAsmPrinterCLOptions();\n  return failed(\n      mlir::mlirTranslateMain(argc, argv, \"Graph(Def)<->TFG Translation Tool\"));\n}"